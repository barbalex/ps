
/**
 * Client
**/

import * as runtime from './runtime/library';
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends Prisma.PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};

export type PrismaPromise<T> = runtime.Types.Public.PrismaPromise<T>


/**
 * Model Accounts
 * 
 */
export type Accounts = {
  /**
   * @zod.string.uuid()
   */
  account_id: string
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  type: string | null
  period_start: Date | null
  period_end: Date | null
  projects_label_by: string | null
  label: string | null
}

/**
 * Model Action_report_values
 * 
 */
export type Action_report_values = {
  /**
   * @zod.string.uuid()
   */
  action_report_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  action_report_id: string | null
  /**
   * @zod.string.uuid()
   */
  unit_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  value_integer: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  value_numeric: number | null
  value_text: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Action_reports
 * 
 */
export type Action_reports = {
  /**
   * @zod.string.uuid()
   */
  action_report_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  action_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  year: number | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Action_values
 * 
 */
export type Action_values = {
  /**
   * @zod.string.uuid()
   */
  action_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  action_id: string | null
  /**
   * @zod.string.uuid()
   */
  unit_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  value_integer: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  value_numeric: number | null
  value_text: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Actions
 * 
 */
export type Actions = {
  /**
   * @zod.string.uuid()
   */
  action_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  place_id: string | null
  date: Date | null
  data: Prisma.JsonValue | null
  relevant_for_reports: boolean | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Check_taxa
 * 
 */
export type Check_taxa = {
  /**
   * @zod.string.uuid()
   */
  check_taxon_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  check_id: string | null
  /**
   * @zod.string.uuid()
   */
  taxon_id: string | null
  /**
   * @zod.string.uuid()
   */
  unit_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  value_integer: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  value_numeric: number | null
  value_text: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Check_values
 * 
 */
export type Check_values = {
  /**
   * @zod.string.uuid()
   */
  check_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  check_id: string | null
  /**
   * @zod.string.uuid()
   */
  unit_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  value_integer: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  value_numeric: number | null
  value_text: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Checks
 * 
 */
export type Checks = {
  /**
   * @zod.string.uuid()
   */
  check_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  place_id: string | null
  date: Date | null
  data: Prisma.JsonValue | null
  relevant_for_reports: boolean | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Field_types
 * 
 */
export type Field_types = {
  /**
   * @zod.string.uuid()
   */
  field_type_id: string
  name: string | null
  /**
   * @zod.number.int().gte(-32768).lte(32767)
   */
  sort: number | null
  comment: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Fields
 * 
 */
export type Fields = {
  /**
   * @zod.string.uuid()
   */
  field_id: string
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  table_name: string | null
  /**
   * @zod.string.uuid()
   */
  field_type_id: string | null
  /**
   * @zod.string.uuid()
   */
  widget_type_id: string | null
  name: string | null
  field_label: string | null
  /**
   * @zod.string.uuid()
   */
  list_id: string | null
  preset: string | null
  obsolete: boolean | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Files
 * 
 */
export type Files = {
  /**
   * @zod.string.uuid()
   */
  file_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.string.uuid()
   */
  place_id: string | null
  /**
   * @zod.string.uuid()
   */
  action_id: string | null
  /**
   * @zod.string.uuid()
   */
  check_id: string | null
  name: string | null
  label: string | null
  data: Prisma.JsonValue | null
  mimetype: string | null
  url: string | null
  deleted: boolean | null
}

/**
 * Model Goal_report_values
 * 
 */
export type Goal_report_values = {
  /**
   * @zod.string.uuid()
   */
  goal_report_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  goal_report_id: string | null
  /**
   * @zod.string.uuid()
   */
  unit_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  value_integer: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  value_numeric: number | null
  value_text: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Goal_reports
 * 
 */
export type Goal_reports = {
  /**
   * @zod.string.uuid()
   */
  goal_report_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  goal_id: string | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Goals
 * 
 */
export type Goals = {
  /**
   * @zod.string.uuid()
   */
  goal_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  year: number | null
  name: string | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model List_values
 * 
 */
export type List_values = {
  /**
   * @zod.string.uuid()
   */
  list_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  list_id: string | null
  value: string | null
  obsolete: boolean | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Lists
 * 
 */
export type Lists = {
  /**
   * @zod.string.uuid()
   */
  list_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  name: string | null
  data: Prisma.JsonValue | null
  obsolete: boolean | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Messages
 * 
 */
export type Messages = {
  /**
   * @zod.string.uuid()
   */
  message_id: string
  label: string | null
  date: Date | null
  message: string | null
}

/**
 * Model Observation_sources
 * 
 */
export type Observation_sources = {
  /**
   * @zod.string.uuid()
   */
  observation_source_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  name: string | null
  url: string | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Observations
 * 
 */
export type Observations = {
  /**
   * @zod.string.uuid()
   */
  observation_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  observation_source_id: string | null
  /**
   * @zod.string.uuid()
   */
  place_id: string | null
  id_in_source: string | null
  url: string | null
  observation_data: Prisma.JsonValue | null
  date: Date | null
  author: string | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Persons
 * 
 */
export type Persons = {
  /**
   * @zod.string.uuid()
   */
  person_id: string
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  email: string | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Place_levels
 * 
 */
export type Place_levels = {
  /**
   * @zod.string.uuid()
   */
  place_level_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  level: number | null
  name_singular: string | null
  name_plural: string | null
  name_short: string | null
  reports: boolean | null
  report_values: boolean | null
  actions: boolean | null
  action_values: boolean | null
  action_reports: boolean | null
  checks: boolean | null
  check_values: boolean | null
  check_taxa: boolean | null
  observation_references: boolean | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Place_report_values
 * 
 */
export type Place_report_values = {
  /**
   * @zod.string.uuid()
   */
  place_report_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  place_report_id: string | null
  /**
   * @zod.string.uuid()
   */
  unit_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  value_integer: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  value_numeric: number | null
  value_text: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Place_reports
 * 
 */
export type Place_reports = {
  /**
   * @zod.string.uuid()
   */
  place_report_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  place_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  year: number | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Place_users
 * 
 */
export type Place_users = {
  /**
   * @zod.string.uuid()
   */
  place_user_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  place_id: string | null
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  role: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Places
 * 
 */
export type Places = {
  /**
   * @zod.string.uuid()
   */
  place_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.string.uuid()
   */
  parent_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  level: number | null
  data: Prisma.JsonValue | null
  label: string | null
  files_active_places: boolean | null
  deleted: boolean | null
}

/**
 * Model Project_reports
 * 
 */
export type Project_reports = {
  /**
   * @zod.string.uuid()
   */
  project_report_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  year: number | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Project_users
 * 
 */
export type Project_users = {
  /**
   * @zod.string.uuid()
   */
  project_user_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  role: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Projects
 * 
 */
export type Projects = {
  /**
   * @zod.string.uuid()
   */
  project_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  name: string | null
  label: string | null
  type: string | null
  subproject_name_singular: string | null
  subproject_name_plural: string | null
  subproject_order_by: string | null
  places_label_by: string | null
  places_order_by: Prisma.JsonValue | null
  persons_label_by: string | null
  persons_order_by: string | null
  goal_reports_label_by: string | null
  goal_reports_order_by: string | null
  values_on_multiple_levels: string | null
  multiple_action_values_on_same_level: string | null
  multiple_check_values_on_same_level: string | null
  data: Prisma.JsonValue | null
  files_active_projects: boolean | null
  files_active_projects_reports: boolean | null
  files_active_subprojects: boolean | null
  files_active_subproject_reports: boolean | null
  files_active_places: boolean | null
  files_active_actions: boolean | null
  files_active_checks: boolean | null
  files_active_check_reports: boolean | null
  deleted: boolean | null
}

/**
 * Model Subproject_reports
 * 
 */
export type Subproject_reports = {
  /**
   * @zod.string.uuid()
   */
  subproject_report_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  year: number | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Subproject_taxa
 * 
 */
export type Subproject_taxa = {
  /**
   * @zod.string.uuid()
   */
  subproject_taxon_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.string.uuid()
   */
  taxon_id: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Subproject_users
 * 
 */
export type Subproject_users = {
  /**
   * @zod.string.uuid()
   */
  subproject_user_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  role: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Subprojects
 * 
 */
export type Subprojects = {
  /**
   * @zod.string.uuid()
   */
  subproject_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  name: string | null
  label: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  since_year: number | null
  data: Prisma.JsonValue | null
  deleted: boolean | null
}

/**
 * Model Taxa
 * 
 */
export type Taxa = {
  /**
   * @zod.string.uuid()
   */
  taxon_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  taxonomy_id: string | null
  name: string | null
  id_in_source: string | null
  url: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Taxonomies
 * 
 */
export type Taxonomies = {
  /**
   * @zod.string.uuid()
   */
  taxonomy_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  type: string | null
  name: string | null
  url: string | null
  obsolete: boolean | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Ui_options
 * 
 */
export type Ui_options = {
  /**
   * @zod.string.uuid()
   */
  user_id: string
  designing: boolean | null
  breadcrumbs_overflowing: boolean | null
  navs_overflowing: boolean | null
  tabs: Prisma.JsonValue | null
  label: string | null
}

/**
 * Model Units
 * 
 */
export type Units = {
  /**
   * @zod.string.uuid()
   */
  unit_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  use_for_action_values: boolean | null
  use_for_action_report_values: boolean | null
  use_for_check_values: boolean | null
  use_for_place_report_values: boolean | null
  use_for_goal_report_values: boolean | null
  use_for_subproject_taxa: boolean | null
  use_for_check_taxa: boolean | null
  name: string | null
  summable: boolean | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  sort: number | null
  type: string | null
  /**
   * @zod.string.uuid()
   */
  list_id: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model User_messages
 * 
 */
export type User_messages = {
  /**
   * @zod.string.uuid()
   */
  user_message_id: string
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  /**
   * @zod.string.uuid()
   */
  message_id: string | null
  label: string | null
  read: boolean | null
}

/**
 * Model Users
 * 
 */
export type Users = {
  /**
   * @zod.string.uuid()
   */
  user_id: string
  email: string | null
  /**
   * @zod.string.uuid()
   */
  auth_id: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Widget_types
 * 
 */
export type Widget_types = {
  /**
   * @zod.string.uuid()
   */
  widget_type_id: string
  name: string | null
  needs_list: boolean | null
  /**
   * @zod.number.int().gte(-32768).lte(32767)
   */
  sort: number | null
  comment: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Widgets_for_fields
 * 
 */
export type Widgets_for_fields = {
  /**
   * @zod.string.uuid()
   */
  widget_for_field_id: string
  /**
   * @zod.string.uuid()
   */
  field_type_id: string | null
  /**
   * @zod.string.uuid()
   */
  widget_type_id: string | null
  label: string | null
  deleted: boolean | null
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Accounts
 * const accounts = await prisma.accounts.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Accounts
   * const accounts = await prisma.accounts.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<this, "$connect" | "$disconnect" | "$on" | "$transaction" | "$use">) => Promise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<R>

      /**
   * `prisma.accounts`: Exposes CRUD operations for the **Accounts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.accounts.findMany()
    * ```
    */
  get accounts(): Prisma.AccountsDelegate<GlobalReject>;

  /**
   * `prisma.action_report_values`: Exposes CRUD operations for the **Action_report_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Action_report_values
    * const action_report_values = await prisma.action_report_values.findMany()
    * ```
    */
  get action_report_values(): Prisma.Action_report_valuesDelegate<GlobalReject>;

  /**
   * `prisma.action_reports`: Exposes CRUD operations for the **Action_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Action_reports
    * const action_reports = await prisma.action_reports.findMany()
    * ```
    */
  get action_reports(): Prisma.Action_reportsDelegate<GlobalReject>;

  /**
   * `prisma.action_values`: Exposes CRUD operations for the **Action_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Action_values
    * const action_values = await prisma.action_values.findMany()
    * ```
    */
  get action_values(): Prisma.Action_valuesDelegate<GlobalReject>;

  /**
   * `prisma.actions`: Exposes CRUD operations for the **Actions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Actions
    * const actions = await prisma.actions.findMany()
    * ```
    */
  get actions(): Prisma.ActionsDelegate<GlobalReject>;

  /**
   * `prisma.check_taxa`: Exposes CRUD operations for the **Check_taxa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Check_taxas
    * const check_taxas = await prisma.check_taxa.findMany()
    * ```
    */
  get check_taxa(): Prisma.Check_taxaDelegate<GlobalReject>;

  /**
   * `prisma.check_values`: Exposes CRUD operations for the **Check_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Check_values
    * const check_values = await prisma.check_values.findMany()
    * ```
    */
  get check_values(): Prisma.Check_valuesDelegate<GlobalReject>;

  /**
   * `prisma.checks`: Exposes CRUD operations for the **Checks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Checks
    * const checks = await prisma.checks.findMany()
    * ```
    */
  get checks(): Prisma.ChecksDelegate<GlobalReject>;

  /**
   * `prisma.field_types`: Exposes CRUD operations for the **Field_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Field_types
    * const field_types = await prisma.field_types.findMany()
    * ```
    */
  get field_types(): Prisma.Field_typesDelegate<GlobalReject>;

  /**
   * `prisma.fields`: Exposes CRUD operations for the **Fields** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fields
    * const fields = await prisma.fields.findMany()
    * ```
    */
  get fields(): Prisma.FieldsDelegate<GlobalReject>;

  /**
   * `prisma.files`: Exposes CRUD operations for the **Files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Files
    * const files = await prisma.files.findMany()
    * ```
    */
  get files(): Prisma.FilesDelegate<GlobalReject>;

  /**
   * `prisma.goal_report_values`: Exposes CRUD operations for the **Goal_report_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Goal_report_values
    * const goal_report_values = await prisma.goal_report_values.findMany()
    * ```
    */
  get goal_report_values(): Prisma.Goal_report_valuesDelegate<GlobalReject>;

  /**
   * `prisma.goal_reports`: Exposes CRUD operations for the **Goal_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Goal_reports
    * const goal_reports = await prisma.goal_reports.findMany()
    * ```
    */
  get goal_reports(): Prisma.Goal_reportsDelegate<GlobalReject>;

  /**
   * `prisma.goals`: Exposes CRUD operations for the **Goals** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Goals
    * const goals = await prisma.goals.findMany()
    * ```
    */
  get goals(): Prisma.GoalsDelegate<GlobalReject>;

  /**
   * `prisma.list_values`: Exposes CRUD operations for the **List_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more List_values
    * const list_values = await prisma.list_values.findMany()
    * ```
    */
  get list_values(): Prisma.List_valuesDelegate<GlobalReject>;

  /**
   * `prisma.lists`: Exposes CRUD operations for the **Lists** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lists
    * const lists = await prisma.lists.findMany()
    * ```
    */
  get lists(): Prisma.ListsDelegate<GlobalReject>;

  /**
   * `prisma.messages`: Exposes CRUD operations for the **Messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.messages.findMany()
    * ```
    */
  get messages(): Prisma.MessagesDelegate<GlobalReject>;

  /**
   * `prisma.observation_sources`: Exposes CRUD operations for the **Observation_sources** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Observation_sources
    * const observation_sources = await prisma.observation_sources.findMany()
    * ```
    */
  get observation_sources(): Prisma.Observation_sourcesDelegate<GlobalReject>;

  /**
   * `prisma.observations`: Exposes CRUD operations for the **Observations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Observations
    * const observations = await prisma.observations.findMany()
    * ```
    */
  get observations(): Prisma.ObservationsDelegate<GlobalReject>;

  /**
   * `prisma.persons`: Exposes CRUD operations for the **Persons** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Persons
    * const persons = await prisma.persons.findMany()
    * ```
    */
  get persons(): Prisma.PersonsDelegate<GlobalReject>;

  /**
   * `prisma.place_levels`: Exposes CRUD operations for the **Place_levels** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Place_levels
    * const place_levels = await prisma.place_levels.findMany()
    * ```
    */
  get place_levels(): Prisma.Place_levelsDelegate<GlobalReject>;

  /**
   * `prisma.place_report_values`: Exposes CRUD operations for the **Place_report_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Place_report_values
    * const place_report_values = await prisma.place_report_values.findMany()
    * ```
    */
  get place_report_values(): Prisma.Place_report_valuesDelegate<GlobalReject>;

  /**
   * `prisma.place_reports`: Exposes CRUD operations for the **Place_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Place_reports
    * const place_reports = await prisma.place_reports.findMany()
    * ```
    */
  get place_reports(): Prisma.Place_reportsDelegate<GlobalReject>;

  /**
   * `prisma.place_users`: Exposes CRUD operations for the **Place_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Place_users
    * const place_users = await prisma.place_users.findMany()
    * ```
    */
  get place_users(): Prisma.Place_usersDelegate<GlobalReject>;

  /**
   * `prisma.places`: Exposes CRUD operations for the **Places** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Places
    * const places = await prisma.places.findMany()
    * ```
    */
  get places(): Prisma.PlacesDelegate<GlobalReject>;

  /**
   * `prisma.project_reports`: Exposes CRUD operations for the **Project_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_reports
    * const project_reports = await prisma.project_reports.findMany()
    * ```
    */
  get project_reports(): Prisma.Project_reportsDelegate<GlobalReject>;

  /**
   * `prisma.project_users`: Exposes CRUD operations for the **Project_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_users
    * const project_users = await prisma.project_users.findMany()
    * ```
    */
  get project_users(): Prisma.Project_usersDelegate<GlobalReject>;

  /**
   * `prisma.projects`: Exposes CRUD operations for the **Projects** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.projects.findMany()
    * ```
    */
  get projects(): Prisma.ProjectsDelegate<GlobalReject>;

  /**
   * `prisma.subproject_reports`: Exposes CRUD operations for the **Subproject_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subproject_reports
    * const subproject_reports = await prisma.subproject_reports.findMany()
    * ```
    */
  get subproject_reports(): Prisma.Subproject_reportsDelegate<GlobalReject>;

  /**
   * `prisma.subproject_taxa`: Exposes CRUD operations for the **Subproject_taxa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subproject_taxas
    * const subproject_taxas = await prisma.subproject_taxa.findMany()
    * ```
    */
  get subproject_taxa(): Prisma.Subproject_taxaDelegate<GlobalReject>;

  /**
   * `prisma.subproject_users`: Exposes CRUD operations for the **Subproject_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subproject_users
    * const subproject_users = await prisma.subproject_users.findMany()
    * ```
    */
  get subproject_users(): Prisma.Subproject_usersDelegate<GlobalReject>;

  /**
   * `prisma.subprojects`: Exposes CRUD operations for the **Subprojects** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subprojects
    * const subprojects = await prisma.subprojects.findMany()
    * ```
    */
  get subprojects(): Prisma.SubprojectsDelegate<GlobalReject>;

  /**
   * `prisma.taxa`: Exposes CRUD operations for the **Taxa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Taxas
    * const taxas = await prisma.taxa.findMany()
    * ```
    */
  get taxa(): Prisma.TaxaDelegate<GlobalReject>;

  /**
   * `prisma.taxonomies`: Exposes CRUD operations for the **Taxonomies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Taxonomies
    * const taxonomies = await prisma.taxonomies.findMany()
    * ```
    */
  get taxonomies(): Prisma.TaxonomiesDelegate<GlobalReject>;

  /**
   * `prisma.ui_options`: Exposes CRUD operations for the **Ui_options** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ui_options
    * const ui_options = await prisma.ui_options.findMany()
    * ```
    */
  get ui_options(): Prisma.Ui_optionsDelegate<GlobalReject>;

  /**
   * `prisma.units`: Exposes CRUD operations for the **Units** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Units
    * const units = await prisma.units.findMany()
    * ```
    */
  get units(): Prisma.UnitsDelegate<GlobalReject>;

  /**
   * `prisma.user_messages`: Exposes CRUD operations for the **User_messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_messages
    * const user_messages = await prisma.user_messages.findMany()
    * ```
    */
  get user_messages(): Prisma.User_messagesDelegate<GlobalReject>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<GlobalReject>;

  /**
   * `prisma.widget_types`: Exposes CRUD operations for the **Widget_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Widget_types
    * const widget_types = await prisma.widget_types.findMany()
    * ```
    */
  get widget_types(): Prisma.Widget_typesDelegate<GlobalReject>;

  /**
   * `prisma.widgets_for_fields`: Exposes CRUD operations for the **Widgets_for_fields** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Widgets_for_fields
    * const widgets_for_fields = await prisma.widgets_for_fields.findMany()
    * ```
    */
  get widgets_for_fields(): Prisma.Widgets_for_fieldsDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = runtime.Types.Public.PrismaPromise<T>

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket


  /**
   * Prisma Client JS version: 4.12.0
   * Query Engine version: d6e67a83f971b175a593ccc12e15c4a757f93ffe
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
export type InputJsonValue = null | string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: runtime.Types.Utils.LegacyExact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Accounts: 'Accounts',
    Action_report_values: 'Action_report_values',
    Action_reports: 'Action_reports',
    Action_values: 'Action_values',
    Actions: 'Actions',
    Check_taxa: 'Check_taxa',
    Check_values: 'Check_values',
    Checks: 'Checks',
    Field_types: 'Field_types',
    Fields: 'Fields',
    Files: 'Files',
    Goal_report_values: 'Goal_report_values',
    Goal_reports: 'Goal_reports',
    Goals: 'Goals',
    List_values: 'List_values',
    Lists: 'Lists',
    Messages: 'Messages',
    Observation_sources: 'Observation_sources',
    Observations: 'Observations',
    Persons: 'Persons',
    Place_levels: 'Place_levels',
    Place_report_values: 'Place_report_values',
    Place_reports: 'Place_reports',
    Place_users: 'Place_users',
    Places: 'Places',
    Project_reports: 'Project_reports',
    Project_users: 'Project_users',
    Projects: 'Projects',
    Subproject_reports: 'Subproject_reports',
    Subproject_taxa: 'Subproject_taxa',
    Subproject_users: 'Subproject_users',
    Subprojects: 'Subprojects',
    Taxa: 'Taxa',
    Taxonomies: 'Taxonomies',
    Ui_options: 'Ui_options',
    Units: 'Units',
    User_messages: 'User_messages',
    Users: 'Users',
    Widget_types: 'Widget_types',
    Widgets_for_fields: 'Widgets_for_fields'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type DefaultPrismaClient = PrismaClient
  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, '$connect' | '$disconnect' | '$on' | '$transaction' | '$use'>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AccountsCountOutputType
   */


  export type AccountsCountOutputType = {
    action_report_values: number
    action_reports: number
    action_values: number
    actions: number
    check_taxa: number
    check_values: number
    checks: number
    fields: number
    files: number
    goal_report_values: number
    goal_reports: number
    goals: number
    list_values: number
    lists: number
    observation_sources: number
    observations: number
    persons: number
    place_levels: number
    place_report_values: number
    place_reports: number
    place_users: number
    places: number
    project_reports: number
    project_users: number
    projects: number
    subproject_reports: number
    subproject_taxa: number
    subproject_users: number
    subprojects: number
    taxa: number
    taxonomies: number
    units: number
  }

  export type AccountsCountOutputTypeSelect = {
    action_report_values?: boolean
    action_reports?: boolean
    action_values?: boolean
    actions?: boolean
    check_taxa?: boolean
    check_values?: boolean
    checks?: boolean
    fields?: boolean
    files?: boolean
    goal_report_values?: boolean
    goal_reports?: boolean
    goals?: boolean
    list_values?: boolean
    lists?: boolean
    observation_sources?: boolean
    observations?: boolean
    persons?: boolean
    place_levels?: boolean
    place_report_values?: boolean
    place_reports?: boolean
    place_users?: boolean
    places?: boolean
    project_reports?: boolean
    project_users?: boolean
    projects?: boolean
    subproject_reports?: boolean
    subproject_taxa?: boolean
    subproject_users?: boolean
    subprojects?: boolean
    taxa?: boolean
    taxonomies?: boolean
    units?: boolean
  }

  export type AccountsCountOutputTypeGetPayload<S extends boolean | null | undefined | AccountsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? AccountsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (AccountsCountOutputTypeArgs)
    ? AccountsCountOutputType 
    : S extends { select: any } & (AccountsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof AccountsCountOutputType ? AccountsCountOutputType[P] : never
  } 
      : AccountsCountOutputType




  // Custom InputTypes

  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the AccountsCountOutputType
     */
    select?: AccountsCountOutputTypeSelect | null
  }



  /**
   * Count Type Action_reportsCountOutputType
   */


  export type Action_reportsCountOutputType = {
    action_report_values: number
  }

  export type Action_reportsCountOutputTypeSelect = {
    action_report_values?: boolean
  }

  export type Action_reportsCountOutputTypeGetPayload<S extends boolean | null | undefined | Action_reportsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Action_reportsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Action_reportsCountOutputTypeArgs)
    ? Action_reportsCountOutputType 
    : S extends { select: any } & (Action_reportsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Action_reportsCountOutputType ? Action_reportsCountOutputType[P] : never
  } 
      : Action_reportsCountOutputType




  // Custom InputTypes

  /**
   * Action_reportsCountOutputType without action
   */
  export type Action_reportsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Action_reportsCountOutputType
     */
    select?: Action_reportsCountOutputTypeSelect | null
  }



  /**
   * Count Type ActionsCountOutputType
   */


  export type ActionsCountOutputType = {
    action_reports: number
    action_values: number
    files: number
  }

  export type ActionsCountOutputTypeSelect = {
    action_reports?: boolean
    action_values?: boolean
    files?: boolean
  }

  export type ActionsCountOutputTypeGetPayload<S extends boolean | null | undefined | ActionsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ActionsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ActionsCountOutputTypeArgs)
    ? ActionsCountOutputType 
    : S extends { select: any } & (ActionsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ActionsCountOutputType ? ActionsCountOutputType[P] : never
  } 
      : ActionsCountOutputType




  // Custom InputTypes

  /**
   * ActionsCountOutputType without action
   */
  export type ActionsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ActionsCountOutputType
     */
    select?: ActionsCountOutputTypeSelect | null
  }



  /**
   * Count Type ChecksCountOutputType
   */


  export type ChecksCountOutputType = {
    check_taxa: number
    check_values: number
    files: number
  }

  export type ChecksCountOutputTypeSelect = {
    check_taxa?: boolean
    check_values?: boolean
    files?: boolean
  }

  export type ChecksCountOutputTypeGetPayload<S extends boolean | null | undefined | ChecksCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ChecksCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ChecksCountOutputTypeArgs)
    ? ChecksCountOutputType 
    : S extends { select: any } & (ChecksCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ChecksCountOutputType ? ChecksCountOutputType[P] : never
  } 
      : ChecksCountOutputType




  // Custom InputTypes

  /**
   * ChecksCountOutputType without action
   */
  export type ChecksCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ChecksCountOutputType
     */
    select?: ChecksCountOutputTypeSelect | null
  }



  /**
   * Count Type Field_typesCountOutputType
   */


  export type Field_typesCountOutputType = {
    fields: number
    widgets_for_fields: number
  }

  export type Field_typesCountOutputTypeSelect = {
    fields?: boolean
    widgets_for_fields?: boolean
  }

  export type Field_typesCountOutputTypeGetPayload<S extends boolean | null | undefined | Field_typesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Field_typesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Field_typesCountOutputTypeArgs)
    ? Field_typesCountOutputType 
    : S extends { select: any } & (Field_typesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Field_typesCountOutputType ? Field_typesCountOutputType[P] : never
  } 
      : Field_typesCountOutputType




  // Custom InputTypes

  /**
   * Field_typesCountOutputType without action
   */
  export type Field_typesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Field_typesCountOutputType
     */
    select?: Field_typesCountOutputTypeSelect | null
  }



  /**
   * Count Type Goal_reportsCountOutputType
   */


  export type Goal_reportsCountOutputType = {
    goal_report_values: number
  }

  export type Goal_reportsCountOutputTypeSelect = {
    goal_report_values?: boolean
  }

  export type Goal_reportsCountOutputTypeGetPayload<S extends boolean | null | undefined | Goal_reportsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goal_reportsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Goal_reportsCountOutputTypeArgs)
    ? Goal_reportsCountOutputType 
    : S extends { select: any } & (Goal_reportsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Goal_reportsCountOutputType ? Goal_reportsCountOutputType[P] : never
  } 
      : Goal_reportsCountOutputType




  // Custom InputTypes

  /**
   * Goal_reportsCountOutputType without action
   */
  export type Goal_reportsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Goal_reportsCountOutputType
     */
    select?: Goal_reportsCountOutputTypeSelect | null
  }



  /**
   * Count Type GoalsCountOutputType
   */


  export type GoalsCountOutputType = {
    goal_reports: number
  }

  export type GoalsCountOutputTypeSelect = {
    goal_reports?: boolean
  }

  export type GoalsCountOutputTypeGetPayload<S extends boolean | null | undefined | GoalsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? GoalsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (GoalsCountOutputTypeArgs)
    ? GoalsCountOutputType 
    : S extends { select: any } & (GoalsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof GoalsCountOutputType ? GoalsCountOutputType[P] : never
  } 
      : GoalsCountOutputType




  // Custom InputTypes

  /**
   * GoalsCountOutputType without action
   */
  export type GoalsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the GoalsCountOutputType
     */
    select?: GoalsCountOutputTypeSelect | null
  }



  /**
   * Count Type ListsCountOutputType
   */


  export type ListsCountOutputType = {
    fields: number
    list_values: number
    units: number
  }

  export type ListsCountOutputTypeSelect = {
    fields?: boolean
    list_values?: boolean
    units?: boolean
  }

  export type ListsCountOutputTypeGetPayload<S extends boolean | null | undefined | ListsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ListsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ListsCountOutputTypeArgs)
    ? ListsCountOutputType 
    : S extends { select: any } & (ListsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ListsCountOutputType ? ListsCountOutputType[P] : never
  } 
      : ListsCountOutputType




  // Custom InputTypes

  /**
   * ListsCountOutputType without action
   */
  export type ListsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ListsCountOutputType
     */
    select?: ListsCountOutputTypeSelect | null
  }



  /**
   * Count Type MessagesCountOutputType
   */


  export type MessagesCountOutputType = {
    user_messages: number
  }

  export type MessagesCountOutputTypeSelect = {
    user_messages?: boolean
  }

  export type MessagesCountOutputTypeGetPayload<S extends boolean | null | undefined | MessagesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? MessagesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (MessagesCountOutputTypeArgs)
    ? MessagesCountOutputType 
    : S extends { select: any } & (MessagesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof MessagesCountOutputType ? MessagesCountOutputType[P] : never
  } 
      : MessagesCountOutputType




  // Custom InputTypes

  /**
   * MessagesCountOutputType without action
   */
  export type MessagesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the MessagesCountOutputType
     */
    select?: MessagesCountOutputTypeSelect | null
  }



  /**
   * Count Type Observation_sourcesCountOutputType
   */


  export type Observation_sourcesCountOutputType = {
    observations: number
  }

  export type Observation_sourcesCountOutputTypeSelect = {
    observations?: boolean
  }

  export type Observation_sourcesCountOutputTypeGetPayload<S extends boolean | null | undefined | Observation_sourcesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Observation_sourcesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Observation_sourcesCountOutputTypeArgs)
    ? Observation_sourcesCountOutputType 
    : S extends { select: any } & (Observation_sourcesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Observation_sourcesCountOutputType ? Observation_sourcesCountOutputType[P] : never
  } 
      : Observation_sourcesCountOutputType




  // Custom InputTypes

  /**
   * Observation_sourcesCountOutputType without action
   */
  export type Observation_sourcesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Observation_sourcesCountOutputType
     */
    select?: Observation_sourcesCountOutputTypeSelect | null
  }



  /**
   * Count Type Place_reportsCountOutputType
   */


  export type Place_reportsCountOutputType = {
    place_report_values: number
  }

  export type Place_reportsCountOutputTypeSelect = {
    place_report_values?: boolean
  }

  export type Place_reportsCountOutputTypeGetPayload<S extends boolean | null | undefined | Place_reportsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Place_reportsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Place_reportsCountOutputTypeArgs)
    ? Place_reportsCountOutputType 
    : S extends { select: any } & (Place_reportsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Place_reportsCountOutputType ? Place_reportsCountOutputType[P] : never
  } 
      : Place_reportsCountOutputType




  // Custom InputTypes

  /**
   * Place_reportsCountOutputType without action
   */
  export type Place_reportsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Place_reportsCountOutputType
     */
    select?: Place_reportsCountOutputTypeSelect | null
  }



  /**
   * Count Type PlacesCountOutputType
   */


  export type PlacesCountOutputType = {
    actions: number
    checks: number
    files: number
    observations: number
    place_reports: number
    place_users: number
    other_places: number
  }

  export type PlacesCountOutputTypeSelect = {
    actions?: boolean
    checks?: boolean
    files?: boolean
    observations?: boolean
    place_reports?: boolean
    place_users?: boolean
    other_places?: boolean
  }

  export type PlacesCountOutputTypeGetPayload<S extends boolean | null | undefined | PlacesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? PlacesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (PlacesCountOutputTypeArgs)
    ? PlacesCountOutputType 
    : S extends { select: any } & (PlacesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof PlacesCountOutputType ? PlacesCountOutputType[P] : never
  } 
      : PlacesCountOutputType




  // Custom InputTypes

  /**
   * PlacesCountOutputType without action
   */
  export type PlacesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the PlacesCountOutputType
     */
    select?: PlacesCountOutputTypeSelect | null
  }



  /**
   * Count Type ProjectsCountOutputType
   */


  export type ProjectsCountOutputType = {
    fields: number
    files: number
    lists: number
    observation_sources: number
    persons: number
    place_levels: number
    project_reports: number
    project_users: number
    subprojects: number
    taxonomies: number
    units: number
  }

  export type ProjectsCountOutputTypeSelect = {
    fields?: boolean
    files?: boolean
    lists?: boolean
    observation_sources?: boolean
    persons?: boolean
    place_levels?: boolean
    project_reports?: boolean
    project_users?: boolean
    subprojects?: boolean
    taxonomies?: boolean
    units?: boolean
  }

  export type ProjectsCountOutputTypeGetPayload<S extends boolean | null | undefined | ProjectsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ProjectsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ProjectsCountOutputTypeArgs)
    ? ProjectsCountOutputType 
    : S extends { select: any } & (ProjectsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ProjectsCountOutputType ? ProjectsCountOutputType[P] : never
  } 
      : ProjectsCountOutputType




  // Custom InputTypes

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProjectsCountOutputType
     */
    select?: ProjectsCountOutputTypeSelect | null
  }



  /**
   * Count Type SubprojectsCountOutputType
   */


  export type SubprojectsCountOutputType = {
    files: number
    goals: number
    places: number
    subproject_reports: number
    subproject_taxa: number
    subproject_users: number
  }

  export type SubprojectsCountOutputTypeSelect = {
    files?: boolean
    goals?: boolean
    places?: boolean
    subproject_reports?: boolean
    subproject_taxa?: boolean
    subproject_users?: boolean
  }

  export type SubprojectsCountOutputTypeGetPayload<S extends boolean | null | undefined | SubprojectsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? SubprojectsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (SubprojectsCountOutputTypeArgs)
    ? SubprojectsCountOutputType 
    : S extends { select: any } & (SubprojectsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof SubprojectsCountOutputType ? SubprojectsCountOutputType[P] : never
  } 
      : SubprojectsCountOutputType




  // Custom InputTypes

  /**
   * SubprojectsCountOutputType without action
   */
  export type SubprojectsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SubprojectsCountOutputType
     */
    select?: SubprojectsCountOutputTypeSelect | null
  }



  /**
   * Count Type TaxaCountOutputType
   */


  export type TaxaCountOutputType = {
    check_taxa: number
    subproject_taxa: number
  }

  export type TaxaCountOutputTypeSelect = {
    check_taxa?: boolean
    subproject_taxa?: boolean
  }

  export type TaxaCountOutputTypeGetPayload<S extends boolean | null | undefined | TaxaCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaxaCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TaxaCountOutputTypeArgs)
    ? TaxaCountOutputType 
    : S extends { select: any } & (TaxaCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TaxaCountOutputType ? TaxaCountOutputType[P] : never
  } 
      : TaxaCountOutputType




  // Custom InputTypes

  /**
   * TaxaCountOutputType without action
   */
  export type TaxaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TaxaCountOutputType
     */
    select?: TaxaCountOutputTypeSelect | null
  }



  /**
   * Count Type TaxonomiesCountOutputType
   */


  export type TaxonomiesCountOutputType = {
    taxa: number
  }

  export type TaxonomiesCountOutputTypeSelect = {
    taxa?: boolean
  }

  export type TaxonomiesCountOutputTypeGetPayload<S extends boolean | null | undefined | TaxonomiesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaxonomiesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TaxonomiesCountOutputTypeArgs)
    ? TaxonomiesCountOutputType 
    : S extends { select: any } & (TaxonomiesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TaxonomiesCountOutputType ? TaxonomiesCountOutputType[P] : never
  } 
      : TaxonomiesCountOutputType




  // Custom InputTypes

  /**
   * TaxonomiesCountOutputType without action
   */
  export type TaxonomiesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TaxonomiesCountOutputType
     */
    select?: TaxonomiesCountOutputTypeSelect | null
  }



  /**
   * Count Type UnitsCountOutputType
   */


  export type UnitsCountOutputType = {
    action_report_values: number
    action_values: number
    check_taxa: number
    check_values: number
    goal_report_values: number
    place_report_values: number
  }

  export type UnitsCountOutputTypeSelect = {
    action_report_values?: boolean
    action_values?: boolean
    check_taxa?: boolean
    check_values?: boolean
    goal_report_values?: boolean
    place_report_values?: boolean
  }

  export type UnitsCountOutputTypeGetPayload<S extends boolean | null | undefined | UnitsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UnitsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UnitsCountOutputTypeArgs)
    ? UnitsCountOutputType 
    : S extends { select: any } & (UnitsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof UnitsCountOutputType ? UnitsCountOutputType[P] : never
  } 
      : UnitsCountOutputType




  // Custom InputTypes

  /**
   * UnitsCountOutputType without action
   */
  export type UnitsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UnitsCountOutputType
     */
    select?: UnitsCountOutputTypeSelect | null
  }



  /**
   * Count Type UsersCountOutputType
   */


  export type UsersCountOutputType = {
    accounts: number
    place_users: number
    project_users: number
    subproject_users: number
    user_messages: number
  }

  export type UsersCountOutputTypeSelect = {
    accounts?: boolean
    place_users?: boolean
    project_users?: boolean
    subproject_users?: boolean
    user_messages?: boolean
  }

  export type UsersCountOutputTypeGetPayload<S extends boolean | null | undefined | UsersCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UsersCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UsersCountOutputTypeArgs)
    ? UsersCountOutputType 
    : S extends { select: any } & (UsersCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof UsersCountOutputType ? UsersCountOutputType[P] : never
  } 
      : UsersCountOutputType




  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect | null
  }



  /**
   * Count Type Widget_typesCountOutputType
   */


  export type Widget_typesCountOutputType = {
    fields: number
    widgets_for_fields: number
  }

  export type Widget_typesCountOutputTypeSelect = {
    fields?: boolean
    widgets_for_fields?: boolean
  }

  export type Widget_typesCountOutputTypeGetPayload<S extends boolean | null | undefined | Widget_typesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Widget_typesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Widget_typesCountOutputTypeArgs)
    ? Widget_typesCountOutputType 
    : S extends { select: any } & (Widget_typesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Widget_typesCountOutputType ? Widget_typesCountOutputType[P] : never
  } 
      : Widget_typesCountOutputType




  // Custom InputTypes

  /**
   * Widget_typesCountOutputType without action
   */
  export type Widget_typesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Widget_typesCountOutputType
     */
    select?: Widget_typesCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model Accounts
   */


  export type AggregateAccounts = {
    _count: AccountsCountAggregateOutputType | null
    _min: AccountsMinAggregateOutputType | null
    _max: AccountsMaxAggregateOutputType | null
  }

  export type AccountsMinAggregateOutputType = {
    account_id: string | null
    user_id: string | null
    type: string | null
    period_start: Date | null
    period_end: Date | null
    projects_label_by: string | null
    label: string | null
  }

  export type AccountsMaxAggregateOutputType = {
    account_id: string | null
    user_id: string | null
    type: string | null
    period_start: Date | null
    period_end: Date | null
    projects_label_by: string | null
    label: string | null
  }

  export type AccountsCountAggregateOutputType = {
    account_id: number
    user_id: number
    type: number
    period_start: number
    period_end: number
    projects_label_by: number
    label: number
    _all: number
  }


  export type AccountsMinAggregateInputType = {
    account_id?: true
    user_id?: true
    type?: true
    period_start?: true
    period_end?: true
    projects_label_by?: true
    label?: true
  }

  export type AccountsMaxAggregateInputType = {
    account_id?: true
    user_id?: true
    type?: true
    period_start?: true
    period_end?: true
    projects_label_by?: true
    label?: true
  }

  export type AccountsCountAggregateInputType = {
    account_id?: true
    user_id?: true
    type?: true
    period_start?: true
    period_end?: true
    projects_label_by?: true
    label?: true
    _all?: true
  }

  export type AccountsAggregateArgs = {
    /**
     * Filter which Accounts to aggregate.
     */
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountsMaxAggregateInputType
  }

  export type GetAccountsAggregateType<T extends AccountsAggregateArgs> = {
        [P in keyof T & keyof AggregateAccounts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccounts[P]>
      : GetScalarType<T[P], AggregateAccounts[P]>
  }




  export type AccountsGroupByArgs = {
    where?: AccountsWhereInput
    orderBy?: Enumerable<AccountsOrderByWithAggregationInput>
    by: AccountsScalarFieldEnum[]
    having?: AccountsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountsCountAggregateInputType | true
    _min?: AccountsMinAggregateInputType
    _max?: AccountsMaxAggregateInputType
  }


  export type AccountsGroupByOutputType = {
    account_id: string
    user_id: string | null
    type: string | null
    period_start: Date | null
    period_end: Date | null
    projects_label_by: string | null
    label: string | null
    _count: AccountsCountAggregateOutputType | null
    _min: AccountsMinAggregateOutputType | null
    _max: AccountsMaxAggregateOutputType | null
  }

  type GetAccountsGroupByPayload<T extends AccountsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<AccountsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountsGroupByOutputType[P]>
            : GetScalarType<T[P], AccountsGroupByOutputType[P]>
        }
      >
    >


  export type AccountsSelect = {
    account_id?: boolean
    user_id?: boolean
    type?: boolean
    period_start?: boolean
    period_end?: boolean
    projects_label_by?: boolean
    label?: boolean
    users?: boolean | UsersArgs
    action_report_values?: boolean | Accounts$action_report_valuesArgs
    action_reports?: boolean | Accounts$action_reportsArgs
    action_values?: boolean | Accounts$action_valuesArgs
    actions?: boolean | Accounts$actionsArgs
    check_taxa?: boolean | Accounts$check_taxaArgs
    check_values?: boolean | Accounts$check_valuesArgs
    checks?: boolean | Accounts$checksArgs
    fields?: boolean | Accounts$fieldsArgs
    files?: boolean | Accounts$filesArgs
    goal_report_values?: boolean | Accounts$goal_report_valuesArgs
    goal_reports?: boolean | Accounts$goal_reportsArgs
    goals?: boolean | Accounts$goalsArgs
    list_values?: boolean | Accounts$list_valuesArgs
    lists?: boolean | Accounts$listsArgs
    observation_sources?: boolean | Accounts$observation_sourcesArgs
    observations?: boolean | Accounts$observationsArgs
    persons?: boolean | Accounts$personsArgs
    place_levels?: boolean | Accounts$place_levelsArgs
    place_report_values?: boolean | Accounts$place_report_valuesArgs
    place_reports?: boolean | Accounts$place_reportsArgs
    place_users?: boolean | Accounts$place_usersArgs
    places?: boolean | Accounts$placesArgs
    project_reports?: boolean | Accounts$project_reportsArgs
    project_users?: boolean | Accounts$project_usersArgs
    projects?: boolean | Accounts$projectsArgs
    subproject_reports?: boolean | Accounts$subproject_reportsArgs
    subproject_taxa?: boolean | Accounts$subproject_taxaArgs
    subproject_users?: boolean | Accounts$subproject_usersArgs
    subprojects?: boolean | Accounts$subprojectsArgs
    taxa?: boolean | Accounts$taxaArgs
    taxonomies?: boolean | Accounts$taxonomiesArgs
    units?: boolean | Accounts$unitsArgs
    _count?: boolean | AccountsCountOutputTypeArgs
  }


  export type AccountsInclude = {
    users?: boolean | UsersArgs
    action_report_values?: boolean | Accounts$action_report_valuesArgs
    action_reports?: boolean | Accounts$action_reportsArgs
    action_values?: boolean | Accounts$action_valuesArgs
    actions?: boolean | Accounts$actionsArgs
    check_taxa?: boolean | Accounts$check_taxaArgs
    check_values?: boolean | Accounts$check_valuesArgs
    checks?: boolean | Accounts$checksArgs
    fields?: boolean | Accounts$fieldsArgs
    files?: boolean | Accounts$filesArgs
    goal_report_values?: boolean | Accounts$goal_report_valuesArgs
    goal_reports?: boolean | Accounts$goal_reportsArgs
    goals?: boolean | Accounts$goalsArgs
    list_values?: boolean | Accounts$list_valuesArgs
    lists?: boolean | Accounts$listsArgs
    observation_sources?: boolean | Accounts$observation_sourcesArgs
    observations?: boolean | Accounts$observationsArgs
    persons?: boolean | Accounts$personsArgs
    place_levels?: boolean | Accounts$place_levelsArgs
    place_report_values?: boolean | Accounts$place_report_valuesArgs
    place_reports?: boolean | Accounts$place_reportsArgs
    place_users?: boolean | Accounts$place_usersArgs
    places?: boolean | Accounts$placesArgs
    project_reports?: boolean | Accounts$project_reportsArgs
    project_users?: boolean | Accounts$project_usersArgs
    projects?: boolean | Accounts$projectsArgs
    subproject_reports?: boolean | Accounts$subproject_reportsArgs
    subproject_taxa?: boolean | Accounts$subproject_taxaArgs
    subproject_users?: boolean | Accounts$subproject_usersArgs
    subprojects?: boolean | Accounts$subprojectsArgs
    taxa?: boolean | Accounts$taxaArgs
    taxonomies?: boolean | Accounts$taxonomiesArgs
    units?: boolean | Accounts$unitsArgs
    _count?: boolean | AccountsCountOutputTypeArgs
  }

  export type AccountsGetPayload<S extends boolean | null | undefined | AccountsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Accounts :
    S extends undefined ? never :
    S extends { include: any } & (AccountsArgs | AccountsFindManyArgs)
    ? Accounts  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :
        P extends 'action_report_values' ? Array < Action_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'action_reports' ? Array < Action_reportsGetPayload<S['include'][P]>>  :
        P extends 'action_values' ? Array < Action_valuesGetPayload<S['include'][P]>>  :
        P extends 'actions' ? Array < ActionsGetPayload<S['include'][P]>>  :
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['include'][P]>>  :
        P extends 'check_values' ? Array < Check_valuesGetPayload<S['include'][P]>>  :
        P extends 'checks' ? Array < ChecksGetPayload<S['include'][P]>>  :
        P extends 'fields' ? Array < FieldsGetPayload<S['include'][P]>>  :
        P extends 'files' ? Array < FilesGetPayload<S['include'][P]>>  :
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['include'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['include'][P]>>  :
        P extends 'list_values' ? Array < List_valuesGetPayload<S['include'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['include'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['include'][P]>>  :
        P extends 'observations' ? Array < ObservationsGetPayload<S['include'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['include'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['include'][P]>>  :
        P extends 'place_report_values' ? Array < Place_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'place_reports' ? Array < Place_reportsGetPayload<S['include'][P]>>  :
        P extends 'place_users' ? Array < Place_usersGetPayload<S['include'][P]>>  :
        P extends 'places' ? Array < PlacesGetPayload<S['include'][P]>>  :
        P extends 'project_reports' ? Array < Project_reportsGetPayload<S['include'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['include'][P]>>  :
        P extends 'projects' ? Array < ProjectsGetPayload<S['include'][P]>>  :
        P extends 'subproject_reports' ? Array < Subproject_reportsGetPayload<S['include'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['include'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['include'][P]>>  :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['include'][P]>>  :
        P extends 'taxa' ? Array < TaxaGetPayload<S['include'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['include'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['include'][P]>>  :
        P extends '_count' ? AccountsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (AccountsArgs | AccountsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :
        P extends 'action_report_values' ? Array < Action_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'action_reports' ? Array < Action_reportsGetPayload<S['select'][P]>>  :
        P extends 'action_values' ? Array < Action_valuesGetPayload<S['select'][P]>>  :
        P extends 'actions' ? Array < ActionsGetPayload<S['select'][P]>>  :
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['select'][P]>>  :
        P extends 'check_values' ? Array < Check_valuesGetPayload<S['select'][P]>>  :
        P extends 'checks' ? Array < ChecksGetPayload<S['select'][P]>>  :
        P extends 'fields' ? Array < FieldsGetPayload<S['select'][P]>>  :
        P extends 'files' ? Array < FilesGetPayload<S['select'][P]>>  :
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['select'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['select'][P]>>  :
        P extends 'list_values' ? Array < List_valuesGetPayload<S['select'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['select'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['select'][P]>>  :
        P extends 'observations' ? Array < ObservationsGetPayload<S['select'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['select'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['select'][P]>>  :
        P extends 'place_report_values' ? Array < Place_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'place_reports' ? Array < Place_reportsGetPayload<S['select'][P]>>  :
        P extends 'place_users' ? Array < Place_usersGetPayload<S['select'][P]>>  :
        P extends 'places' ? Array < PlacesGetPayload<S['select'][P]>>  :
        P extends 'project_reports' ? Array < Project_reportsGetPayload<S['select'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['select'][P]>>  :
        P extends 'projects' ? Array < ProjectsGetPayload<S['select'][P]>>  :
        P extends 'subproject_reports' ? Array < Subproject_reportsGetPayload<S['select'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['select'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['select'][P]>>  :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['select'][P]>>  :
        P extends 'taxa' ? Array < TaxaGetPayload<S['select'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['select'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['select'][P]>>  :
        P extends '_count' ? AccountsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Accounts ? Accounts[P] : never
  } 
      : Accounts


  type AccountsCountArgs = 
    Omit<AccountsFindManyArgs, 'select' | 'include'> & {
      select?: AccountsCountAggregateInputType | true
    }

  export interface AccountsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Accounts that matches the filter.
     * @param {AccountsFindUniqueArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AccountsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, AccountsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Accounts'> extends True ? Prisma__AccountsClient<AccountsGetPayload<T>> : Prisma__AccountsClient<AccountsGetPayload<T> | null, null>

    /**
     * Find one Accounts that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {AccountsFindUniqueOrThrowArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AccountsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, AccountsFindUniqueOrThrowArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Find the first Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsFindFirstArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AccountsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, AccountsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Accounts'> extends True ? Prisma__AccountsClient<AccountsGetPayload<T>> : Prisma__AccountsClient<AccountsGetPayload<T> | null, null>

    /**
     * Find the first Accounts that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsFindFirstOrThrowArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AccountsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, AccountsFindFirstOrThrowArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.accounts.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.accounts.findMany({ take: 10 })
     * 
     * // Only select the `account_id`
     * const accountsWithAccount_idOnly = await prisma.accounts.findMany({ select: { account_id: true } })
     * 
    **/
    findMany<T extends AccountsFindManyArgs>(
      args?: SelectSubset<T, AccountsFindManyArgs>
    ): Prisma.PrismaPromise<Array<AccountsGetPayload<T>>>

    /**
     * Create a Accounts.
     * @param {AccountsCreateArgs} args - Arguments to create a Accounts.
     * @example
     * // Create one Accounts
     * const Accounts = await prisma.accounts.create({
     *   data: {
     *     // ... data to create a Accounts
     *   }
     * })
     * 
    **/
    create<T extends AccountsCreateArgs>(
      args: SelectSubset<T, AccountsCreateArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Create many Accounts.
     *     @param {AccountsCreateManyArgs} args - Arguments to create many Accounts.
     *     @example
     *     // Create many Accounts
     *     const accounts = await prisma.accounts.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AccountsCreateManyArgs>(
      args?: SelectSubset<T, AccountsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Accounts.
     * @param {AccountsDeleteArgs} args - Arguments to delete one Accounts.
     * @example
     * // Delete one Accounts
     * const Accounts = await prisma.accounts.delete({
     *   where: {
     *     // ... filter to delete one Accounts
     *   }
     * })
     * 
    **/
    delete<T extends AccountsDeleteArgs>(
      args: SelectSubset<T, AccountsDeleteArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Update one Accounts.
     * @param {AccountsUpdateArgs} args - Arguments to update one Accounts.
     * @example
     * // Update one Accounts
     * const accounts = await prisma.accounts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AccountsUpdateArgs>(
      args: SelectSubset<T, AccountsUpdateArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Delete zero or more Accounts.
     * @param {AccountsDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.accounts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AccountsDeleteManyArgs>(
      args?: SelectSubset<T, AccountsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const accounts = await prisma.accounts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AccountsUpdateManyArgs>(
      args: SelectSubset<T, AccountsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Accounts.
     * @param {AccountsUpsertArgs} args - Arguments to update or create a Accounts.
     * @example
     * // Update or create a Accounts
     * const accounts = await prisma.accounts.upsert({
     *   create: {
     *     // ... data to create a Accounts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Accounts we want to update
     *   }
     * })
    **/
    upsert<T extends AccountsUpsertArgs>(
      args: SelectSubset<T, AccountsUpsertArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.accounts.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountsCountArgs>(
      args?: Subset<T, AccountsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountsAggregateArgs>(args: Subset<T, AccountsAggregateArgs>): Prisma.PrismaPromise<GetAccountsAggregateType<T>>

    /**
     * Group by Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountsGroupByArgs['orderBy'] }
        : { orderBy?: AccountsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Accounts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__AccountsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    users<T extends UsersArgs= {}>(args?: Subset<T, UsersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    action_report_values<T extends Accounts$action_report_valuesArgs= {}>(args?: Subset<T, Accounts$action_report_valuesArgs>): Prisma.PrismaPromise<Array<Action_report_valuesGetPayload<T>>| Null>;

    action_reports<T extends Accounts$action_reportsArgs= {}>(args?: Subset<T, Accounts$action_reportsArgs>): Prisma.PrismaPromise<Array<Action_reportsGetPayload<T>>| Null>;

    action_values<T extends Accounts$action_valuesArgs= {}>(args?: Subset<T, Accounts$action_valuesArgs>): Prisma.PrismaPromise<Array<Action_valuesGetPayload<T>>| Null>;

    actions<T extends Accounts$actionsArgs= {}>(args?: Subset<T, Accounts$actionsArgs>): Prisma.PrismaPromise<Array<ActionsGetPayload<T>>| Null>;

    check_taxa<T extends Accounts$check_taxaArgs= {}>(args?: Subset<T, Accounts$check_taxaArgs>): Prisma.PrismaPromise<Array<Check_taxaGetPayload<T>>| Null>;

    check_values<T extends Accounts$check_valuesArgs= {}>(args?: Subset<T, Accounts$check_valuesArgs>): Prisma.PrismaPromise<Array<Check_valuesGetPayload<T>>| Null>;

    checks<T extends Accounts$checksArgs= {}>(args?: Subset<T, Accounts$checksArgs>): Prisma.PrismaPromise<Array<ChecksGetPayload<T>>| Null>;

    fields<T extends Accounts$fieldsArgs= {}>(args?: Subset<T, Accounts$fieldsArgs>): Prisma.PrismaPromise<Array<FieldsGetPayload<T>>| Null>;

    files<T extends Accounts$filesArgs= {}>(args?: Subset<T, Accounts$filesArgs>): Prisma.PrismaPromise<Array<FilesGetPayload<T>>| Null>;

    goal_report_values<T extends Accounts$goal_report_valuesArgs= {}>(args?: Subset<T, Accounts$goal_report_valuesArgs>): Prisma.PrismaPromise<Array<Goal_report_valuesGetPayload<T>>| Null>;

    goal_reports<T extends Accounts$goal_reportsArgs= {}>(args?: Subset<T, Accounts$goal_reportsArgs>): Prisma.PrismaPromise<Array<Goal_reportsGetPayload<T>>| Null>;

    goals<T extends Accounts$goalsArgs= {}>(args?: Subset<T, Accounts$goalsArgs>): Prisma.PrismaPromise<Array<GoalsGetPayload<T>>| Null>;

    list_values<T extends Accounts$list_valuesArgs= {}>(args?: Subset<T, Accounts$list_valuesArgs>): Prisma.PrismaPromise<Array<List_valuesGetPayload<T>>| Null>;

    lists<T extends Accounts$listsArgs= {}>(args?: Subset<T, Accounts$listsArgs>): Prisma.PrismaPromise<Array<ListsGetPayload<T>>| Null>;

    observation_sources<T extends Accounts$observation_sourcesArgs= {}>(args?: Subset<T, Accounts$observation_sourcesArgs>): Prisma.PrismaPromise<Array<Observation_sourcesGetPayload<T>>| Null>;

    observations<T extends Accounts$observationsArgs= {}>(args?: Subset<T, Accounts$observationsArgs>): Prisma.PrismaPromise<Array<ObservationsGetPayload<T>>| Null>;

    persons<T extends Accounts$personsArgs= {}>(args?: Subset<T, Accounts$personsArgs>): Prisma.PrismaPromise<Array<PersonsGetPayload<T>>| Null>;

    place_levels<T extends Accounts$place_levelsArgs= {}>(args?: Subset<T, Accounts$place_levelsArgs>): Prisma.PrismaPromise<Array<Place_levelsGetPayload<T>>| Null>;

    place_report_values<T extends Accounts$place_report_valuesArgs= {}>(args?: Subset<T, Accounts$place_report_valuesArgs>): Prisma.PrismaPromise<Array<Place_report_valuesGetPayload<T>>| Null>;

    place_reports<T extends Accounts$place_reportsArgs= {}>(args?: Subset<T, Accounts$place_reportsArgs>): Prisma.PrismaPromise<Array<Place_reportsGetPayload<T>>| Null>;

    place_users<T extends Accounts$place_usersArgs= {}>(args?: Subset<T, Accounts$place_usersArgs>): Prisma.PrismaPromise<Array<Place_usersGetPayload<T>>| Null>;

    places<T extends Accounts$placesArgs= {}>(args?: Subset<T, Accounts$placesArgs>): Prisma.PrismaPromise<Array<PlacesGetPayload<T>>| Null>;

    project_reports<T extends Accounts$project_reportsArgs= {}>(args?: Subset<T, Accounts$project_reportsArgs>): Prisma.PrismaPromise<Array<Project_reportsGetPayload<T>>| Null>;

    project_users<T extends Accounts$project_usersArgs= {}>(args?: Subset<T, Accounts$project_usersArgs>): Prisma.PrismaPromise<Array<Project_usersGetPayload<T>>| Null>;

    projects<T extends Accounts$projectsArgs= {}>(args?: Subset<T, Accounts$projectsArgs>): Prisma.PrismaPromise<Array<ProjectsGetPayload<T>>| Null>;

    subproject_reports<T extends Accounts$subproject_reportsArgs= {}>(args?: Subset<T, Accounts$subproject_reportsArgs>): Prisma.PrismaPromise<Array<Subproject_reportsGetPayload<T>>| Null>;

    subproject_taxa<T extends Accounts$subproject_taxaArgs= {}>(args?: Subset<T, Accounts$subproject_taxaArgs>): Prisma.PrismaPromise<Array<Subproject_taxaGetPayload<T>>| Null>;

    subproject_users<T extends Accounts$subproject_usersArgs= {}>(args?: Subset<T, Accounts$subproject_usersArgs>): Prisma.PrismaPromise<Array<Subproject_usersGetPayload<T>>| Null>;

    subprojects<T extends Accounts$subprojectsArgs= {}>(args?: Subset<T, Accounts$subprojectsArgs>): Prisma.PrismaPromise<Array<SubprojectsGetPayload<T>>| Null>;

    taxa<T extends Accounts$taxaArgs= {}>(args?: Subset<T, Accounts$taxaArgs>): Prisma.PrismaPromise<Array<TaxaGetPayload<T>>| Null>;

    taxonomies<T extends Accounts$taxonomiesArgs= {}>(args?: Subset<T, Accounts$taxonomiesArgs>): Prisma.PrismaPromise<Array<TaxonomiesGetPayload<T>>| Null>;

    units<T extends Accounts$unitsArgs= {}>(args?: Subset<T, Accounts$unitsArgs>): Prisma.PrismaPromise<Array<UnitsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Accounts base type for findUnique actions
   */
  export type AccountsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     */
    where: AccountsWhereUniqueInput
  }

  /**
   * Accounts findUnique
   */
  export interface AccountsFindUniqueArgs extends AccountsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Accounts findUniqueOrThrow
   */
  export type AccountsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     */
    where: AccountsWhereUniqueInput
  }


  /**
   * Accounts base type for findFirst actions
   */
  export type AccountsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }

  /**
   * Accounts findFirst
   */
  export interface AccountsFindFirstArgs extends AccountsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Accounts findFirstOrThrow
   */
  export type AccountsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }


  /**
   * Accounts findMany
   */
  export type AccountsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }


  /**
   * Accounts create
   */
  export type AccountsCreateArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * The data needed to create a Accounts.
     */
    data: XOR<AccountsCreateInput, AccountsUncheckedCreateInput>
  }


  /**
   * Accounts createMany
   */
  export type AccountsCreateManyArgs = {
    /**
     * The data used to create many Accounts.
     */
    data: Enumerable<AccountsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Accounts update
   */
  export type AccountsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * The data needed to update a Accounts.
     */
    data: XOR<AccountsUpdateInput, AccountsUncheckedUpdateInput>
    /**
     * Choose, which Accounts to update.
     */
    where: AccountsWhereUniqueInput
  }


  /**
   * Accounts updateMany
   */
  export type AccountsUpdateManyArgs = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountsUpdateManyMutationInput, AccountsUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountsWhereInput
  }


  /**
   * Accounts upsert
   */
  export type AccountsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * The filter to search for the Accounts to update in case it exists.
     */
    where: AccountsWhereUniqueInput
    /**
     * In case the Accounts found by the `where` argument doesn't exist, create a new Accounts with this data.
     */
    create: XOR<AccountsCreateInput, AccountsUncheckedCreateInput>
    /**
     * In case the Accounts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountsUpdateInput, AccountsUncheckedUpdateInput>
  }


  /**
   * Accounts delete
   */
  export type AccountsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    /**
     * Filter which Accounts to delete.
     */
    where: AccountsWhereUniqueInput
  }


  /**
   * Accounts deleteMany
   */
  export type AccountsDeleteManyArgs = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountsWhereInput
  }


  /**
   * Accounts.action_report_values
   */
  export type Accounts$action_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    where?: Action_report_valuesWhereInput
    orderBy?: Enumerable<Action_report_valuesOrderByWithRelationInput>
    cursor?: Action_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_report_valuesScalarFieldEnum>
  }


  /**
   * Accounts.action_reports
   */
  export type Accounts$action_reportsArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    where?: Action_reportsWhereInput
    orderBy?: Enumerable<Action_reportsOrderByWithRelationInput>
    cursor?: Action_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_reportsScalarFieldEnum>
  }


  /**
   * Accounts.action_values
   */
  export type Accounts$action_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    where?: Action_valuesWhereInput
    orderBy?: Enumerable<Action_valuesOrderByWithRelationInput>
    cursor?: Action_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_valuesScalarFieldEnum>
  }


  /**
   * Accounts.actions
   */
  export type Accounts$actionsArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    where?: ActionsWhereInput
    orderBy?: Enumerable<ActionsOrderByWithRelationInput>
    cursor?: ActionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ActionsScalarFieldEnum>
  }


  /**
   * Accounts.check_taxa
   */
  export type Accounts$check_taxaArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    where?: Check_taxaWhereInput
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    cursor?: Check_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Check_taxaScalarFieldEnum>
  }


  /**
   * Accounts.check_values
   */
  export type Accounts$check_valuesArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    where?: Check_valuesWhereInput
    orderBy?: Enumerable<Check_valuesOrderByWithRelationInput>
    cursor?: Check_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Check_valuesScalarFieldEnum>
  }


  /**
   * Accounts.checks
   */
  export type Accounts$checksArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    where?: ChecksWhereInput
    orderBy?: Enumerable<ChecksOrderByWithRelationInput>
    cursor?: ChecksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ChecksScalarFieldEnum>
  }


  /**
   * Accounts.fields
   */
  export type Accounts$fieldsArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    where?: FieldsWhereInput
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    cursor?: FieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }


  /**
   * Accounts.files
   */
  export type Accounts$filesArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    where?: FilesWhereInput
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    cursor?: FilesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Accounts.goal_report_values
   */
  export type Accounts$goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    cursor?: Goal_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Accounts.goal_reports
   */
  export type Accounts$goal_reportsArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    where?: Goal_reportsWhereInput
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    cursor?: Goal_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Accounts.goals
   */
  export type Accounts$goalsArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    where?: GoalsWhereInput
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    cursor?: GoalsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Accounts.list_values
   */
  export type Accounts$list_valuesArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    where?: List_valuesWhereInput
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    cursor?: List_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * Accounts.lists
   */
  export type Accounts$listsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    where?: ListsWhereInput
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    cursor?: ListsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Accounts.observation_sources
   */
  export type Accounts$observation_sourcesArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    where?: Observation_sourcesWhereInput
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    cursor?: Observation_sourcesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Accounts.observations
   */
  export type Accounts$observationsArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    where?: ObservationsWhereInput
    orderBy?: Enumerable<ObservationsOrderByWithRelationInput>
    cursor?: ObservationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ObservationsScalarFieldEnum>
  }


  /**
   * Accounts.persons
   */
  export type Accounts$personsArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    where?: PersonsWhereInput
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    cursor?: PersonsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Accounts.place_levels
   */
  export type Accounts$place_levelsArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    where?: Place_levelsWhereInput
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    cursor?: Place_levelsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Accounts.place_report_values
   */
  export type Accounts$place_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    where?: Place_report_valuesWhereInput
    orderBy?: Enumerable<Place_report_valuesOrderByWithRelationInput>
    cursor?: Place_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_report_valuesScalarFieldEnum>
  }


  /**
   * Accounts.place_reports
   */
  export type Accounts$place_reportsArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    where?: Place_reportsWhereInput
    orderBy?: Enumerable<Place_reportsOrderByWithRelationInput>
    cursor?: Place_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_reportsScalarFieldEnum>
  }


  /**
   * Accounts.place_users
   */
  export type Accounts$place_usersArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    where?: Place_usersWhereInput
    orderBy?: Enumerable<Place_usersOrderByWithRelationInput>
    cursor?: Place_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_usersScalarFieldEnum>
  }


  /**
   * Accounts.places
   */
  export type Accounts$placesArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    where?: PlacesWhereInput
    orderBy?: Enumerable<PlacesOrderByWithRelationInput>
    cursor?: PlacesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PlacesScalarFieldEnum>
  }


  /**
   * Accounts.project_reports
   */
  export type Accounts$project_reportsArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    where?: Project_reportsWhereInput
    orderBy?: Enumerable<Project_reportsOrderByWithRelationInput>
    cursor?: Project_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_reportsScalarFieldEnum>
  }


  /**
   * Accounts.project_users
   */
  export type Accounts$project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    cursor?: Project_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Accounts.projects
   */
  export type Accounts$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    cursor?: ProjectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }


  /**
   * Accounts.subproject_reports
   */
  export type Accounts$subproject_reportsArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    where?: Subproject_reportsWhereInput
    orderBy?: Enumerable<Subproject_reportsOrderByWithRelationInput>
    cursor?: Subproject_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_reportsScalarFieldEnum>
  }


  /**
   * Accounts.subproject_taxa
   */
  export type Accounts$subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    cursor?: Subproject_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Accounts.subproject_users
   */
  export type Accounts$subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    cursor?: Subproject_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Accounts.subprojects
   */
  export type Accounts$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    cursor?: SubprojectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Accounts.taxa
   */
  export type Accounts$taxaArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    where?: TaxaWhereInput
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    cursor?: TaxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Accounts.taxonomies
   */
  export type Accounts$taxonomiesArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    where?: TaxonomiesWhereInput
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    cursor?: TaxonomiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Accounts.units
   */
  export type Accounts$unitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    cursor?: UnitsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Accounts without action
   */
  export type AccountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
  }



  /**
   * Model Action_report_values
   */


  export type AggregateAction_report_values = {
    _count: Action_report_valuesCountAggregateOutputType | null
    _avg: Action_report_valuesAvgAggregateOutputType | null
    _sum: Action_report_valuesSumAggregateOutputType | null
    _min: Action_report_valuesMinAggregateOutputType | null
    _max: Action_report_valuesMaxAggregateOutputType | null
  }

  export type Action_report_valuesAvgAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Action_report_valuesSumAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Action_report_valuesMinAggregateOutputType = {
    action_report_value_id: string | null
    account_id: string | null
    action_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Action_report_valuesMaxAggregateOutputType = {
    action_report_value_id: string | null
    account_id: string | null
    action_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Action_report_valuesCountAggregateOutputType = {
    action_report_value_id: number
    account_id: number
    action_report_id: number
    unit_id: number
    value_integer: number
    value_numeric: number
    value_text: number
    label: number
    deleted: number
    _all: number
  }


  export type Action_report_valuesAvgAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Action_report_valuesSumAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Action_report_valuesMinAggregateInputType = {
    action_report_value_id?: true
    account_id?: true
    action_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Action_report_valuesMaxAggregateInputType = {
    action_report_value_id?: true
    account_id?: true
    action_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Action_report_valuesCountAggregateInputType = {
    action_report_value_id?: true
    account_id?: true
    action_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Action_report_valuesAggregateArgs = {
    /**
     * Filter which Action_report_values to aggregate.
     */
    where?: Action_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_report_values to fetch.
     */
    orderBy?: Enumerable<Action_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Action_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Action_report_values
    **/
    _count?: true | Action_report_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Action_report_valuesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Action_report_valuesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Action_report_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Action_report_valuesMaxAggregateInputType
  }

  export type GetAction_report_valuesAggregateType<T extends Action_report_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateAction_report_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAction_report_values[P]>
      : GetScalarType<T[P], AggregateAction_report_values[P]>
  }




  export type Action_report_valuesGroupByArgs = {
    where?: Action_report_valuesWhereInput
    orderBy?: Enumerable<Action_report_valuesOrderByWithAggregationInput>
    by: Action_report_valuesScalarFieldEnum[]
    having?: Action_report_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Action_report_valuesCountAggregateInputType | true
    _avg?: Action_report_valuesAvgAggregateInputType
    _sum?: Action_report_valuesSumAggregateInputType
    _min?: Action_report_valuesMinAggregateInputType
    _max?: Action_report_valuesMaxAggregateInputType
  }


  export type Action_report_valuesGroupByOutputType = {
    action_report_value_id: string
    account_id: string | null
    action_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
    _count: Action_report_valuesCountAggregateOutputType | null
    _avg: Action_report_valuesAvgAggregateOutputType | null
    _sum: Action_report_valuesSumAggregateOutputType | null
    _min: Action_report_valuesMinAggregateOutputType | null
    _max: Action_report_valuesMaxAggregateOutputType | null
  }

  type GetAction_report_valuesGroupByPayload<T extends Action_report_valuesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Action_report_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Action_report_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Action_report_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], Action_report_valuesGroupByOutputType[P]>
        }
      >
    >


  export type Action_report_valuesSelect = {
    action_report_value_id?: boolean
    account_id?: boolean
    action_report_id?: boolean
    unit_id?: boolean
    value_integer?: boolean
    value_numeric?: boolean
    value_text?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    action_reports?: boolean | Action_reportsArgs
    units?: boolean | UnitsArgs
  }


  export type Action_report_valuesInclude = {
    accounts?: boolean | AccountsArgs
    action_reports?: boolean | Action_reportsArgs
    units?: boolean | UnitsArgs
  }

  export type Action_report_valuesGetPayload<S extends boolean | null | undefined | Action_report_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Action_report_values :
    S extends undefined ? never :
    S extends { include: any } & (Action_report_valuesArgs | Action_report_valuesFindManyArgs)
    ? Action_report_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'action_reports' ? Action_reportsGetPayload<S['include'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Action_report_valuesArgs | Action_report_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'action_reports' ? Action_reportsGetPayload<S['select'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['select'][P]> | null :  P extends keyof Action_report_values ? Action_report_values[P] : never
  } 
      : Action_report_values


  type Action_report_valuesCountArgs = 
    Omit<Action_report_valuesFindManyArgs, 'select' | 'include'> & {
      select?: Action_report_valuesCountAggregateInputType | true
    }

  export interface Action_report_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Action_report_values that matches the filter.
     * @param {Action_report_valuesFindUniqueArgs} args - Arguments to find a Action_report_values
     * @example
     * // Get one Action_report_values
     * const action_report_values = await prisma.action_report_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Action_report_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Action_report_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Action_report_values'> extends True ? Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>> : Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T> | null, null>

    /**
     * Find one Action_report_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Action_report_valuesFindUniqueOrThrowArgs} args - Arguments to find a Action_report_values
     * @example
     * // Get one Action_report_values
     * const action_report_values = await prisma.action_report_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Action_report_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Action_report_valuesFindUniqueOrThrowArgs>
    ): Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>>

    /**
     * Find the first Action_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_report_valuesFindFirstArgs} args - Arguments to find a Action_report_values
     * @example
     * // Get one Action_report_values
     * const action_report_values = await prisma.action_report_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Action_report_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Action_report_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Action_report_values'> extends True ? Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>> : Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T> | null, null>

    /**
     * Find the first Action_report_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_report_valuesFindFirstOrThrowArgs} args - Arguments to find a Action_report_values
     * @example
     * // Get one Action_report_values
     * const action_report_values = await prisma.action_report_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Action_report_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Action_report_valuesFindFirstOrThrowArgs>
    ): Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>>

    /**
     * Find zero or more Action_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_report_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Action_report_values
     * const action_report_values = await prisma.action_report_values.findMany()
     * 
     * // Get first 10 Action_report_values
     * const action_report_values = await prisma.action_report_values.findMany({ take: 10 })
     * 
     * // Only select the `action_report_value_id`
     * const action_report_valuesWithAction_report_value_idOnly = await prisma.action_report_values.findMany({ select: { action_report_value_id: true } })
     * 
    **/
    findMany<T extends Action_report_valuesFindManyArgs>(
      args?: SelectSubset<T, Action_report_valuesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Action_report_valuesGetPayload<T>>>

    /**
     * Create a Action_report_values.
     * @param {Action_report_valuesCreateArgs} args - Arguments to create a Action_report_values.
     * @example
     * // Create one Action_report_values
     * const Action_report_values = await prisma.action_report_values.create({
     *   data: {
     *     // ... data to create a Action_report_values
     *   }
     * })
     * 
    **/
    create<T extends Action_report_valuesCreateArgs>(
      args: SelectSubset<T, Action_report_valuesCreateArgs>
    ): Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>>

    /**
     * Create many Action_report_values.
     *     @param {Action_report_valuesCreateManyArgs} args - Arguments to create many Action_report_values.
     *     @example
     *     // Create many Action_report_values
     *     const action_report_values = await prisma.action_report_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Action_report_valuesCreateManyArgs>(
      args?: SelectSubset<T, Action_report_valuesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Action_report_values.
     * @param {Action_report_valuesDeleteArgs} args - Arguments to delete one Action_report_values.
     * @example
     * // Delete one Action_report_values
     * const Action_report_values = await prisma.action_report_values.delete({
     *   where: {
     *     // ... filter to delete one Action_report_values
     *   }
     * })
     * 
    **/
    delete<T extends Action_report_valuesDeleteArgs>(
      args: SelectSubset<T, Action_report_valuesDeleteArgs>
    ): Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>>

    /**
     * Update one Action_report_values.
     * @param {Action_report_valuesUpdateArgs} args - Arguments to update one Action_report_values.
     * @example
     * // Update one Action_report_values
     * const action_report_values = await prisma.action_report_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Action_report_valuesUpdateArgs>(
      args: SelectSubset<T, Action_report_valuesUpdateArgs>
    ): Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>>

    /**
     * Delete zero or more Action_report_values.
     * @param {Action_report_valuesDeleteManyArgs} args - Arguments to filter Action_report_values to delete.
     * @example
     * // Delete a few Action_report_values
     * const { count } = await prisma.action_report_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Action_report_valuesDeleteManyArgs>(
      args?: SelectSubset<T, Action_report_valuesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Action_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_report_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Action_report_values
     * const action_report_values = await prisma.action_report_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Action_report_valuesUpdateManyArgs>(
      args: SelectSubset<T, Action_report_valuesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Action_report_values.
     * @param {Action_report_valuesUpsertArgs} args - Arguments to update or create a Action_report_values.
     * @example
     * // Update or create a Action_report_values
     * const action_report_values = await prisma.action_report_values.upsert({
     *   create: {
     *     // ... data to create a Action_report_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Action_report_values we want to update
     *   }
     * })
    **/
    upsert<T extends Action_report_valuesUpsertArgs>(
      args: SelectSubset<T, Action_report_valuesUpsertArgs>
    ): Prisma__Action_report_valuesClient<Action_report_valuesGetPayload<T>>

    /**
     * Count the number of Action_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_report_valuesCountArgs} args - Arguments to filter Action_report_values to count.
     * @example
     * // Count the number of Action_report_values
     * const count = await prisma.action_report_values.count({
     *   where: {
     *     // ... the filter for the Action_report_values we want to count
     *   }
     * })
    **/
    count<T extends Action_report_valuesCountArgs>(
      args?: Subset<T, Action_report_valuesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Action_report_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Action_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_report_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Action_report_valuesAggregateArgs>(args: Subset<T, Action_report_valuesAggregateArgs>): Prisma.PrismaPromise<GetAction_report_valuesAggregateType<T>>

    /**
     * Group by Action_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_report_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Action_report_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Action_report_valuesGroupByArgs['orderBy'] }
        : { orderBy?: Action_report_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Action_report_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAction_report_valuesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Action_report_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Action_report_valuesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    action_reports<T extends Action_reportsArgs= {}>(args?: Subset<T, Action_reportsArgs>): Prisma__Action_reportsClient<Action_reportsGetPayload<T> | Null>;

    units<T extends UnitsArgs= {}>(args?: Subset<T, UnitsArgs>): Prisma__UnitsClient<UnitsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Action_report_values base type for findUnique actions
   */
  export type Action_report_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * Filter, which Action_report_values to fetch.
     */
    where: Action_report_valuesWhereUniqueInput
  }

  /**
   * Action_report_values findUnique
   */
  export interface Action_report_valuesFindUniqueArgs extends Action_report_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Action_report_values findUniqueOrThrow
   */
  export type Action_report_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * Filter, which Action_report_values to fetch.
     */
    where: Action_report_valuesWhereUniqueInput
  }


  /**
   * Action_report_values base type for findFirst actions
   */
  export type Action_report_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * Filter, which Action_report_values to fetch.
     */
    where?: Action_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_report_values to fetch.
     */
    orderBy?: Enumerable<Action_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Action_report_values.
     */
    cursor?: Action_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Action_report_values.
     */
    distinct?: Enumerable<Action_report_valuesScalarFieldEnum>
  }

  /**
   * Action_report_values findFirst
   */
  export interface Action_report_valuesFindFirstArgs extends Action_report_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Action_report_values findFirstOrThrow
   */
  export type Action_report_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * Filter, which Action_report_values to fetch.
     */
    where?: Action_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_report_values to fetch.
     */
    orderBy?: Enumerable<Action_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Action_report_values.
     */
    cursor?: Action_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Action_report_values.
     */
    distinct?: Enumerable<Action_report_valuesScalarFieldEnum>
  }


  /**
   * Action_report_values findMany
   */
  export type Action_report_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * Filter, which Action_report_values to fetch.
     */
    where?: Action_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_report_values to fetch.
     */
    orderBy?: Enumerable<Action_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Action_report_values.
     */
    cursor?: Action_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_report_values.
     */
    skip?: number
    distinct?: Enumerable<Action_report_valuesScalarFieldEnum>
  }


  /**
   * Action_report_values create
   */
  export type Action_report_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * The data needed to create a Action_report_values.
     */
    data: XOR<Action_report_valuesCreateInput, Action_report_valuesUncheckedCreateInput>
  }


  /**
   * Action_report_values createMany
   */
  export type Action_report_valuesCreateManyArgs = {
    /**
     * The data used to create many Action_report_values.
     */
    data: Enumerable<Action_report_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Action_report_values update
   */
  export type Action_report_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * The data needed to update a Action_report_values.
     */
    data: XOR<Action_report_valuesUpdateInput, Action_report_valuesUncheckedUpdateInput>
    /**
     * Choose, which Action_report_values to update.
     */
    where: Action_report_valuesWhereUniqueInput
  }


  /**
   * Action_report_values updateMany
   */
  export type Action_report_valuesUpdateManyArgs = {
    /**
     * The data used to update Action_report_values.
     */
    data: XOR<Action_report_valuesUpdateManyMutationInput, Action_report_valuesUncheckedUpdateManyInput>
    /**
     * Filter which Action_report_values to update
     */
    where?: Action_report_valuesWhereInput
  }


  /**
   * Action_report_values upsert
   */
  export type Action_report_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * The filter to search for the Action_report_values to update in case it exists.
     */
    where: Action_report_valuesWhereUniqueInput
    /**
     * In case the Action_report_values found by the `where` argument doesn't exist, create a new Action_report_values with this data.
     */
    create: XOR<Action_report_valuesCreateInput, Action_report_valuesUncheckedCreateInput>
    /**
     * In case the Action_report_values was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Action_report_valuesUpdateInput, Action_report_valuesUncheckedUpdateInput>
  }


  /**
   * Action_report_values delete
   */
  export type Action_report_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    /**
     * Filter which Action_report_values to delete.
     */
    where: Action_report_valuesWhereUniqueInput
  }


  /**
   * Action_report_values deleteMany
   */
  export type Action_report_valuesDeleteManyArgs = {
    /**
     * Filter which Action_report_values to delete
     */
    where?: Action_report_valuesWhereInput
  }


  /**
   * Action_report_values without action
   */
  export type Action_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
  }



  /**
   * Model Action_reports
   */


  export type AggregateAction_reports = {
    _count: Action_reportsCountAggregateOutputType | null
    _avg: Action_reportsAvgAggregateOutputType | null
    _sum: Action_reportsSumAggregateOutputType | null
    _min: Action_reportsMinAggregateOutputType | null
    _max: Action_reportsMaxAggregateOutputType | null
  }

  export type Action_reportsAvgAggregateOutputType = {
    year: number | null
  }

  export type Action_reportsSumAggregateOutputType = {
    year: number | null
  }

  export type Action_reportsMinAggregateOutputType = {
    action_report_id: string | null
    account_id: string | null
    action_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Action_reportsMaxAggregateOutputType = {
    action_report_id: string | null
    account_id: string | null
    action_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Action_reportsCountAggregateOutputType = {
    action_report_id: number
    account_id: number
    action_id: number
    year: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type Action_reportsAvgAggregateInputType = {
    year?: true
  }

  export type Action_reportsSumAggregateInputType = {
    year?: true
  }

  export type Action_reportsMinAggregateInputType = {
    action_report_id?: true
    account_id?: true
    action_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Action_reportsMaxAggregateInputType = {
    action_report_id?: true
    account_id?: true
    action_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Action_reportsCountAggregateInputType = {
    action_report_id?: true
    account_id?: true
    action_id?: true
    year?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Action_reportsAggregateArgs = {
    /**
     * Filter which Action_reports to aggregate.
     */
    where?: Action_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_reports to fetch.
     */
    orderBy?: Enumerable<Action_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Action_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Action_reports
    **/
    _count?: true | Action_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Action_reportsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Action_reportsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Action_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Action_reportsMaxAggregateInputType
  }

  export type GetAction_reportsAggregateType<T extends Action_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateAction_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAction_reports[P]>
      : GetScalarType<T[P], AggregateAction_reports[P]>
  }




  export type Action_reportsGroupByArgs = {
    where?: Action_reportsWhereInput
    orderBy?: Enumerable<Action_reportsOrderByWithAggregationInput>
    by: Action_reportsScalarFieldEnum[]
    having?: Action_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Action_reportsCountAggregateInputType | true
    _avg?: Action_reportsAvgAggregateInputType
    _sum?: Action_reportsSumAggregateInputType
    _min?: Action_reportsMinAggregateInputType
    _max?: Action_reportsMaxAggregateInputType
  }


  export type Action_reportsGroupByOutputType = {
    action_report_id: string
    account_id: string | null
    action_id: string | null
    year: number | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: Action_reportsCountAggregateOutputType | null
    _avg: Action_reportsAvgAggregateOutputType | null
    _sum: Action_reportsSumAggregateOutputType | null
    _min: Action_reportsMinAggregateOutputType | null
    _max: Action_reportsMaxAggregateOutputType | null
  }

  type GetAction_reportsGroupByPayload<T extends Action_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Action_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Action_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Action_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Action_reportsGroupByOutputType[P]>
        }
      >
    >


  export type Action_reportsSelect = {
    action_report_id?: boolean
    account_id?: boolean
    action_id?: boolean
    year?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    action_report_values?: boolean | Action_reports$action_report_valuesArgs
    accounts?: boolean | AccountsArgs
    actions?: boolean | ActionsArgs
    _count?: boolean | Action_reportsCountOutputTypeArgs
  }


  export type Action_reportsInclude = {
    action_report_values?: boolean | Action_reports$action_report_valuesArgs
    accounts?: boolean | AccountsArgs
    actions?: boolean | ActionsArgs
    _count?: boolean | Action_reportsCountOutputTypeArgs
  }

  export type Action_reportsGetPayload<S extends boolean | null | undefined | Action_reportsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Action_reports :
    S extends undefined ? never :
    S extends { include: any } & (Action_reportsArgs | Action_reportsFindManyArgs)
    ? Action_reports  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'action_report_values' ? Array < Action_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'actions' ? ActionsGetPayload<S['include'][P]> | null :
        P extends '_count' ? Action_reportsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Action_reportsArgs | Action_reportsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'action_report_values' ? Array < Action_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'actions' ? ActionsGetPayload<S['select'][P]> | null :
        P extends '_count' ? Action_reportsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Action_reports ? Action_reports[P] : never
  } 
      : Action_reports


  type Action_reportsCountArgs = 
    Omit<Action_reportsFindManyArgs, 'select' | 'include'> & {
      select?: Action_reportsCountAggregateInputType | true
    }

  export interface Action_reportsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Action_reports that matches the filter.
     * @param {Action_reportsFindUniqueArgs} args - Arguments to find a Action_reports
     * @example
     * // Get one Action_reports
     * const action_reports = await prisma.action_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Action_reportsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Action_reportsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Action_reports'> extends True ? Prisma__Action_reportsClient<Action_reportsGetPayload<T>> : Prisma__Action_reportsClient<Action_reportsGetPayload<T> | null, null>

    /**
     * Find one Action_reports that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Action_reportsFindUniqueOrThrowArgs} args - Arguments to find a Action_reports
     * @example
     * // Get one Action_reports
     * const action_reports = await prisma.action_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Action_reportsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Action_reportsFindUniqueOrThrowArgs>
    ): Prisma__Action_reportsClient<Action_reportsGetPayload<T>>

    /**
     * Find the first Action_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_reportsFindFirstArgs} args - Arguments to find a Action_reports
     * @example
     * // Get one Action_reports
     * const action_reports = await prisma.action_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Action_reportsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Action_reportsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Action_reports'> extends True ? Prisma__Action_reportsClient<Action_reportsGetPayload<T>> : Prisma__Action_reportsClient<Action_reportsGetPayload<T> | null, null>

    /**
     * Find the first Action_reports that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_reportsFindFirstOrThrowArgs} args - Arguments to find a Action_reports
     * @example
     * // Get one Action_reports
     * const action_reports = await prisma.action_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Action_reportsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Action_reportsFindFirstOrThrowArgs>
    ): Prisma__Action_reportsClient<Action_reportsGetPayload<T>>

    /**
     * Find zero or more Action_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_reportsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Action_reports
     * const action_reports = await prisma.action_reports.findMany()
     * 
     * // Get first 10 Action_reports
     * const action_reports = await prisma.action_reports.findMany({ take: 10 })
     * 
     * // Only select the `action_report_id`
     * const action_reportsWithAction_report_idOnly = await prisma.action_reports.findMany({ select: { action_report_id: true } })
     * 
    **/
    findMany<T extends Action_reportsFindManyArgs>(
      args?: SelectSubset<T, Action_reportsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Action_reportsGetPayload<T>>>

    /**
     * Create a Action_reports.
     * @param {Action_reportsCreateArgs} args - Arguments to create a Action_reports.
     * @example
     * // Create one Action_reports
     * const Action_reports = await prisma.action_reports.create({
     *   data: {
     *     // ... data to create a Action_reports
     *   }
     * })
     * 
    **/
    create<T extends Action_reportsCreateArgs>(
      args: SelectSubset<T, Action_reportsCreateArgs>
    ): Prisma__Action_reportsClient<Action_reportsGetPayload<T>>

    /**
     * Create many Action_reports.
     *     @param {Action_reportsCreateManyArgs} args - Arguments to create many Action_reports.
     *     @example
     *     // Create many Action_reports
     *     const action_reports = await prisma.action_reports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Action_reportsCreateManyArgs>(
      args?: SelectSubset<T, Action_reportsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Action_reports.
     * @param {Action_reportsDeleteArgs} args - Arguments to delete one Action_reports.
     * @example
     * // Delete one Action_reports
     * const Action_reports = await prisma.action_reports.delete({
     *   where: {
     *     // ... filter to delete one Action_reports
     *   }
     * })
     * 
    **/
    delete<T extends Action_reportsDeleteArgs>(
      args: SelectSubset<T, Action_reportsDeleteArgs>
    ): Prisma__Action_reportsClient<Action_reportsGetPayload<T>>

    /**
     * Update one Action_reports.
     * @param {Action_reportsUpdateArgs} args - Arguments to update one Action_reports.
     * @example
     * // Update one Action_reports
     * const action_reports = await prisma.action_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Action_reportsUpdateArgs>(
      args: SelectSubset<T, Action_reportsUpdateArgs>
    ): Prisma__Action_reportsClient<Action_reportsGetPayload<T>>

    /**
     * Delete zero or more Action_reports.
     * @param {Action_reportsDeleteManyArgs} args - Arguments to filter Action_reports to delete.
     * @example
     * // Delete a few Action_reports
     * const { count } = await prisma.action_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Action_reportsDeleteManyArgs>(
      args?: SelectSubset<T, Action_reportsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Action_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Action_reports
     * const action_reports = await prisma.action_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Action_reportsUpdateManyArgs>(
      args: SelectSubset<T, Action_reportsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Action_reports.
     * @param {Action_reportsUpsertArgs} args - Arguments to update or create a Action_reports.
     * @example
     * // Update or create a Action_reports
     * const action_reports = await prisma.action_reports.upsert({
     *   create: {
     *     // ... data to create a Action_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Action_reports we want to update
     *   }
     * })
    **/
    upsert<T extends Action_reportsUpsertArgs>(
      args: SelectSubset<T, Action_reportsUpsertArgs>
    ): Prisma__Action_reportsClient<Action_reportsGetPayload<T>>

    /**
     * Count the number of Action_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_reportsCountArgs} args - Arguments to filter Action_reports to count.
     * @example
     * // Count the number of Action_reports
     * const count = await prisma.action_reports.count({
     *   where: {
     *     // ... the filter for the Action_reports we want to count
     *   }
     * })
    **/
    count<T extends Action_reportsCountArgs>(
      args?: Subset<T, Action_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Action_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Action_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Action_reportsAggregateArgs>(args: Subset<T, Action_reportsAggregateArgs>): Prisma.PrismaPromise<GetAction_reportsAggregateType<T>>

    /**
     * Group by Action_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Action_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Action_reportsGroupByArgs['orderBy'] }
        : { orderBy?: Action_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Action_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAction_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Action_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Action_reportsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    action_report_values<T extends Action_reports$action_report_valuesArgs= {}>(args?: Subset<T, Action_reports$action_report_valuesArgs>): Prisma.PrismaPromise<Array<Action_report_valuesGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    actions<T extends ActionsArgs= {}>(args?: Subset<T, ActionsArgs>): Prisma__ActionsClient<ActionsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Action_reports base type for findUnique actions
   */
  export type Action_reportsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * Filter, which Action_reports to fetch.
     */
    where: Action_reportsWhereUniqueInput
  }

  /**
   * Action_reports findUnique
   */
  export interface Action_reportsFindUniqueArgs extends Action_reportsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Action_reports findUniqueOrThrow
   */
  export type Action_reportsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * Filter, which Action_reports to fetch.
     */
    where: Action_reportsWhereUniqueInput
  }


  /**
   * Action_reports base type for findFirst actions
   */
  export type Action_reportsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * Filter, which Action_reports to fetch.
     */
    where?: Action_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_reports to fetch.
     */
    orderBy?: Enumerable<Action_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Action_reports.
     */
    cursor?: Action_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Action_reports.
     */
    distinct?: Enumerable<Action_reportsScalarFieldEnum>
  }

  /**
   * Action_reports findFirst
   */
  export interface Action_reportsFindFirstArgs extends Action_reportsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Action_reports findFirstOrThrow
   */
  export type Action_reportsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * Filter, which Action_reports to fetch.
     */
    where?: Action_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_reports to fetch.
     */
    orderBy?: Enumerable<Action_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Action_reports.
     */
    cursor?: Action_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Action_reports.
     */
    distinct?: Enumerable<Action_reportsScalarFieldEnum>
  }


  /**
   * Action_reports findMany
   */
  export type Action_reportsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * Filter, which Action_reports to fetch.
     */
    where?: Action_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_reports to fetch.
     */
    orderBy?: Enumerable<Action_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Action_reports.
     */
    cursor?: Action_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_reports.
     */
    skip?: number
    distinct?: Enumerable<Action_reportsScalarFieldEnum>
  }


  /**
   * Action_reports create
   */
  export type Action_reportsCreateArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * The data needed to create a Action_reports.
     */
    data: XOR<Action_reportsCreateInput, Action_reportsUncheckedCreateInput>
  }


  /**
   * Action_reports createMany
   */
  export type Action_reportsCreateManyArgs = {
    /**
     * The data used to create many Action_reports.
     */
    data: Enumerable<Action_reportsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Action_reports update
   */
  export type Action_reportsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * The data needed to update a Action_reports.
     */
    data: XOR<Action_reportsUpdateInput, Action_reportsUncheckedUpdateInput>
    /**
     * Choose, which Action_reports to update.
     */
    where: Action_reportsWhereUniqueInput
  }


  /**
   * Action_reports updateMany
   */
  export type Action_reportsUpdateManyArgs = {
    /**
     * The data used to update Action_reports.
     */
    data: XOR<Action_reportsUpdateManyMutationInput, Action_reportsUncheckedUpdateManyInput>
    /**
     * Filter which Action_reports to update
     */
    where?: Action_reportsWhereInput
  }


  /**
   * Action_reports upsert
   */
  export type Action_reportsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * The filter to search for the Action_reports to update in case it exists.
     */
    where: Action_reportsWhereUniqueInput
    /**
     * In case the Action_reports found by the `where` argument doesn't exist, create a new Action_reports with this data.
     */
    create: XOR<Action_reportsCreateInput, Action_reportsUncheckedCreateInput>
    /**
     * In case the Action_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Action_reportsUpdateInput, Action_reportsUncheckedUpdateInput>
  }


  /**
   * Action_reports delete
   */
  export type Action_reportsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    /**
     * Filter which Action_reports to delete.
     */
    where: Action_reportsWhereUniqueInput
  }


  /**
   * Action_reports deleteMany
   */
  export type Action_reportsDeleteManyArgs = {
    /**
     * Filter which Action_reports to delete
     */
    where?: Action_reportsWhereInput
  }


  /**
   * Action_reports.action_report_values
   */
  export type Action_reports$action_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    where?: Action_report_valuesWhereInput
    orderBy?: Enumerable<Action_report_valuesOrderByWithRelationInput>
    cursor?: Action_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_report_valuesScalarFieldEnum>
  }


  /**
   * Action_reports without action
   */
  export type Action_reportsArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
  }



  /**
   * Model Action_values
   */


  export type AggregateAction_values = {
    _count: Action_valuesCountAggregateOutputType | null
    _avg: Action_valuesAvgAggregateOutputType | null
    _sum: Action_valuesSumAggregateOutputType | null
    _min: Action_valuesMinAggregateOutputType | null
    _max: Action_valuesMaxAggregateOutputType | null
  }

  export type Action_valuesAvgAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Action_valuesSumAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Action_valuesMinAggregateOutputType = {
    action_value_id: string | null
    account_id: string | null
    action_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Action_valuesMaxAggregateOutputType = {
    action_value_id: string | null
    account_id: string | null
    action_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Action_valuesCountAggregateOutputType = {
    action_value_id: number
    account_id: number
    action_id: number
    unit_id: number
    value_integer: number
    value_numeric: number
    value_text: number
    label: number
    deleted: number
    _all: number
  }


  export type Action_valuesAvgAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Action_valuesSumAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Action_valuesMinAggregateInputType = {
    action_value_id?: true
    account_id?: true
    action_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Action_valuesMaxAggregateInputType = {
    action_value_id?: true
    account_id?: true
    action_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Action_valuesCountAggregateInputType = {
    action_value_id?: true
    account_id?: true
    action_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Action_valuesAggregateArgs = {
    /**
     * Filter which Action_values to aggregate.
     */
    where?: Action_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_values to fetch.
     */
    orderBy?: Enumerable<Action_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Action_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Action_values
    **/
    _count?: true | Action_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Action_valuesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Action_valuesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Action_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Action_valuesMaxAggregateInputType
  }

  export type GetAction_valuesAggregateType<T extends Action_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateAction_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAction_values[P]>
      : GetScalarType<T[P], AggregateAction_values[P]>
  }




  export type Action_valuesGroupByArgs = {
    where?: Action_valuesWhereInput
    orderBy?: Enumerable<Action_valuesOrderByWithAggregationInput>
    by: Action_valuesScalarFieldEnum[]
    having?: Action_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Action_valuesCountAggregateInputType | true
    _avg?: Action_valuesAvgAggregateInputType
    _sum?: Action_valuesSumAggregateInputType
    _min?: Action_valuesMinAggregateInputType
    _max?: Action_valuesMaxAggregateInputType
  }


  export type Action_valuesGroupByOutputType = {
    action_value_id: string
    account_id: string | null
    action_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
    _count: Action_valuesCountAggregateOutputType | null
    _avg: Action_valuesAvgAggregateOutputType | null
    _sum: Action_valuesSumAggregateOutputType | null
    _min: Action_valuesMinAggregateOutputType | null
    _max: Action_valuesMaxAggregateOutputType | null
  }

  type GetAction_valuesGroupByPayload<T extends Action_valuesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Action_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Action_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Action_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], Action_valuesGroupByOutputType[P]>
        }
      >
    >


  export type Action_valuesSelect = {
    action_value_id?: boolean
    account_id?: boolean
    action_id?: boolean
    unit_id?: boolean
    value_integer?: boolean
    value_numeric?: boolean
    value_text?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    actions?: boolean | ActionsArgs
    units?: boolean | UnitsArgs
  }


  export type Action_valuesInclude = {
    accounts?: boolean | AccountsArgs
    actions?: boolean | ActionsArgs
    units?: boolean | UnitsArgs
  }

  export type Action_valuesGetPayload<S extends boolean | null | undefined | Action_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Action_values :
    S extends undefined ? never :
    S extends { include: any } & (Action_valuesArgs | Action_valuesFindManyArgs)
    ? Action_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'actions' ? ActionsGetPayload<S['include'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Action_valuesArgs | Action_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'actions' ? ActionsGetPayload<S['select'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['select'][P]> | null :  P extends keyof Action_values ? Action_values[P] : never
  } 
      : Action_values


  type Action_valuesCountArgs = 
    Omit<Action_valuesFindManyArgs, 'select' | 'include'> & {
      select?: Action_valuesCountAggregateInputType | true
    }

  export interface Action_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Action_values that matches the filter.
     * @param {Action_valuesFindUniqueArgs} args - Arguments to find a Action_values
     * @example
     * // Get one Action_values
     * const action_values = await prisma.action_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Action_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Action_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Action_values'> extends True ? Prisma__Action_valuesClient<Action_valuesGetPayload<T>> : Prisma__Action_valuesClient<Action_valuesGetPayload<T> | null, null>

    /**
     * Find one Action_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Action_valuesFindUniqueOrThrowArgs} args - Arguments to find a Action_values
     * @example
     * // Get one Action_values
     * const action_values = await prisma.action_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Action_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Action_valuesFindUniqueOrThrowArgs>
    ): Prisma__Action_valuesClient<Action_valuesGetPayload<T>>

    /**
     * Find the first Action_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_valuesFindFirstArgs} args - Arguments to find a Action_values
     * @example
     * // Get one Action_values
     * const action_values = await prisma.action_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Action_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Action_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Action_values'> extends True ? Prisma__Action_valuesClient<Action_valuesGetPayload<T>> : Prisma__Action_valuesClient<Action_valuesGetPayload<T> | null, null>

    /**
     * Find the first Action_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_valuesFindFirstOrThrowArgs} args - Arguments to find a Action_values
     * @example
     * // Get one Action_values
     * const action_values = await prisma.action_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Action_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Action_valuesFindFirstOrThrowArgs>
    ): Prisma__Action_valuesClient<Action_valuesGetPayload<T>>

    /**
     * Find zero or more Action_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Action_values
     * const action_values = await prisma.action_values.findMany()
     * 
     * // Get first 10 Action_values
     * const action_values = await prisma.action_values.findMany({ take: 10 })
     * 
     * // Only select the `action_value_id`
     * const action_valuesWithAction_value_idOnly = await prisma.action_values.findMany({ select: { action_value_id: true } })
     * 
    **/
    findMany<T extends Action_valuesFindManyArgs>(
      args?: SelectSubset<T, Action_valuesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Action_valuesGetPayload<T>>>

    /**
     * Create a Action_values.
     * @param {Action_valuesCreateArgs} args - Arguments to create a Action_values.
     * @example
     * // Create one Action_values
     * const Action_values = await prisma.action_values.create({
     *   data: {
     *     // ... data to create a Action_values
     *   }
     * })
     * 
    **/
    create<T extends Action_valuesCreateArgs>(
      args: SelectSubset<T, Action_valuesCreateArgs>
    ): Prisma__Action_valuesClient<Action_valuesGetPayload<T>>

    /**
     * Create many Action_values.
     *     @param {Action_valuesCreateManyArgs} args - Arguments to create many Action_values.
     *     @example
     *     // Create many Action_values
     *     const action_values = await prisma.action_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Action_valuesCreateManyArgs>(
      args?: SelectSubset<T, Action_valuesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Action_values.
     * @param {Action_valuesDeleteArgs} args - Arguments to delete one Action_values.
     * @example
     * // Delete one Action_values
     * const Action_values = await prisma.action_values.delete({
     *   where: {
     *     // ... filter to delete one Action_values
     *   }
     * })
     * 
    **/
    delete<T extends Action_valuesDeleteArgs>(
      args: SelectSubset<T, Action_valuesDeleteArgs>
    ): Prisma__Action_valuesClient<Action_valuesGetPayload<T>>

    /**
     * Update one Action_values.
     * @param {Action_valuesUpdateArgs} args - Arguments to update one Action_values.
     * @example
     * // Update one Action_values
     * const action_values = await prisma.action_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Action_valuesUpdateArgs>(
      args: SelectSubset<T, Action_valuesUpdateArgs>
    ): Prisma__Action_valuesClient<Action_valuesGetPayload<T>>

    /**
     * Delete zero or more Action_values.
     * @param {Action_valuesDeleteManyArgs} args - Arguments to filter Action_values to delete.
     * @example
     * // Delete a few Action_values
     * const { count } = await prisma.action_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Action_valuesDeleteManyArgs>(
      args?: SelectSubset<T, Action_valuesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Action_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Action_values
     * const action_values = await prisma.action_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Action_valuesUpdateManyArgs>(
      args: SelectSubset<T, Action_valuesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Action_values.
     * @param {Action_valuesUpsertArgs} args - Arguments to update or create a Action_values.
     * @example
     * // Update or create a Action_values
     * const action_values = await prisma.action_values.upsert({
     *   create: {
     *     // ... data to create a Action_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Action_values we want to update
     *   }
     * })
    **/
    upsert<T extends Action_valuesUpsertArgs>(
      args: SelectSubset<T, Action_valuesUpsertArgs>
    ): Prisma__Action_valuesClient<Action_valuesGetPayload<T>>

    /**
     * Count the number of Action_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_valuesCountArgs} args - Arguments to filter Action_values to count.
     * @example
     * // Count the number of Action_values
     * const count = await prisma.action_values.count({
     *   where: {
     *     // ... the filter for the Action_values we want to count
     *   }
     * })
    **/
    count<T extends Action_valuesCountArgs>(
      args?: Subset<T, Action_valuesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Action_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Action_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Action_valuesAggregateArgs>(args: Subset<T, Action_valuesAggregateArgs>): Prisma.PrismaPromise<GetAction_valuesAggregateType<T>>

    /**
     * Group by Action_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Action_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Action_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Action_valuesGroupByArgs['orderBy'] }
        : { orderBy?: Action_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Action_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAction_valuesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Action_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Action_valuesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    actions<T extends ActionsArgs= {}>(args?: Subset<T, ActionsArgs>): Prisma__ActionsClient<ActionsGetPayload<T> | Null>;

    units<T extends UnitsArgs= {}>(args?: Subset<T, UnitsArgs>): Prisma__UnitsClient<UnitsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Action_values base type for findUnique actions
   */
  export type Action_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * Filter, which Action_values to fetch.
     */
    where: Action_valuesWhereUniqueInput
  }

  /**
   * Action_values findUnique
   */
  export interface Action_valuesFindUniqueArgs extends Action_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Action_values findUniqueOrThrow
   */
  export type Action_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * Filter, which Action_values to fetch.
     */
    where: Action_valuesWhereUniqueInput
  }


  /**
   * Action_values base type for findFirst actions
   */
  export type Action_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * Filter, which Action_values to fetch.
     */
    where?: Action_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_values to fetch.
     */
    orderBy?: Enumerable<Action_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Action_values.
     */
    cursor?: Action_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Action_values.
     */
    distinct?: Enumerable<Action_valuesScalarFieldEnum>
  }

  /**
   * Action_values findFirst
   */
  export interface Action_valuesFindFirstArgs extends Action_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Action_values findFirstOrThrow
   */
  export type Action_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * Filter, which Action_values to fetch.
     */
    where?: Action_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_values to fetch.
     */
    orderBy?: Enumerable<Action_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Action_values.
     */
    cursor?: Action_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Action_values.
     */
    distinct?: Enumerable<Action_valuesScalarFieldEnum>
  }


  /**
   * Action_values findMany
   */
  export type Action_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * Filter, which Action_values to fetch.
     */
    where?: Action_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Action_values to fetch.
     */
    orderBy?: Enumerable<Action_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Action_values.
     */
    cursor?: Action_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Action_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Action_values.
     */
    skip?: number
    distinct?: Enumerable<Action_valuesScalarFieldEnum>
  }


  /**
   * Action_values create
   */
  export type Action_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * The data needed to create a Action_values.
     */
    data: XOR<Action_valuesCreateInput, Action_valuesUncheckedCreateInput>
  }


  /**
   * Action_values createMany
   */
  export type Action_valuesCreateManyArgs = {
    /**
     * The data used to create many Action_values.
     */
    data: Enumerable<Action_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Action_values update
   */
  export type Action_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * The data needed to update a Action_values.
     */
    data: XOR<Action_valuesUpdateInput, Action_valuesUncheckedUpdateInput>
    /**
     * Choose, which Action_values to update.
     */
    where: Action_valuesWhereUniqueInput
  }


  /**
   * Action_values updateMany
   */
  export type Action_valuesUpdateManyArgs = {
    /**
     * The data used to update Action_values.
     */
    data: XOR<Action_valuesUpdateManyMutationInput, Action_valuesUncheckedUpdateManyInput>
    /**
     * Filter which Action_values to update
     */
    where?: Action_valuesWhereInput
  }


  /**
   * Action_values upsert
   */
  export type Action_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * The filter to search for the Action_values to update in case it exists.
     */
    where: Action_valuesWhereUniqueInput
    /**
     * In case the Action_values found by the `where` argument doesn't exist, create a new Action_values with this data.
     */
    create: XOR<Action_valuesCreateInput, Action_valuesUncheckedCreateInput>
    /**
     * In case the Action_values was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Action_valuesUpdateInput, Action_valuesUncheckedUpdateInput>
  }


  /**
   * Action_values delete
   */
  export type Action_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    /**
     * Filter which Action_values to delete.
     */
    where: Action_valuesWhereUniqueInput
  }


  /**
   * Action_values deleteMany
   */
  export type Action_valuesDeleteManyArgs = {
    /**
     * Filter which Action_values to delete
     */
    where?: Action_valuesWhereInput
  }


  /**
   * Action_values without action
   */
  export type Action_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
  }



  /**
   * Model Actions
   */


  export type AggregateActions = {
    _count: ActionsCountAggregateOutputType | null
    _min: ActionsMinAggregateOutputType | null
    _max: ActionsMaxAggregateOutputType | null
  }

  export type ActionsMinAggregateOutputType = {
    action_id: string | null
    account_id: string | null
    place_id: string | null
    date: Date | null
    relevant_for_reports: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type ActionsMaxAggregateOutputType = {
    action_id: string | null
    account_id: string | null
    place_id: string | null
    date: Date | null
    relevant_for_reports: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type ActionsCountAggregateOutputType = {
    action_id: number
    account_id: number
    place_id: number
    date: number
    data: number
    relevant_for_reports: number
    label: number
    deleted: number
    _all: number
  }


  export type ActionsMinAggregateInputType = {
    action_id?: true
    account_id?: true
    place_id?: true
    date?: true
    relevant_for_reports?: true
    label?: true
    deleted?: true
  }

  export type ActionsMaxAggregateInputType = {
    action_id?: true
    account_id?: true
    place_id?: true
    date?: true
    relevant_for_reports?: true
    label?: true
    deleted?: true
  }

  export type ActionsCountAggregateInputType = {
    action_id?: true
    account_id?: true
    place_id?: true
    date?: true
    data?: true
    relevant_for_reports?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type ActionsAggregateArgs = {
    /**
     * Filter which Actions to aggregate.
     */
    where?: ActionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actions to fetch.
     */
    orderBy?: Enumerable<ActionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ActionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Actions
    **/
    _count?: true | ActionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActionsMaxAggregateInputType
  }

  export type GetActionsAggregateType<T extends ActionsAggregateArgs> = {
        [P in keyof T & keyof AggregateActions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActions[P]>
      : GetScalarType<T[P], AggregateActions[P]>
  }




  export type ActionsGroupByArgs = {
    where?: ActionsWhereInput
    orderBy?: Enumerable<ActionsOrderByWithAggregationInput>
    by: ActionsScalarFieldEnum[]
    having?: ActionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActionsCountAggregateInputType | true
    _min?: ActionsMinAggregateInputType
    _max?: ActionsMaxAggregateInputType
  }


  export type ActionsGroupByOutputType = {
    action_id: string
    account_id: string | null
    place_id: string | null
    date: Date | null
    data: JsonValue | null
    relevant_for_reports: boolean | null
    label: string | null
    deleted: boolean | null
    _count: ActionsCountAggregateOutputType | null
    _min: ActionsMinAggregateOutputType | null
    _max: ActionsMaxAggregateOutputType | null
  }

  type GetActionsGroupByPayload<T extends ActionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<ActionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActionsGroupByOutputType[P]>
            : GetScalarType<T[P], ActionsGroupByOutputType[P]>
        }
      >
    >


  export type ActionsSelect = {
    action_id?: boolean
    account_id?: boolean
    place_id?: boolean
    date?: boolean
    data?: boolean
    relevant_for_reports?: boolean
    label?: boolean
    deleted?: boolean
    action_reports?: boolean | Actions$action_reportsArgs
    action_values?: boolean | Actions$action_valuesArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    files?: boolean | Actions$filesArgs
    _count?: boolean | ActionsCountOutputTypeArgs
  }


  export type ActionsInclude = {
    action_reports?: boolean | Actions$action_reportsArgs
    action_values?: boolean | Actions$action_valuesArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    files?: boolean | Actions$filesArgs
    _count?: boolean | ActionsCountOutputTypeArgs
  }

  export type ActionsGetPayload<S extends boolean | null | undefined | ActionsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Actions :
    S extends undefined ? never :
    S extends { include: any } & (ActionsArgs | ActionsFindManyArgs)
    ? Actions  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'action_reports' ? Array < Action_reportsGetPayload<S['include'][P]>>  :
        P extends 'action_values' ? Array < Action_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['include'][P]> | null :
        P extends 'files' ? Array < FilesGetPayload<S['include'][P]>>  :
        P extends '_count' ? ActionsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ActionsArgs | ActionsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'action_reports' ? Array < Action_reportsGetPayload<S['select'][P]>>  :
        P extends 'action_values' ? Array < Action_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['select'][P]> | null :
        P extends 'files' ? Array < FilesGetPayload<S['select'][P]>>  :
        P extends '_count' ? ActionsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Actions ? Actions[P] : never
  } 
      : Actions


  type ActionsCountArgs = 
    Omit<ActionsFindManyArgs, 'select' | 'include'> & {
      select?: ActionsCountAggregateInputType | true
    }

  export interface ActionsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Actions that matches the filter.
     * @param {ActionsFindUniqueArgs} args - Arguments to find a Actions
     * @example
     * // Get one Actions
     * const actions = await prisma.actions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ActionsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ActionsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Actions'> extends True ? Prisma__ActionsClient<ActionsGetPayload<T>> : Prisma__ActionsClient<ActionsGetPayload<T> | null, null>

    /**
     * Find one Actions that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ActionsFindUniqueOrThrowArgs} args - Arguments to find a Actions
     * @example
     * // Get one Actions
     * const actions = await prisma.actions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ActionsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ActionsFindUniqueOrThrowArgs>
    ): Prisma__ActionsClient<ActionsGetPayload<T>>

    /**
     * Find the first Actions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActionsFindFirstArgs} args - Arguments to find a Actions
     * @example
     * // Get one Actions
     * const actions = await prisma.actions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ActionsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ActionsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Actions'> extends True ? Prisma__ActionsClient<ActionsGetPayload<T>> : Prisma__ActionsClient<ActionsGetPayload<T> | null, null>

    /**
     * Find the first Actions that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActionsFindFirstOrThrowArgs} args - Arguments to find a Actions
     * @example
     * // Get one Actions
     * const actions = await prisma.actions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ActionsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ActionsFindFirstOrThrowArgs>
    ): Prisma__ActionsClient<ActionsGetPayload<T>>

    /**
     * Find zero or more Actions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActionsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Actions
     * const actions = await prisma.actions.findMany()
     * 
     * // Get first 10 Actions
     * const actions = await prisma.actions.findMany({ take: 10 })
     * 
     * // Only select the `action_id`
     * const actionsWithAction_idOnly = await prisma.actions.findMany({ select: { action_id: true } })
     * 
    **/
    findMany<T extends ActionsFindManyArgs>(
      args?: SelectSubset<T, ActionsFindManyArgs>
    ): Prisma.PrismaPromise<Array<ActionsGetPayload<T>>>

    /**
     * Create a Actions.
     * @param {ActionsCreateArgs} args - Arguments to create a Actions.
     * @example
     * // Create one Actions
     * const Actions = await prisma.actions.create({
     *   data: {
     *     // ... data to create a Actions
     *   }
     * })
     * 
    **/
    create<T extends ActionsCreateArgs>(
      args: SelectSubset<T, ActionsCreateArgs>
    ): Prisma__ActionsClient<ActionsGetPayload<T>>

    /**
     * Create many Actions.
     *     @param {ActionsCreateManyArgs} args - Arguments to create many Actions.
     *     @example
     *     // Create many Actions
     *     const actions = await prisma.actions.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ActionsCreateManyArgs>(
      args?: SelectSubset<T, ActionsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Actions.
     * @param {ActionsDeleteArgs} args - Arguments to delete one Actions.
     * @example
     * // Delete one Actions
     * const Actions = await prisma.actions.delete({
     *   where: {
     *     // ... filter to delete one Actions
     *   }
     * })
     * 
    **/
    delete<T extends ActionsDeleteArgs>(
      args: SelectSubset<T, ActionsDeleteArgs>
    ): Prisma__ActionsClient<ActionsGetPayload<T>>

    /**
     * Update one Actions.
     * @param {ActionsUpdateArgs} args - Arguments to update one Actions.
     * @example
     * // Update one Actions
     * const actions = await prisma.actions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ActionsUpdateArgs>(
      args: SelectSubset<T, ActionsUpdateArgs>
    ): Prisma__ActionsClient<ActionsGetPayload<T>>

    /**
     * Delete zero or more Actions.
     * @param {ActionsDeleteManyArgs} args - Arguments to filter Actions to delete.
     * @example
     * // Delete a few Actions
     * const { count } = await prisma.actions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ActionsDeleteManyArgs>(
      args?: SelectSubset<T, ActionsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Actions
     * const actions = await prisma.actions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ActionsUpdateManyArgs>(
      args: SelectSubset<T, ActionsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Actions.
     * @param {ActionsUpsertArgs} args - Arguments to update or create a Actions.
     * @example
     * // Update or create a Actions
     * const actions = await prisma.actions.upsert({
     *   create: {
     *     // ... data to create a Actions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Actions we want to update
     *   }
     * })
    **/
    upsert<T extends ActionsUpsertArgs>(
      args: SelectSubset<T, ActionsUpsertArgs>
    ): Prisma__ActionsClient<ActionsGetPayload<T>>

    /**
     * Count the number of Actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActionsCountArgs} args - Arguments to filter Actions to count.
     * @example
     * // Count the number of Actions
     * const count = await prisma.actions.count({
     *   where: {
     *     // ... the filter for the Actions we want to count
     *   }
     * })
    **/
    count<T extends ActionsCountArgs>(
      args?: Subset<T, ActionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActionsAggregateArgs>(args: Subset<T, ActionsAggregateArgs>): Prisma.PrismaPromise<GetActionsAggregateType<T>>

    /**
     * Group by Actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ActionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ActionsGroupByArgs['orderBy'] }
        : { orderBy?: ActionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ActionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Actions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ActionsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    action_reports<T extends Actions$action_reportsArgs= {}>(args?: Subset<T, Actions$action_reportsArgs>): Prisma.PrismaPromise<Array<Action_reportsGetPayload<T>>| Null>;

    action_values<T extends Actions$action_valuesArgs= {}>(args?: Subset<T, Actions$action_valuesArgs>): Prisma.PrismaPromise<Array<Action_valuesGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    places<T extends PlacesArgs= {}>(args?: Subset<T, PlacesArgs>): Prisma__PlacesClient<PlacesGetPayload<T> | Null>;

    files<T extends Actions$filesArgs= {}>(args?: Subset<T, Actions$filesArgs>): Prisma.PrismaPromise<Array<FilesGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Actions base type for findUnique actions
   */
  export type ActionsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * Filter, which Actions to fetch.
     */
    where: ActionsWhereUniqueInput
  }

  /**
   * Actions findUnique
   */
  export interface ActionsFindUniqueArgs extends ActionsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Actions findUniqueOrThrow
   */
  export type ActionsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * Filter, which Actions to fetch.
     */
    where: ActionsWhereUniqueInput
  }


  /**
   * Actions base type for findFirst actions
   */
  export type ActionsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * Filter, which Actions to fetch.
     */
    where?: ActionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actions to fetch.
     */
    orderBy?: Enumerable<ActionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Actions.
     */
    cursor?: ActionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Actions.
     */
    distinct?: Enumerable<ActionsScalarFieldEnum>
  }

  /**
   * Actions findFirst
   */
  export interface ActionsFindFirstArgs extends ActionsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Actions findFirstOrThrow
   */
  export type ActionsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * Filter, which Actions to fetch.
     */
    where?: ActionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actions to fetch.
     */
    orderBy?: Enumerable<ActionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Actions.
     */
    cursor?: ActionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Actions.
     */
    distinct?: Enumerable<ActionsScalarFieldEnum>
  }


  /**
   * Actions findMany
   */
  export type ActionsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * Filter, which Actions to fetch.
     */
    where?: ActionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Actions to fetch.
     */
    orderBy?: Enumerable<ActionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Actions.
     */
    cursor?: ActionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Actions.
     */
    skip?: number
    distinct?: Enumerable<ActionsScalarFieldEnum>
  }


  /**
   * Actions create
   */
  export type ActionsCreateArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * The data needed to create a Actions.
     */
    data: XOR<ActionsCreateInput, ActionsUncheckedCreateInput>
  }


  /**
   * Actions createMany
   */
  export type ActionsCreateManyArgs = {
    /**
     * The data used to create many Actions.
     */
    data: Enumerable<ActionsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Actions update
   */
  export type ActionsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * The data needed to update a Actions.
     */
    data: XOR<ActionsUpdateInput, ActionsUncheckedUpdateInput>
    /**
     * Choose, which Actions to update.
     */
    where: ActionsWhereUniqueInput
  }


  /**
   * Actions updateMany
   */
  export type ActionsUpdateManyArgs = {
    /**
     * The data used to update Actions.
     */
    data: XOR<ActionsUpdateManyMutationInput, ActionsUncheckedUpdateManyInput>
    /**
     * Filter which Actions to update
     */
    where?: ActionsWhereInput
  }


  /**
   * Actions upsert
   */
  export type ActionsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * The filter to search for the Actions to update in case it exists.
     */
    where: ActionsWhereUniqueInput
    /**
     * In case the Actions found by the `where` argument doesn't exist, create a new Actions with this data.
     */
    create: XOR<ActionsCreateInput, ActionsUncheckedCreateInput>
    /**
     * In case the Actions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ActionsUpdateInput, ActionsUncheckedUpdateInput>
  }


  /**
   * Actions delete
   */
  export type ActionsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    /**
     * Filter which Actions to delete.
     */
    where: ActionsWhereUniqueInput
  }


  /**
   * Actions deleteMany
   */
  export type ActionsDeleteManyArgs = {
    /**
     * Filter which Actions to delete
     */
    where?: ActionsWhereInput
  }


  /**
   * Actions.action_reports
   */
  export type Actions$action_reportsArgs = {
    /**
     * Select specific fields to fetch from the Action_reports
     */
    select?: Action_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_reportsInclude | null
    where?: Action_reportsWhereInput
    orderBy?: Enumerable<Action_reportsOrderByWithRelationInput>
    cursor?: Action_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_reportsScalarFieldEnum>
  }


  /**
   * Actions.action_values
   */
  export type Actions$action_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    where?: Action_valuesWhereInput
    orderBy?: Enumerable<Action_valuesOrderByWithRelationInput>
    cursor?: Action_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_valuesScalarFieldEnum>
  }


  /**
   * Actions.files
   */
  export type Actions$filesArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    where?: FilesWhereInput
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    cursor?: FilesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Actions without action
   */
  export type ActionsArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
  }



  /**
   * Model Check_taxa
   */


  export type AggregateCheck_taxa = {
    _count: Check_taxaCountAggregateOutputType | null
    _avg: Check_taxaAvgAggregateOutputType | null
    _sum: Check_taxaSumAggregateOutputType | null
    _min: Check_taxaMinAggregateOutputType | null
    _max: Check_taxaMaxAggregateOutputType | null
  }

  export type Check_taxaAvgAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Check_taxaSumAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Check_taxaMinAggregateOutputType = {
    check_taxon_id: string | null
    account_id: string | null
    check_id: string | null
    taxon_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Check_taxaMaxAggregateOutputType = {
    check_taxon_id: string | null
    account_id: string | null
    check_id: string | null
    taxon_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Check_taxaCountAggregateOutputType = {
    check_taxon_id: number
    account_id: number
    check_id: number
    taxon_id: number
    unit_id: number
    value_integer: number
    value_numeric: number
    value_text: number
    label: number
    deleted: number
    _all: number
  }


  export type Check_taxaAvgAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Check_taxaSumAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Check_taxaMinAggregateInputType = {
    check_taxon_id?: true
    account_id?: true
    check_id?: true
    taxon_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Check_taxaMaxAggregateInputType = {
    check_taxon_id?: true
    account_id?: true
    check_id?: true
    taxon_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Check_taxaCountAggregateInputType = {
    check_taxon_id?: true
    account_id?: true
    check_id?: true
    taxon_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Check_taxaAggregateArgs = {
    /**
     * Filter which Check_taxa to aggregate.
     */
    where?: Check_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_taxas to fetch.
     */
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Check_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Check_taxas
    **/
    _count?: true | Check_taxaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Check_taxaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Check_taxaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Check_taxaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Check_taxaMaxAggregateInputType
  }

  export type GetCheck_taxaAggregateType<T extends Check_taxaAggregateArgs> = {
        [P in keyof T & keyof AggregateCheck_taxa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCheck_taxa[P]>
      : GetScalarType<T[P], AggregateCheck_taxa[P]>
  }




  export type Check_taxaGroupByArgs = {
    where?: Check_taxaWhereInput
    orderBy?: Enumerable<Check_taxaOrderByWithAggregationInput>
    by: Check_taxaScalarFieldEnum[]
    having?: Check_taxaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Check_taxaCountAggregateInputType | true
    _avg?: Check_taxaAvgAggregateInputType
    _sum?: Check_taxaSumAggregateInputType
    _min?: Check_taxaMinAggregateInputType
    _max?: Check_taxaMaxAggregateInputType
  }


  export type Check_taxaGroupByOutputType = {
    check_taxon_id: string
    account_id: string | null
    check_id: string | null
    taxon_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
    _count: Check_taxaCountAggregateOutputType | null
    _avg: Check_taxaAvgAggregateOutputType | null
    _sum: Check_taxaSumAggregateOutputType | null
    _min: Check_taxaMinAggregateOutputType | null
    _max: Check_taxaMaxAggregateOutputType | null
  }

  type GetCheck_taxaGroupByPayload<T extends Check_taxaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Check_taxaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Check_taxaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Check_taxaGroupByOutputType[P]>
            : GetScalarType<T[P], Check_taxaGroupByOutputType[P]>
        }
      >
    >


  export type Check_taxaSelect = {
    check_taxon_id?: boolean
    account_id?: boolean
    check_id?: boolean
    taxon_id?: boolean
    unit_id?: boolean
    value_integer?: boolean
    value_numeric?: boolean
    value_text?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    checks?: boolean | ChecksArgs
    taxa?: boolean | TaxaArgs
    units?: boolean | UnitsArgs
  }


  export type Check_taxaInclude = {
    accounts?: boolean | AccountsArgs
    checks?: boolean | ChecksArgs
    taxa?: boolean | TaxaArgs
    units?: boolean | UnitsArgs
  }

  export type Check_taxaGetPayload<S extends boolean | null | undefined | Check_taxaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Check_taxa :
    S extends undefined ? never :
    S extends { include: any } & (Check_taxaArgs | Check_taxaFindManyArgs)
    ? Check_taxa  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'checks' ? ChecksGetPayload<S['include'][P]> | null :
        P extends 'taxa' ? TaxaGetPayload<S['include'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Check_taxaArgs | Check_taxaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'checks' ? ChecksGetPayload<S['select'][P]> | null :
        P extends 'taxa' ? TaxaGetPayload<S['select'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['select'][P]> | null :  P extends keyof Check_taxa ? Check_taxa[P] : never
  } 
      : Check_taxa


  type Check_taxaCountArgs = 
    Omit<Check_taxaFindManyArgs, 'select' | 'include'> & {
      select?: Check_taxaCountAggregateInputType | true
    }

  export interface Check_taxaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Check_taxa that matches the filter.
     * @param {Check_taxaFindUniqueArgs} args - Arguments to find a Check_taxa
     * @example
     * // Get one Check_taxa
     * const check_taxa = await prisma.check_taxa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Check_taxaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Check_taxaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Check_taxa'> extends True ? Prisma__Check_taxaClient<Check_taxaGetPayload<T>> : Prisma__Check_taxaClient<Check_taxaGetPayload<T> | null, null>

    /**
     * Find one Check_taxa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Check_taxaFindUniqueOrThrowArgs} args - Arguments to find a Check_taxa
     * @example
     * // Get one Check_taxa
     * const check_taxa = await prisma.check_taxa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Check_taxaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Check_taxaFindUniqueOrThrowArgs>
    ): Prisma__Check_taxaClient<Check_taxaGetPayload<T>>

    /**
     * Find the first Check_taxa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_taxaFindFirstArgs} args - Arguments to find a Check_taxa
     * @example
     * // Get one Check_taxa
     * const check_taxa = await prisma.check_taxa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Check_taxaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Check_taxaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Check_taxa'> extends True ? Prisma__Check_taxaClient<Check_taxaGetPayload<T>> : Prisma__Check_taxaClient<Check_taxaGetPayload<T> | null, null>

    /**
     * Find the first Check_taxa that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_taxaFindFirstOrThrowArgs} args - Arguments to find a Check_taxa
     * @example
     * // Get one Check_taxa
     * const check_taxa = await prisma.check_taxa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Check_taxaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Check_taxaFindFirstOrThrowArgs>
    ): Prisma__Check_taxaClient<Check_taxaGetPayload<T>>

    /**
     * Find zero or more Check_taxas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_taxaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Check_taxas
     * const check_taxas = await prisma.check_taxa.findMany()
     * 
     * // Get first 10 Check_taxas
     * const check_taxas = await prisma.check_taxa.findMany({ take: 10 })
     * 
     * // Only select the `check_taxon_id`
     * const check_taxaWithCheck_taxon_idOnly = await prisma.check_taxa.findMany({ select: { check_taxon_id: true } })
     * 
    **/
    findMany<T extends Check_taxaFindManyArgs>(
      args?: SelectSubset<T, Check_taxaFindManyArgs>
    ): Prisma.PrismaPromise<Array<Check_taxaGetPayload<T>>>

    /**
     * Create a Check_taxa.
     * @param {Check_taxaCreateArgs} args - Arguments to create a Check_taxa.
     * @example
     * // Create one Check_taxa
     * const Check_taxa = await prisma.check_taxa.create({
     *   data: {
     *     // ... data to create a Check_taxa
     *   }
     * })
     * 
    **/
    create<T extends Check_taxaCreateArgs>(
      args: SelectSubset<T, Check_taxaCreateArgs>
    ): Prisma__Check_taxaClient<Check_taxaGetPayload<T>>

    /**
     * Create many Check_taxas.
     *     @param {Check_taxaCreateManyArgs} args - Arguments to create many Check_taxas.
     *     @example
     *     // Create many Check_taxas
     *     const check_taxa = await prisma.check_taxa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Check_taxaCreateManyArgs>(
      args?: SelectSubset<T, Check_taxaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Check_taxa.
     * @param {Check_taxaDeleteArgs} args - Arguments to delete one Check_taxa.
     * @example
     * // Delete one Check_taxa
     * const Check_taxa = await prisma.check_taxa.delete({
     *   where: {
     *     // ... filter to delete one Check_taxa
     *   }
     * })
     * 
    **/
    delete<T extends Check_taxaDeleteArgs>(
      args: SelectSubset<T, Check_taxaDeleteArgs>
    ): Prisma__Check_taxaClient<Check_taxaGetPayload<T>>

    /**
     * Update one Check_taxa.
     * @param {Check_taxaUpdateArgs} args - Arguments to update one Check_taxa.
     * @example
     * // Update one Check_taxa
     * const check_taxa = await prisma.check_taxa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Check_taxaUpdateArgs>(
      args: SelectSubset<T, Check_taxaUpdateArgs>
    ): Prisma__Check_taxaClient<Check_taxaGetPayload<T>>

    /**
     * Delete zero or more Check_taxas.
     * @param {Check_taxaDeleteManyArgs} args - Arguments to filter Check_taxas to delete.
     * @example
     * // Delete a few Check_taxas
     * const { count } = await prisma.check_taxa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Check_taxaDeleteManyArgs>(
      args?: SelectSubset<T, Check_taxaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Check_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_taxaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Check_taxas
     * const check_taxa = await prisma.check_taxa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Check_taxaUpdateManyArgs>(
      args: SelectSubset<T, Check_taxaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Check_taxa.
     * @param {Check_taxaUpsertArgs} args - Arguments to update or create a Check_taxa.
     * @example
     * // Update or create a Check_taxa
     * const check_taxa = await prisma.check_taxa.upsert({
     *   create: {
     *     // ... data to create a Check_taxa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Check_taxa we want to update
     *   }
     * })
    **/
    upsert<T extends Check_taxaUpsertArgs>(
      args: SelectSubset<T, Check_taxaUpsertArgs>
    ): Prisma__Check_taxaClient<Check_taxaGetPayload<T>>

    /**
     * Count the number of Check_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_taxaCountArgs} args - Arguments to filter Check_taxas to count.
     * @example
     * // Count the number of Check_taxas
     * const count = await prisma.check_taxa.count({
     *   where: {
     *     // ... the filter for the Check_taxas we want to count
     *   }
     * })
    **/
    count<T extends Check_taxaCountArgs>(
      args?: Subset<T, Check_taxaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Check_taxaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Check_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_taxaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Check_taxaAggregateArgs>(args: Subset<T, Check_taxaAggregateArgs>): Prisma.PrismaPromise<GetCheck_taxaAggregateType<T>>

    /**
     * Group by Check_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_taxaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Check_taxaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Check_taxaGroupByArgs['orderBy'] }
        : { orderBy?: Check_taxaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Check_taxaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCheck_taxaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Check_taxa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Check_taxaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    checks<T extends ChecksArgs= {}>(args?: Subset<T, ChecksArgs>): Prisma__ChecksClient<ChecksGetPayload<T> | Null>;

    taxa<T extends TaxaArgs= {}>(args?: Subset<T, TaxaArgs>): Prisma__TaxaClient<TaxaGetPayload<T> | Null>;

    units<T extends UnitsArgs= {}>(args?: Subset<T, UnitsArgs>): Prisma__UnitsClient<UnitsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Check_taxa base type for findUnique actions
   */
  export type Check_taxaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * Filter, which Check_taxa to fetch.
     */
    where: Check_taxaWhereUniqueInput
  }

  /**
   * Check_taxa findUnique
   */
  export interface Check_taxaFindUniqueArgs extends Check_taxaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Check_taxa findUniqueOrThrow
   */
  export type Check_taxaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * Filter, which Check_taxa to fetch.
     */
    where: Check_taxaWhereUniqueInput
  }


  /**
   * Check_taxa base type for findFirst actions
   */
  export type Check_taxaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * Filter, which Check_taxa to fetch.
     */
    where?: Check_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_taxas to fetch.
     */
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Check_taxas.
     */
    cursor?: Check_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Check_taxas.
     */
    distinct?: Enumerable<Check_taxaScalarFieldEnum>
  }

  /**
   * Check_taxa findFirst
   */
  export interface Check_taxaFindFirstArgs extends Check_taxaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Check_taxa findFirstOrThrow
   */
  export type Check_taxaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * Filter, which Check_taxa to fetch.
     */
    where?: Check_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_taxas to fetch.
     */
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Check_taxas.
     */
    cursor?: Check_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Check_taxas.
     */
    distinct?: Enumerable<Check_taxaScalarFieldEnum>
  }


  /**
   * Check_taxa findMany
   */
  export type Check_taxaFindManyArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * Filter, which Check_taxas to fetch.
     */
    where?: Check_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_taxas to fetch.
     */
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Check_taxas.
     */
    cursor?: Check_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_taxas.
     */
    skip?: number
    distinct?: Enumerable<Check_taxaScalarFieldEnum>
  }


  /**
   * Check_taxa create
   */
  export type Check_taxaCreateArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * The data needed to create a Check_taxa.
     */
    data: XOR<Check_taxaCreateInput, Check_taxaUncheckedCreateInput>
  }


  /**
   * Check_taxa createMany
   */
  export type Check_taxaCreateManyArgs = {
    /**
     * The data used to create many Check_taxas.
     */
    data: Enumerable<Check_taxaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Check_taxa update
   */
  export type Check_taxaUpdateArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * The data needed to update a Check_taxa.
     */
    data: XOR<Check_taxaUpdateInput, Check_taxaUncheckedUpdateInput>
    /**
     * Choose, which Check_taxa to update.
     */
    where: Check_taxaWhereUniqueInput
  }


  /**
   * Check_taxa updateMany
   */
  export type Check_taxaUpdateManyArgs = {
    /**
     * The data used to update Check_taxas.
     */
    data: XOR<Check_taxaUpdateManyMutationInput, Check_taxaUncheckedUpdateManyInput>
    /**
     * Filter which Check_taxas to update
     */
    where?: Check_taxaWhereInput
  }


  /**
   * Check_taxa upsert
   */
  export type Check_taxaUpsertArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * The filter to search for the Check_taxa to update in case it exists.
     */
    where: Check_taxaWhereUniqueInput
    /**
     * In case the Check_taxa found by the `where` argument doesn't exist, create a new Check_taxa with this data.
     */
    create: XOR<Check_taxaCreateInput, Check_taxaUncheckedCreateInput>
    /**
     * In case the Check_taxa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Check_taxaUpdateInput, Check_taxaUncheckedUpdateInput>
  }


  /**
   * Check_taxa delete
   */
  export type Check_taxaDeleteArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    /**
     * Filter which Check_taxa to delete.
     */
    where: Check_taxaWhereUniqueInput
  }


  /**
   * Check_taxa deleteMany
   */
  export type Check_taxaDeleteManyArgs = {
    /**
     * Filter which Check_taxas to delete
     */
    where?: Check_taxaWhereInput
  }


  /**
   * Check_taxa without action
   */
  export type Check_taxaArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
  }



  /**
   * Model Check_values
   */


  export type AggregateCheck_values = {
    _count: Check_valuesCountAggregateOutputType | null
    _avg: Check_valuesAvgAggregateOutputType | null
    _sum: Check_valuesSumAggregateOutputType | null
    _min: Check_valuesMinAggregateOutputType | null
    _max: Check_valuesMaxAggregateOutputType | null
  }

  export type Check_valuesAvgAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Check_valuesSumAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Check_valuesMinAggregateOutputType = {
    check_value_id: string | null
    account_id: string | null
    check_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Check_valuesMaxAggregateOutputType = {
    check_value_id: string | null
    account_id: string | null
    check_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Check_valuesCountAggregateOutputType = {
    check_value_id: number
    account_id: number
    check_id: number
    unit_id: number
    value_integer: number
    value_numeric: number
    value_text: number
    label: number
    deleted: number
    _all: number
  }


  export type Check_valuesAvgAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Check_valuesSumAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Check_valuesMinAggregateInputType = {
    check_value_id?: true
    account_id?: true
    check_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Check_valuesMaxAggregateInputType = {
    check_value_id?: true
    account_id?: true
    check_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Check_valuesCountAggregateInputType = {
    check_value_id?: true
    account_id?: true
    check_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Check_valuesAggregateArgs = {
    /**
     * Filter which Check_values to aggregate.
     */
    where?: Check_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_values to fetch.
     */
    orderBy?: Enumerable<Check_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Check_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Check_values
    **/
    _count?: true | Check_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Check_valuesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Check_valuesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Check_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Check_valuesMaxAggregateInputType
  }

  export type GetCheck_valuesAggregateType<T extends Check_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateCheck_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCheck_values[P]>
      : GetScalarType<T[P], AggregateCheck_values[P]>
  }




  export type Check_valuesGroupByArgs = {
    where?: Check_valuesWhereInput
    orderBy?: Enumerable<Check_valuesOrderByWithAggregationInput>
    by: Check_valuesScalarFieldEnum[]
    having?: Check_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Check_valuesCountAggregateInputType | true
    _avg?: Check_valuesAvgAggregateInputType
    _sum?: Check_valuesSumAggregateInputType
    _min?: Check_valuesMinAggregateInputType
    _max?: Check_valuesMaxAggregateInputType
  }


  export type Check_valuesGroupByOutputType = {
    check_value_id: string
    account_id: string | null
    check_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
    _count: Check_valuesCountAggregateOutputType | null
    _avg: Check_valuesAvgAggregateOutputType | null
    _sum: Check_valuesSumAggregateOutputType | null
    _min: Check_valuesMinAggregateOutputType | null
    _max: Check_valuesMaxAggregateOutputType | null
  }

  type GetCheck_valuesGroupByPayload<T extends Check_valuesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Check_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Check_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Check_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], Check_valuesGroupByOutputType[P]>
        }
      >
    >


  export type Check_valuesSelect = {
    check_value_id?: boolean
    account_id?: boolean
    check_id?: boolean
    unit_id?: boolean
    value_integer?: boolean
    value_numeric?: boolean
    value_text?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    checks?: boolean | ChecksArgs
    units?: boolean | UnitsArgs
  }


  export type Check_valuesInclude = {
    accounts?: boolean | AccountsArgs
    checks?: boolean | ChecksArgs
    units?: boolean | UnitsArgs
  }

  export type Check_valuesGetPayload<S extends boolean | null | undefined | Check_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Check_values :
    S extends undefined ? never :
    S extends { include: any } & (Check_valuesArgs | Check_valuesFindManyArgs)
    ? Check_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'checks' ? ChecksGetPayload<S['include'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Check_valuesArgs | Check_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'checks' ? ChecksGetPayload<S['select'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['select'][P]> | null :  P extends keyof Check_values ? Check_values[P] : never
  } 
      : Check_values


  type Check_valuesCountArgs = 
    Omit<Check_valuesFindManyArgs, 'select' | 'include'> & {
      select?: Check_valuesCountAggregateInputType | true
    }

  export interface Check_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Check_values that matches the filter.
     * @param {Check_valuesFindUniqueArgs} args - Arguments to find a Check_values
     * @example
     * // Get one Check_values
     * const check_values = await prisma.check_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Check_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Check_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Check_values'> extends True ? Prisma__Check_valuesClient<Check_valuesGetPayload<T>> : Prisma__Check_valuesClient<Check_valuesGetPayload<T> | null, null>

    /**
     * Find one Check_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Check_valuesFindUniqueOrThrowArgs} args - Arguments to find a Check_values
     * @example
     * // Get one Check_values
     * const check_values = await prisma.check_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Check_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Check_valuesFindUniqueOrThrowArgs>
    ): Prisma__Check_valuesClient<Check_valuesGetPayload<T>>

    /**
     * Find the first Check_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_valuesFindFirstArgs} args - Arguments to find a Check_values
     * @example
     * // Get one Check_values
     * const check_values = await prisma.check_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Check_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Check_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Check_values'> extends True ? Prisma__Check_valuesClient<Check_valuesGetPayload<T>> : Prisma__Check_valuesClient<Check_valuesGetPayload<T> | null, null>

    /**
     * Find the first Check_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_valuesFindFirstOrThrowArgs} args - Arguments to find a Check_values
     * @example
     * // Get one Check_values
     * const check_values = await prisma.check_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Check_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Check_valuesFindFirstOrThrowArgs>
    ): Prisma__Check_valuesClient<Check_valuesGetPayload<T>>

    /**
     * Find zero or more Check_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Check_values
     * const check_values = await prisma.check_values.findMany()
     * 
     * // Get first 10 Check_values
     * const check_values = await prisma.check_values.findMany({ take: 10 })
     * 
     * // Only select the `check_value_id`
     * const check_valuesWithCheck_value_idOnly = await prisma.check_values.findMany({ select: { check_value_id: true } })
     * 
    **/
    findMany<T extends Check_valuesFindManyArgs>(
      args?: SelectSubset<T, Check_valuesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Check_valuesGetPayload<T>>>

    /**
     * Create a Check_values.
     * @param {Check_valuesCreateArgs} args - Arguments to create a Check_values.
     * @example
     * // Create one Check_values
     * const Check_values = await prisma.check_values.create({
     *   data: {
     *     // ... data to create a Check_values
     *   }
     * })
     * 
    **/
    create<T extends Check_valuesCreateArgs>(
      args: SelectSubset<T, Check_valuesCreateArgs>
    ): Prisma__Check_valuesClient<Check_valuesGetPayload<T>>

    /**
     * Create many Check_values.
     *     @param {Check_valuesCreateManyArgs} args - Arguments to create many Check_values.
     *     @example
     *     // Create many Check_values
     *     const check_values = await prisma.check_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Check_valuesCreateManyArgs>(
      args?: SelectSubset<T, Check_valuesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Check_values.
     * @param {Check_valuesDeleteArgs} args - Arguments to delete one Check_values.
     * @example
     * // Delete one Check_values
     * const Check_values = await prisma.check_values.delete({
     *   where: {
     *     // ... filter to delete one Check_values
     *   }
     * })
     * 
    **/
    delete<T extends Check_valuesDeleteArgs>(
      args: SelectSubset<T, Check_valuesDeleteArgs>
    ): Prisma__Check_valuesClient<Check_valuesGetPayload<T>>

    /**
     * Update one Check_values.
     * @param {Check_valuesUpdateArgs} args - Arguments to update one Check_values.
     * @example
     * // Update one Check_values
     * const check_values = await prisma.check_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Check_valuesUpdateArgs>(
      args: SelectSubset<T, Check_valuesUpdateArgs>
    ): Prisma__Check_valuesClient<Check_valuesGetPayload<T>>

    /**
     * Delete zero or more Check_values.
     * @param {Check_valuesDeleteManyArgs} args - Arguments to filter Check_values to delete.
     * @example
     * // Delete a few Check_values
     * const { count } = await prisma.check_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Check_valuesDeleteManyArgs>(
      args?: SelectSubset<T, Check_valuesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Check_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Check_values
     * const check_values = await prisma.check_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Check_valuesUpdateManyArgs>(
      args: SelectSubset<T, Check_valuesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Check_values.
     * @param {Check_valuesUpsertArgs} args - Arguments to update or create a Check_values.
     * @example
     * // Update or create a Check_values
     * const check_values = await prisma.check_values.upsert({
     *   create: {
     *     // ... data to create a Check_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Check_values we want to update
     *   }
     * })
    **/
    upsert<T extends Check_valuesUpsertArgs>(
      args: SelectSubset<T, Check_valuesUpsertArgs>
    ): Prisma__Check_valuesClient<Check_valuesGetPayload<T>>

    /**
     * Count the number of Check_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_valuesCountArgs} args - Arguments to filter Check_values to count.
     * @example
     * // Count the number of Check_values
     * const count = await prisma.check_values.count({
     *   where: {
     *     // ... the filter for the Check_values we want to count
     *   }
     * })
    **/
    count<T extends Check_valuesCountArgs>(
      args?: Subset<T, Check_valuesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Check_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Check_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Check_valuesAggregateArgs>(args: Subset<T, Check_valuesAggregateArgs>): Prisma.PrismaPromise<GetCheck_valuesAggregateType<T>>

    /**
     * Group by Check_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Check_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Check_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Check_valuesGroupByArgs['orderBy'] }
        : { orderBy?: Check_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Check_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCheck_valuesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Check_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Check_valuesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    checks<T extends ChecksArgs= {}>(args?: Subset<T, ChecksArgs>): Prisma__ChecksClient<ChecksGetPayload<T> | Null>;

    units<T extends UnitsArgs= {}>(args?: Subset<T, UnitsArgs>): Prisma__UnitsClient<UnitsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Check_values base type for findUnique actions
   */
  export type Check_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * Filter, which Check_values to fetch.
     */
    where: Check_valuesWhereUniqueInput
  }

  /**
   * Check_values findUnique
   */
  export interface Check_valuesFindUniqueArgs extends Check_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Check_values findUniqueOrThrow
   */
  export type Check_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * Filter, which Check_values to fetch.
     */
    where: Check_valuesWhereUniqueInput
  }


  /**
   * Check_values base type for findFirst actions
   */
  export type Check_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * Filter, which Check_values to fetch.
     */
    where?: Check_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_values to fetch.
     */
    orderBy?: Enumerable<Check_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Check_values.
     */
    cursor?: Check_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Check_values.
     */
    distinct?: Enumerable<Check_valuesScalarFieldEnum>
  }

  /**
   * Check_values findFirst
   */
  export interface Check_valuesFindFirstArgs extends Check_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Check_values findFirstOrThrow
   */
  export type Check_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * Filter, which Check_values to fetch.
     */
    where?: Check_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_values to fetch.
     */
    orderBy?: Enumerable<Check_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Check_values.
     */
    cursor?: Check_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Check_values.
     */
    distinct?: Enumerable<Check_valuesScalarFieldEnum>
  }


  /**
   * Check_values findMany
   */
  export type Check_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * Filter, which Check_values to fetch.
     */
    where?: Check_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Check_values to fetch.
     */
    orderBy?: Enumerable<Check_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Check_values.
     */
    cursor?: Check_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Check_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Check_values.
     */
    skip?: number
    distinct?: Enumerable<Check_valuesScalarFieldEnum>
  }


  /**
   * Check_values create
   */
  export type Check_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * The data needed to create a Check_values.
     */
    data: XOR<Check_valuesCreateInput, Check_valuesUncheckedCreateInput>
  }


  /**
   * Check_values createMany
   */
  export type Check_valuesCreateManyArgs = {
    /**
     * The data used to create many Check_values.
     */
    data: Enumerable<Check_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Check_values update
   */
  export type Check_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * The data needed to update a Check_values.
     */
    data: XOR<Check_valuesUpdateInput, Check_valuesUncheckedUpdateInput>
    /**
     * Choose, which Check_values to update.
     */
    where: Check_valuesWhereUniqueInput
  }


  /**
   * Check_values updateMany
   */
  export type Check_valuesUpdateManyArgs = {
    /**
     * The data used to update Check_values.
     */
    data: XOR<Check_valuesUpdateManyMutationInput, Check_valuesUncheckedUpdateManyInput>
    /**
     * Filter which Check_values to update
     */
    where?: Check_valuesWhereInput
  }


  /**
   * Check_values upsert
   */
  export type Check_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * The filter to search for the Check_values to update in case it exists.
     */
    where: Check_valuesWhereUniqueInput
    /**
     * In case the Check_values found by the `where` argument doesn't exist, create a new Check_values with this data.
     */
    create: XOR<Check_valuesCreateInput, Check_valuesUncheckedCreateInput>
    /**
     * In case the Check_values was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Check_valuesUpdateInput, Check_valuesUncheckedUpdateInput>
  }


  /**
   * Check_values delete
   */
  export type Check_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    /**
     * Filter which Check_values to delete.
     */
    where: Check_valuesWhereUniqueInput
  }


  /**
   * Check_values deleteMany
   */
  export type Check_valuesDeleteManyArgs = {
    /**
     * Filter which Check_values to delete
     */
    where?: Check_valuesWhereInput
  }


  /**
   * Check_values without action
   */
  export type Check_valuesArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
  }



  /**
   * Model Checks
   */


  export type AggregateChecks = {
    _count: ChecksCountAggregateOutputType | null
    _min: ChecksMinAggregateOutputType | null
    _max: ChecksMaxAggregateOutputType | null
  }

  export type ChecksMinAggregateOutputType = {
    check_id: string | null
    account_id: string | null
    place_id: string | null
    date: Date | null
    relevant_for_reports: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type ChecksMaxAggregateOutputType = {
    check_id: string | null
    account_id: string | null
    place_id: string | null
    date: Date | null
    relevant_for_reports: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type ChecksCountAggregateOutputType = {
    check_id: number
    account_id: number
    place_id: number
    date: number
    data: number
    relevant_for_reports: number
    label: number
    deleted: number
    _all: number
  }


  export type ChecksMinAggregateInputType = {
    check_id?: true
    account_id?: true
    place_id?: true
    date?: true
    relevant_for_reports?: true
    label?: true
    deleted?: true
  }

  export type ChecksMaxAggregateInputType = {
    check_id?: true
    account_id?: true
    place_id?: true
    date?: true
    relevant_for_reports?: true
    label?: true
    deleted?: true
  }

  export type ChecksCountAggregateInputType = {
    check_id?: true
    account_id?: true
    place_id?: true
    date?: true
    data?: true
    relevant_for_reports?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type ChecksAggregateArgs = {
    /**
     * Filter which Checks to aggregate.
     */
    where?: ChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checks to fetch.
     */
    orderBy?: Enumerable<ChecksOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Checks
    **/
    _count?: true | ChecksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChecksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChecksMaxAggregateInputType
  }

  export type GetChecksAggregateType<T extends ChecksAggregateArgs> = {
        [P in keyof T & keyof AggregateChecks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChecks[P]>
      : GetScalarType<T[P], AggregateChecks[P]>
  }




  export type ChecksGroupByArgs = {
    where?: ChecksWhereInput
    orderBy?: Enumerable<ChecksOrderByWithAggregationInput>
    by: ChecksScalarFieldEnum[]
    having?: ChecksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChecksCountAggregateInputType | true
    _min?: ChecksMinAggregateInputType
    _max?: ChecksMaxAggregateInputType
  }


  export type ChecksGroupByOutputType = {
    check_id: string
    account_id: string | null
    place_id: string | null
    date: Date | null
    data: JsonValue | null
    relevant_for_reports: boolean | null
    label: string | null
    deleted: boolean | null
    _count: ChecksCountAggregateOutputType | null
    _min: ChecksMinAggregateOutputType | null
    _max: ChecksMaxAggregateOutputType | null
  }

  type GetChecksGroupByPayload<T extends ChecksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<ChecksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChecksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChecksGroupByOutputType[P]>
            : GetScalarType<T[P], ChecksGroupByOutputType[P]>
        }
      >
    >


  export type ChecksSelect = {
    check_id?: boolean
    account_id?: boolean
    place_id?: boolean
    date?: boolean
    data?: boolean
    relevant_for_reports?: boolean
    label?: boolean
    deleted?: boolean
    check_taxa?: boolean | Checks$check_taxaArgs
    check_values?: boolean | Checks$check_valuesArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    files?: boolean | Checks$filesArgs
    _count?: boolean | ChecksCountOutputTypeArgs
  }


  export type ChecksInclude = {
    check_taxa?: boolean | Checks$check_taxaArgs
    check_values?: boolean | Checks$check_valuesArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    files?: boolean | Checks$filesArgs
    _count?: boolean | ChecksCountOutputTypeArgs
  }

  export type ChecksGetPayload<S extends boolean | null | undefined | ChecksArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Checks :
    S extends undefined ? never :
    S extends { include: any } & (ChecksArgs | ChecksFindManyArgs)
    ? Checks  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['include'][P]>>  :
        P extends 'check_values' ? Array < Check_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['include'][P]> | null :
        P extends 'files' ? Array < FilesGetPayload<S['include'][P]>>  :
        P extends '_count' ? ChecksCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ChecksArgs | ChecksFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['select'][P]>>  :
        P extends 'check_values' ? Array < Check_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['select'][P]> | null :
        P extends 'files' ? Array < FilesGetPayload<S['select'][P]>>  :
        P extends '_count' ? ChecksCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Checks ? Checks[P] : never
  } 
      : Checks


  type ChecksCountArgs = 
    Omit<ChecksFindManyArgs, 'select' | 'include'> & {
      select?: ChecksCountAggregateInputType | true
    }

  export interface ChecksDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Checks that matches the filter.
     * @param {ChecksFindUniqueArgs} args - Arguments to find a Checks
     * @example
     * // Get one Checks
     * const checks = await prisma.checks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ChecksFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ChecksFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Checks'> extends True ? Prisma__ChecksClient<ChecksGetPayload<T>> : Prisma__ChecksClient<ChecksGetPayload<T> | null, null>

    /**
     * Find one Checks that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ChecksFindUniqueOrThrowArgs} args - Arguments to find a Checks
     * @example
     * // Get one Checks
     * const checks = await prisma.checks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ChecksFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ChecksFindUniqueOrThrowArgs>
    ): Prisma__ChecksClient<ChecksGetPayload<T>>

    /**
     * Find the first Checks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecksFindFirstArgs} args - Arguments to find a Checks
     * @example
     * // Get one Checks
     * const checks = await prisma.checks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ChecksFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ChecksFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Checks'> extends True ? Prisma__ChecksClient<ChecksGetPayload<T>> : Prisma__ChecksClient<ChecksGetPayload<T> | null, null>

    /**
     * Find the first Checks that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecksFindFirstOrThrowArgs} args - Arguments to find a Checks
     * @example
     * // Get one Checks
     * const checks = await prisma.checks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ChecksFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ChecksFindFirstOrThrowArgs>
    ): Prisma__ChecksClient<ChecksGetPayload<T>>

    /**
     * Find zero or more Checks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecksFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Checks
     * const checks = await prisma.checks.findMany()
     * 
     * // Get first 10 Checks
     * const checks = await prisma.checks.findMany({ take: 10 })
     * 
     * // Only select the `check_id`
     * const checksWithCheck_idOnly = await prisma.checks.findMany({ select: { check_id: true } })
     * 
    **/
    findMany<T extends ChecksFindManyArgs>(
      args?: SelectSubset<T, ChecksFindManyArgs>
    ): Prisma.PrismaPromise<Array<ChecksGetPayload<T>>>

    /**
     * Create a Checks.
     * @param {ChecksCreateArgs} args - Arguments to create a Checks.
     * @example
     * // Create one Checks
     * const Checks = await prisma.checks.create({
     *   data: {
     *     // ... data to create a Checks
     *   }
     * })
     * 
    **/
    create<T extends ChecksCreateArgs>(
      args: SelectSubset<T, ChecksCreateArgs>
    ): Prisma__ChecksClient<ChecksGetPayload<T>>

    /**
     * Create many Checks.
     *     @param {ChecksCreateManyArgs} args - Arguments to create many Checks.
     *     @example
     *     // Create many Checks
     *     const checks = await prisma.checks.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ChecksCreateManyArgs>(
      args?: SelectSubset<T, ChecksCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Checks.
     * @param {ChecksDeleteArgs} args - Arguments to delete one Checks.
     * @example
     * // Delete one Checks
     * const Checks = await prisma.checks.delete({
     *   where: {
     *     // ... filter to delete one Checks
     *   }
     * })
     * 
    **/
    delete<T extends ChecksDeleteArgs>(
      args: SelectSubset<T, ChecksDeleteArgs>
    ): Prisma__ChecksClient<ChecksGetPayload<T>>

    /**
     * Update one Checks.
     * @param {ChecksUpdateArgs} args - Arguments to update one Checks.
     * @example
     * // Update one Checks
     * const checks = await prisma.checks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ChecksUpdateArgs>(
      args: SelectSubset<T, ChecksUpdateArgs>
    ): Prisma__ChecksClient<ChecksGetPayload<T>>

    /**
     * Delete zero or more Checks.
     * @param {ChecksDeleteManyArgs} args - Arguments to filter Checks to delete.
     * @example
     * // Delete a few Checks
     * const { count } = await prisma.checks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ChecksDeleteManyArgs>(
      args?: SelectSubset<T, ChecksDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Checks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Checks
     * const checks = await prisma.checks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ChecksUpdateManyArgs>(
      args: SelectSubset<T, ChecksUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Checks.
     * @param {ChecksUpsertArgs} args - Arguments to update or create a Checks.
     * @example
     * // Update or create a Checks
     * const checks = await prisma.checks.upsert({
     *   create: {
     *     // ... data to create a Checks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Checks we want to update
     *   }
     * })
    **/
    upsert<T extends ChecksUpsertArgs>(
      args: SelectSubset<T, ChecksUpsertArgs>
    ): Prisma__ChecksClient<ChecksGetPayload<T>>

    /**
     * Count the number of Checks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecksCountArgs} args - Arguments to filter Checks to count.
     * @example
     * // Count the number of Checks
     * const count = await prisma.checks.count({
     *   where: {
     *     // ... the filter for the Checks we want to count
     *   }
     * })
    **/
    count<T extends ChecksCountArgs>(
      args?: Subset<T, ChecksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChecksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Checks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChecksAggregateArgs>(args: Subset<T, ChecksAggregateArgs>): Prisma.PrismaPromise<GetChecksAggregateType<T>>

    /**
     * Group by Checks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChecksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChecksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChecksGroupByArgs['orderBy'] }
        : { orderBy?: ChecksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChecksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChecksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Checks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ChecksClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    check_taxa<T extends Checks$check_taxaArgs= {}>(args?: Subset<T, Checks$check_taxaArgs>): Prisma.PrismaPromise<Array<Check_taxaGetPayload<T>>| Null>;

    check_values<T extends Checks$check_valuesArgs= {}>(args?: Subset<T, Checks$check_valuesArgs>): Prisma.PrismaPromise<Array<Check_valuesGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    places<T extends PlacesArgs= {}>(args?: Subset<T, PlacesArgs>): Prisma__PlacesClient<PlacesGetPayload<T> | Null>;

    files<T extends Checks$filesArgs= {}>(args?: Subset<T, Checks$filesArgs>): Prisma.PrismaPromise<Array<FilesGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Checks base type for findUnique actions
   */
  export type ChecksFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * Filter, which Checks to fetch.
     */
    where: ChecksWhereUniqueInput
  }

  /**
   * Checks findUnique
   */
  export interface ChecksFindUniqueArgs extends ChecksFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Checks findUniqueOrThrow
   */
  export type ChecksFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * Filter, which Checks to fetch.
     */
    where: ChecksWhereUniqueInput
  }


  /**
   * Checks base type for findFirst actions
   */
  export type ChecksFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * Filter, which Checks to fetch.
     */
    where?: ChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checks to fetch.
     */
    orderBy?: Enumerable<ChecksOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Checks.
     */
    cursor?: ChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Checks.
     */
    distinct?: Enumerable<ChecksScalarFieldEnum>
  }

  /**
   * Checks findFirst
   */
  export interface ChecksFindFirstArgs extends ChecksFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Checks findFirstOrThrow
   */
  export type ChecksFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * Filter, which Checks to fetch.
     */
    where?: ChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checks to fetch.
     */
    orderBy?: Enumerable<ChecksOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Checks.
     */
    cursor?: ChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Checks.
     */
    distinct?: Enumerable<ChecksScalarFieldEnum>
  }


  /**
   * Checks findMany
   */
  export type ChecksFindManyArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * Filter, which Checks to fetch.
     */
    where?: ChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Checks to fetch.
     */
    orderBy?: Enumerable<ChecksOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Checks.
     */
    cursor?: ChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Checks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Checks.
     */
    skip?: number
    distinct?: Enumerable<ChecksScalarFieldEnum>
  }


  /**
   * Checks create
   */
  export type ChecksCreateArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * The data needed to create a Checks.
     */
    data: XOR<ChecksCreateInput, ChecksUncheckedCreateInput>
  }


  /**
   * Checks createMany
   */
  export type ChecksCreateManyArgs = {
    /**
     * The data used to create many Checks.
     */
    data: Enumerable<ChecksCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Checks update
   */
  export type ChecksUpdateArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * The data needed to update a Checks.
     */
    data: XOR<ChecksUpdateInput, ChecksUncheckedUpdateInput>
    /**
     * Choose, which Checks to update.
     */
    where: ChecksWhereUniqueInput
  }


  /**
   * Checks updateMany
   */
  export type ChecksUpdateManyArgs = {
    /**
     * The data used to update Checks.
     */
    data: XOR<ChecksUpdateManyMutationInput, ChecksUncheckedUpdateManyInput>
    /**
     * Filter which Checks to update
     */
    where?: ChecksWhereInput
  }


  /**
   * Checks upsert
   */
  export type ChecksUpsertArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * The filter to search for the Checks to update in case it exists.
     */
    where: ChecksWhereUniqueInput
    /**
     * In case the Checks found by the `where` argument doesn't exist, create a new Checks with this data.
     */
    create: XOR<ChecksCreateInput, ChecksUncheckedCreateInput>
    /**
     * In case the Checks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChecksUpdateInput, ChecksUncheckedUpdateInput>
  }


  /**
   * Checks delete
   */
  export type ChecksDeleteArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    /**
     * Filter which Checks to delete.
     */
    where: ChecksWhereUniqueInput
  }


  /**
   * Checks deleteMany
   */
  export type ChecksDeleteManyArgs = {
    /**
     * Filter which Checks to delete
     */
    where?: ChecksWhereInput
  }


  /**
   * Checks.check_taxa
   */
  export type Checks$check_taxaArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    where?: Check_taxaWhereInput
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    cursor?: Check_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Check_taxaScalarFieldEnum>
  }


  /**
   * Checks.check_values
   */
  export type Checks$check_valuesArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    where?: Check_valuesWhereInput
    orderBy?: Enumerable<Check_valuesOrderByWithRelationInput>
    cursor?: Check_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Check_valuesScalarFieldEnum>
  }


  /**
   * Checks.files
   */
  export type Checks$filesArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    where?: FilesWhereInput
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    cursor?: FilesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Checks without action
   */
  export type ChecksArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
  }



  /**
   * Model Field_types
   */


  export type AggregateField_types = {
    _count: Field_typesCountAggregateOutputType | null
    _avg: Field_typesAvgAggregateOutputType | null
    _sum: Field_typesSumAggregateOutputType | null
    _min: Field_typesMinAggregateOutputType | null
    _max: Field_typesMaxAggregateOutputType | null
  }

  export type Field_typesAvgAggregateOutputType = {
    sort: number | null
  }

  export type Field_typesSumAggregateOutputType = {
    sort: number | null
  }

  export type Field_typesMinAggregateOutputType = {
    field_type_id: string | null
    name: string | null
    sort: number | null
    comment: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Field_typesMaxAggregateOutputType = {
    field_type_id: string | null
    name: string | null
    sort: number | null
    comment: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Field_typesCountAggregateOutputType = {
    field_type_id: number
    name: number
    sort: number
    comment: number
    label: number
    deleted: number
    _all: number
  }


  export type Field_typesAvgAggregateInputType = {
    sort?: true
  }

  export type Field_typesSumAggregateInputType = {
    sort?: true
  }

  export type Field_typesMinAggregateInputType = {
    field_type_id?: true
    name?: true
    sort?: true
    comment?: true
    label?: true
    deleted?: true
  }

  export type Field_typesMaxAggregateInputType = {
    field_type_id?: true
    name?: true
    sort?: true
    comment?: true
    label?: true
    deleted?: true
  }

  export type Field_typesCountAggregateInputType = {
    field_type_id?: true
    name?: true
    sort?: true
    comment?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Field_typesAggregateArgs = {
    /**
     * Filter which Field_types to aggregate.
     */
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     */
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Field_types
    **/
    _count?: true | Field_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Field_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Field_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Field_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Field_typesMaxAggregateInputType
  }

  export type GetField_typesAggregateType<T extends Field_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateField_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateField_types[P]>
      : GetScalarType<T[P], AggregateField_types[P]>
  }




  export type Field_typesGroupByArgs = {
    where?: Field_typesWhereInput
    orderBy?: Enumerable<Field_typesOrderByWithAggregationInput>
    by: Field_typesScalarFieldEnum[]
    having?: Field_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Field_typesCountAggregateInputType | true
    _avg?: Field_typesAvgAggregateInputType
    _sum?: Field_typesSumAggregateInputType
    _min?: Field_typesMinAggregateInputType
    _max?: Field_typesMaxAggregateInputType
  }


  export type Field_typesGroupByOutputType = {
    field_type_id: string
    name: string | null
    sort: number | null
    comment: string | null
    label: string | null
    deleted: boolean | null
    _count: Field_typesCountAggregateOutputType | null
    _avg: Field_typesAvgAggregateOutputType | null
    _sum: Field_typesSumAggregateOutputType | null
    _min: Field_typesMinAggregateOutputType | null
    _max: Field_typesMaxAggregateOutputType | null
  }

  type GetField_typesGroupByPayload<T extends Field_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Field_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Field_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Field_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Field_typesGroupByOutputType[P]>
        }
      >
    >


  export type Field_typesSelect = {
    field_type_id?: boolean
    name?: boolean
    sort?: boolean
    comment?: boolean
    label?: boolean
    deleted?: boolean
    fields?: boolean | Field_types$fieldsArgs
    widgets_for_fields?: boolean | Field_types$widgets_for_fieldsArgs
    _count?: boolean | Field_typesCountOutputTypeArgs
  }


  export type Field_typesInclude = {
    fields?: boolean | Field_types$fieldsArgs
    widgets_for_fields?: boolean | Field_types$widgets_for_fieldsArgs
    _count?: boolean | Field_typesCountOutputTypeArgs
  }

  export type Field_typesGetPayload<S extends boolean | null | undefined | Field_typesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Field_types :
    S extends undefined ? never :
    S extends { include: any } & (Field_typesArgs | Field_typesFindManyArgs)
    ? Field_types  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['include'][P]>>  :
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['include'][P]>>  :
        P extends '_count' ? Field_typesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Field_typesArgs | Field_typesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['select'][P]>>  :
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['select'][P]>>  :
        P extends '_count' ? Field_typesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Field_types ? Field_types[P] : never
  } 
      : Field_types


  type Field_typesCountArgs = 
    Omit<Field_typesFindManyArgs, 'select' | 'include'> & {
      select?: Field_typesCountAggregateInputType | true
    }

  export interface Field_typesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Field_types that matches the filter.
     * @param {Field_typesFindUniqueArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Field_typesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Field_typesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Field_types'> extends True ? Prisma__Field_typesClient<Field_typesGetPayload<T>> : Prisma__Field_typesClient<Field_typesGetPayload<T> | null, null>

    /**
     * Find one Field_types that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Field_typesFindUniqueOrThrowArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Field_typesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Field_typesFindUniqueOrThrowArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Find the first Field_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesFindFirstArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Field_typesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Field_typesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Field_types'> extends True ? Prisma__Field_typesClient<Field_typesGetPayload<T>> : Prisma__Field_typesClient<Field_typesGetPayload<T> | null, null>

    /**
     * Find the first Field_types that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesFindFirstOrThrowArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Field_typesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Field_typesFindFirstOrThrowArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Find zero or more Field_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Field_types
     * const field_types = await prisma.field_types.findMany()
     * 
     * // Get first 10 Field_types
     * const field_types = await prisma.field_types.findMany({ take: 10 })
     * 
     * // Only select the `field_type_id`
     * const field_typesWithField_type_idOnly = await prisma.field_types.findMany({ select: { field_type_id: true } })
     * 
    **/
    findMany<T extends Field_typesFindManyArgs>(
      args?: SelectSubset<T, Field_typesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Field_typesGetPayload<T>>>

    /**
     * Create a Field_types.
     * @param {Field_typesCreateArgs} args - Arguments to create a Field_types.
     * @example
     * // Create one Field_types
     * const Field_types = await prisma.field_types.create({
     *   data: {
     *     // ... data to create a Field_types
     *   }
     * })
     * 
    **/
    create<T extends Field_typesCreateArgs>(
      args: SelectSubset<T, Field_typesCreateArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Create many Field_types.
     *     @param {Field_typesCreateManyArgs} args - Arguments to create many Field_types.
     *     @example
     *     // Create many Field_types
     *     const field_types = await prisma.field_types.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Field_typesCreateManyArgs>(
      args?: SelectSubset<T, Field_typesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Field_types.
     * @param {Field_typesDeleteArgs} args - Arguments to delete one Field_types.
     * @example
     * // Delete one Field_types
     * const Field_types = await prisma.field_types.delete({
     *   where: {
     *     // ... filter to delete one Field_types
     *   }
     * })
     * 
    **/
    delete<T extends Field_typesDeleteArgs>(
      args: SelectSubset<T, Field_typesDeleteArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Update one Field_types.
     * @param {Field_typesUpdateArgs} args - Arguments to update one Field_types.
     * @example
     * // Update one Field_types
     * const field_types = await prisma.field_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Field_typesUpdateArgs>(
      args: SelectSubset<T, Field_typesUpdateArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Delete zero or more Field_types.
     * @param {Field_typesDeleteManyArgs} args - Arguments to filter Field_types to delete.
     * @example
     * // Delete a few Field_types
     * const { count } = await prisma.field_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Field_typesDeleteManyArgs>(
      args?: SelectSubset<T, Field_typesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Field_types
     * const field_types = await prisma.field_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Field_typesUpdateManyArgs>(
      args: SelectSubset<T, Field_typesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Field_types.
     * @param {Field_typesUpsertArgs} args - Arguments to update or create a Field_types.
     * @example
     * // Update or create a Field_types
     * const field_types = await prisma.field_types.upsert({
     *   create: {
     *     // ... data to create a Field_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Field_types we want to update
     *   }
     * })
    **/
    upsert<T extends Field_typesUpsertArgs>(
      args: SelectSubset<T, Field_typesUpsertArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Count the number of Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesCountArgs} args - Arguments to filter Field_types to count.
     * @example
     * // Count the number of Field_types
     * const count = await prisma.field_types.count({
     *   where: {
     *     // ... the filter for the Field_types we want to count
     *   }
     * })
    **/
    count<T extends Field_typesCountArgs>(
      args?: Subset<T, Field_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Field_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Field_typesAggregateArgs>(args: Subset<T, Field_typesAggregateArgs>): Prisma.PrismaPromise<GetField_typesAggregateType<T>>

    /**
     * Group by Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Field_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Field_typesGroupByArgs['orderBy'] }
        : { orderBy?: Field_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Field_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetField_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Field_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Field_typesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    fields<T extends Field_types$fieldsArgs= {}>(args?: Subset<T, Field_types$fieldsArgs>): Prisma.PrismaPromise<Array<FieldsGetPayload<T>>| Null>;

    widgets_for_fields<T extends Field_types$widgets_for_fieldsArgs= {}>(args?: Subset<T, Field_types$widgets_for_fieldsArgs>): Prisma.PrismaPromise<Array<Widgets_for_fieldsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Field_types base type for findUnique actions
   */
  export type Field_typesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     */
    where: Field_typesWhereUniqueInput
  }

  /**
   * Field_types findUnique
   */
  export interface Field_typesFindUniqueArgs extends Field_typesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Field_types findUniqueOrThrow
   */
  export type Field_typesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     */
    where: Field_typesWhereUniqueInput
  }


  /**
   * Field_types base type for findFirst actions
   */
  export type Field_typesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     */
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     */
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Field_types.
     */
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Field_types.
     */
    distinct?: Enumerable<Field_typesScalarFieldEnum>
  }

  /**
   * Field_types findFirst
   */
  export interface Field_typesFindFirstArgs extends Field_typesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Field_types findFirstOrThrow
   */
  export type Field_typesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     */
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     */
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Field_types.
     */
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Field_types.
     */
    distinct?: Enumerable<Field_typesScalarFieldEnum>
  }


  /**
   * Field_types findMany
   */
  export type Field_typesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     */
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     */
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Field_types.
     */
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     */
    skip?: number
    distinct?: Enumerable<Field_typesScalarFieldEnum>
  }


  /**
   * Field_types create
   */
  export type Field_typesCreateArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * The data needed to create a Field_types.
     */
    data: XOR<Field_typesCreateInput, Field_typesUncheckedCreateInput>
  }


  /**
   * Field_types createMany
   */
  export type Field_typesCreateManyArgs = {
    /**
     * The data used to create many Field_types.
     */
    data: Enumerable<Field_typesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Field_types update
   */
  export type Field_typesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * The data needed to update a Field_types.
     */
    data: XOR<Field_typesUpdateInput, Field_typesUncheckedUpdateInput>
    /**
     * Choose, which Field_types to update.
     */
    where: Field_typesWhereUniqueInput
  }


  /**
   * Field_types updateMany
   */
  export type Field_typesUpdateManyArgs = {
    /**
     * The data used to update Field_types.
     */
    data: XOR<Field_typesUpdateManyMutationInput, Field_typesUncheckedUpdateManyInput>
    /**
     * Filter which Field_types to update
     */
    where?: Field_typesWhereInput
  }


  /**
   * Field_types upsert
   */
  export type Field_typesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * The filter to search for the Field_types to update in case it exists.
     */
    where: Field_typesWhereUniqueInput
    /**
     * In case the Field_types found by the `where` argument doesn't exist, create a new Field_types with this data.
     */
    create: XOR<Field_typesCreateInput, Field_typesUncheckedCreateInput>
    /**
     * In case the Field_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Field_typesUpdateInput, Field_typesUncheckedUpdateInput>
  }


  /**
   * Field_types delete
   */
  export type Field_typesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
    /**
     * Filter which Field_types to delete.
     */
    where: Field_typesWhereUniqueInput
  }


  /**
   * Field_types deleteMany
   */
  export type Field_typesDeleteManyArgs = {
    /**
     * Filter which Field_types to delete
     */
    where?: Field_typesWhereInput
  }


  /**
   * Field_types.fields
   */
  export type Field_types$fieldsArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    where?: FieldsWhereInput
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    cursor?: FieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }


  /**
   * Field_types.widgets_for_fields
   */
  export type Field_types$widgets_for_fieldsArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    where?: Widgets_for_fieldsWhereInput
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    cursor?: Widgets_for_fieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Field_types without action
   */
  export type Field_typesArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     */
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Field_typesInclude | null
  }



  /**
   * Model Fields
   */


  export type AggregateFields = {
    _count: FieldsCountAggregateOutputType | null
    _min: FieldsMinAggregateOutputType | null
    _max: FieldsMaxAggregateOutputType | null
  }

  export type FieldsMinAggregateOutputType = {
    field_id: string | null
    project_id: string | null
    account_id: string | null
    table_name: string | null
    field_type_id: string | null
    widget_type_id: string | null
    name: string | null
    field_label: string | null
    list_id: string | null
    preset: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type FieldsMaxAggregateOutputType = {
    field_id: string | null
    project_id: string | null
    account_id: string | null
    table_name: string | null
    field_type_id: string | null
    widget_type_id: string | null
    name: string | null
    field_label: string | null
    list_id: string | null
    preset: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type FieldsCountAggregateOutputType = {
    field_id: number
    project_id: number
    account_id: number
    table_name: number
    field_type_id: number
    widget_type_id: number
    name: number
    field_label: number
    list_id: number
    preset: number
    obsolete: number
    label: number
    deleted: number
    _all: number
  }


  export type FieldsMinAggregateInputType = {
    field_id?: true
    project_id?: true
    account_id?: true
    table_name?: true
    field_type_id?: true
    widget_type_id?: true
    name?: true
    field_label?: true
    list_id?: true
    preset?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type FieldsMaxAggregateInputType = {
    field_id?: true
    project_id?: true
    account_id?: true
    table_name?: true
    field_type_id?: true
    widget_type_id?: true
    name?: true
    field_label?: true
    list_id?: true
    preset?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type FieldsCountAggregateInputType = {
    field_id?: true
    project_id?: true
    account_id?: true
    table_name?: true
    field_type_id?: true
    widget_type_id?: true
    name?: true
    field_label?: true
    list_id?: true
    preset?: true
    obsolete?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type FieldsAggregateArgs = {
    /**
     * Filter which Fields to aggregate.
     */
    where?: FieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fields to fetch.
     */
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Fields
    **/
    _count?: true | FieldsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FieldsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FieldsMaxAggregateInputType
  }

  export type GetFieldsAggregateType<T extends FieldsAggregateArgs> = {
        [P in keyof T & keyof AggregateFields]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFields[P]>
      : GetScalarType<T[P], AggregateFields[P]>
  }




  export type FieldsGroupByArgs = {
    where?: FieldsWhereInput
    orderBy?: Enumerable<FieldsOrderByWithAggregationInput>
    by: FieldsScalarFieldEnum[]
    having?: FieldsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FieldsCountAggregateInputType | true
    _min?: FieldsMinAggregateInputType
    _max?: FieldsMaxAggregateInputType
  }


  export type FieldsGroupByOutputType = {
    field_id: string
    project_id: string | null
    account_id: string | null
    table_name: string | null
    field_type_id: string | null
    widget_type_id: string | null
    name: string | null
    field_label: string | null
    list_id: string | null
    preset: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
    _count: FieldsCountAggregateOutputType | null
    _min: FieldsMinAggregateOutputType | null
    _max: FieldsMaxAggregateOutputType | null
  }

  type GetFieldsGroupByPayload<T extends FieldsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<FieldsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FieldsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FieldsGroupByOutputType[P]>
            : GetScalarType<T[P], FieldsGroupByOutputType[P]>
        }
      >
    >


  export type FieldsSelect = {
    field_id?: boolean
    project_id?: boolean
    account_id?: boolean
    table_name?: boolean
    field_type_id?: boolean
    widget_type_id?: boolean
    name?: boolean
    field_label?: boolean
    list_id?: boolean
    preset?: boolean
    obsolete?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    field_types?: boolean | Field_typesArgs
    lists?: boolean | ListsArgs
    projects?: boolean | ProjectsArgs
    widget_types?: boolean | Widget_typesArgs
  }


  export type FieldsInclude = {
    accounts?: boolean | AccountsArgs
    field_types?: boolean | Field_typesArgs
    lists?: boolean | ListsArgs
    projects?: boolean | ProjectsArgs
    widget_types?: boolean | Widget_typesArgs
  }

  export type FieldsGetPayload<S extends boolean | null | undefined | FieldsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Fields :
    S extends undefined ? never :
    S extends { include: any } & (FieldsArgs | FieldsFindManyArgs)
    ? Fields  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'field_types' ? Field_typesGetPayload<S['include'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'widget_types' ? Widget_typesGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (FieldsArgs | FieldsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'field_types' ? Field_typesGetPayload<S['select'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'widget_types' ? Widget_typesGetPayload<S['select'][P]> | null :  P extends keyof Fields ? Fields[P] : never
  } 
      : Fields


  type FieldsCountArgs = 
    Omit<FieldsFindManyArgs, 'select' | 'include'> & {
      select?: FieldsCountAggregateInputType | true
    }

  export interface FieldsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Fields that matches the filter.
     * @param {FieldsFindUniqueArgs} args - Arguments to find a Fields
     * @example
     * // Get one Fields
     * const fields = await prisma.fields.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FieldsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, FieldsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Fields'> extends True ? Prisma__FieldsClient<FieldsGetPayload<T>> : Prisma__FieldsClient<FieldsGetPayload<T> | null, null>

    /**
     * Find one Fields that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FieldsFindUniqueOrThrowArgs} args - Arguments to find a Fields
     * @example
     * // Get one Fields
     * const fields = await prisma.fields.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FieldsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, FieldsFindUniqueOrThrowArgs>
    ): Prisma__FieldsClient<FieldsGetPayload<T>>

    /**
     * Find the first Fields that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FieldsFindFirstArgs} args - Arguments to find a Fields
     * @example
     * // Get one Fields
     * const fields = await prisma.fields.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FieldsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, FieldsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Fields'> extends True ? Prisma__FieldsClient<FieldsGetPayload<T>> : Prisma__FieldsClient<FieldsGetPayload<T> | null, null>

    /**
     * Find the first Fields that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FieldsFindFirstOrThrowArgs} args - Arguments to find a Fields
     * @example
     * // Get one Fields
     * const fields = await prisma.fields.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FieldsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, FieldsFindFirstOrThrowArgs>
    ): Prisma__FieldsClient<FieldsGetPayload<T>>

    /**
     * Find zero or more Fields that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FieldsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fields
     * const fields = await prisma.fields.findMany()
     * 
     * // Get first 10 Fields
     * const fields = await prisma.fields.findMany({ take: 10 })
     * 
     * // Only select the `field_id`
     * const fieldsWithField_idOnly = await prisma.fields.findMany({ select: { field_id: true } })
     * 
    **/
    findMany<T extends FieldsFindManyArgs>(
      args?: SelectSubset<T, FieldsFindManyArgs>
    ): Prisma.PrismaPromise<Array<FieldsGetPayload<T>>>

    /**
     * Create a Fields.
     * @param {FieldsCreateArgs} args - Arguments to create a Fields.
     * @example
     * // Create one Fields
     * const Fields = await prisma.fields.create({
     *   data: {
     *     // ... data to create a Fields
     *   }
     * })
     * 
    **/
    create<T extends FieldsCreateArgs>(
      args: SelectSubset<T, FieldsCreateArgs>
    ): Prisma__FieldsClient<FieldsGetPayload<T>>

    /**
     * Create many Fields.
     *     @param {FieldsCreateManyArgs} args - Arguments to create many Fields.
     *     @example
     *     // Create many Fields
     *     const fields = await prisma.fields.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FieldsCreateManyArgs>(
      args?: SelectSubset<T, FieldsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Fields.
     * @param {FieldsDeleteArgs} args - Arguments to delete one Fields.
     * @example
     * // Delete one Fields
     * const Fields = await prisma.fields.delete({
     *   where: {
     *     // ... filter to delete one Fields
     *   }
     * })
     * 
    **/
    delete<T extends FieldsDeleteArgs>(
      args: SelectSubset<T, FieldsDeleteArgs>
    ): Prisma__FieldsClient<FieldsGetPayload<T>>

    /**
     * Update one Fields.
     * @param {FieldsUpdateArgs} args - Arguments to update one Fields.
     * @example
     * // Update one Fields
     * const fields = await prisma.fields.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FieldsUpdateArgs>(
      args: SelectSubset<T, FieldsUpdateArgs>
    ): Prisma__FieldsClient<FieldsGetPayload<T>>

    /**
     * Delete zero or more Fields.
     * @param {FieldsDeleteManyArgs} args - Arguments to filter Fields to delete.
     * @example
     * // Delete a few Fields
     * const { count } = await prisma.fields.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FieldsDeleteManyArgs>(
      args?: SelectSubset<T, FieldsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FieldsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fields
     * const fields = await prisma.fields.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FieldsUpdateManyArgs>(
      args: SelectSubset<T, FieldsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Fields.
     * @param {FieldsUpsertArgs} args - Arguments to update or create a Fields.
     * @example
     * // Update or create a Fields
     * const fields = await prisma.fields.upsert({
     *   create: {
     *     // ... data to create a Fields
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fields we want to update
     *   }
     * })
    **/
    upsert<T extends FieldsUpsertArgs>(
      args: SelectSubset<T, FieldsUpsertArgs>
    ): Prisma__FieldsClient<FieldsGetPayload<T>>

    /**
     * Count the number of Fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FieldsCountArgs} args - Arguments to filter Fields to count.
     * @example
     * // Count the number of Fields
     * const count = await prisma.fields.count({
     *   where: {
     *     // ... the filter for the Fields we want to count
     *   }
     * })
    **/
    count<T extends FieldsCountArgs>(
      args?: Subset<T, FieldsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FieldsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FieldsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FieldsAggregateArgs>(args: Subset<T, FieldsAggregateArgs>): Prisma.PrismaPromise<GetFieldsAggregateType<T>>

    /**
     * Group by Fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FieldsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FieldsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FieldsGroupByArgs['orderBy'] }
        : { orderBy?: FieldsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FieldsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFieldsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Fields.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__FieldsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    field_types<T extends Field_typesArgs= {}>(args?: Subset<T, Field_typesArgs>): Prisma__Field_typesClient<Field_typesGetPayload<T> | Null>;

    lists<T extends ListsArgs= {}>(args?: Subset<T, ListsArgs>): Prisma__ListsClient<ListsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    widget_types<T extends Widget_typesArgs= {}>(args?: Subset<T, Widget_typesArgs>): Prisma__Widget_typesClient<Widget_typesGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Fields base type for findUnique actions
   */
  export type FieldsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * Filter, which Fields to fetch.
     */
    where: FieldsWhereUniqueInput
  }

  /**
   * Fields findUnique
   */
  export interface FieldsFindUniqueArgs extends FieldsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Fields findUniqueOrThrow
   */
  export type FieldsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * Filter, which Fields to fetch.
     */
    where: FieldsWhereUniqueInput
  }


  /**
   * Fields base type for findFirst actions
   */
  export type FieldsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * Filter, which Fields to fetch.
     */
    where?: FieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fields to fetch.
     */
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fields.
     */
    cursor?: FieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fields.
     */
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }

  /**
   * Fields findFirst
   */
  export interface FieldsFindFirstArgs extends FieldsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Fields findFirstOrThrow
   */
  export type FieldsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * Filter, which Fields to fetch.
     */
    where?: FieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fields to fetch.
     */
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fields.
     */
    cursor?: FieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fields.
     */
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }


  /**
   * Fields findMany
   */
  export type FieldsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * Filter, which Fields to fetch.
     */
    where?: FieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fields to fetch.
     */
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Fields.
     */
    cursor?: FieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fields.
     */
    skip?: number
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }


  /**
   * Fields create
   */
  export type FieldsCreateArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * The data needed to create a Fields.
     */
    data: XOR<FieldsCreateInput, FieldsUncheckedCreateInput>
  }


  /**
   * Fields createMany
   */
  export type FieldsCreateManyArgs = {
    /**
     * The data used to create many Fields.
     */
    data: Enumerable<FieldsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Fields update
   */
  export type FieldsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * The data needed to update a Fields.
     */
    data: XOR<FieldsUpdateInput, FieldsUncheckedUpdateInput>
    /**
     * Choose, which Fields to update.
     */
    where: FieldsWhereUniqueInput
  }


  /**
   * Fields updateMany
   */
  export type FieldsUpdateManyArgs = {
    /**
     * The data used to update Fields.
     */
    data: XOR<FieldsUpdateManyMutationInput, FieldsUncheckedUpdateManyInput>
    /**
     * Filter which Fields to update
     */
    where?: FieldsWhereInput
  }


  /**
   * Fields upsert
   */
  export type FieldsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * The filter to search for the Fields to update in case it exists.
     */
    where: FieldsWhereUniqueInput
    /**
     * In case the Fields found by the `where` argument doesn't exist, create a new Fields with this data.
     */
    create: XOR<FieldsCreateInput, FieldsUncheckedCreateInput>
    /**
     * In case the Fields was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FieldsUpdateInput, FieldsUncheckedUpdateInput>
  }


  /**
   * Fields delete
   */
  export type FieldsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    /**
     * Filter which Fields to delete.
     */
    where: FieldsWhereUniqueInput
  }


  /**
   * Fields deleteMany
   */
  export type FieldsDeleteManyArgs = {
    /**
     * Filter which Fields to delete
     */
    where?: FieldsWhereInput
  }


  /**
   * Fields without action
   */
  export type FieldsArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
  }



  /**
   * Model Files
   */


  export type AggregateFiles = {
    _count: FilesCountAggregateOutputType | null
    _min: FilesMinAggregateOutputType | null
    _max: FilesMaxAggregateOutputType | null
  }

  export type FilesMinAggregateOutputType = {
    file_id: string | null
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    place_id: string | null
    action_id: string | null
    check_id: string | null
    name: string | null
    label: string | null
    mimetype: string | null
    url: string | null
    deleted: boolean | null
  }

  export type FilesMaxAggregateOutputType = {
    file_id: string | null
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    place_id: string | null
    action_id: string | null
    check_id: string | null
    name: string | null
    label: string | null
    mimetype: string | null
    url: string | null
    deleted: boolean | null
  }

  export type FilesCountAggregateOutputType = {
    file_id: number
    account_id: number
    project_id: number
    subproject_id: number
    place_id: number
    action_id: number
    check_id: number
    name: number
    label: number
    data: number
    mimetype: number
    url: number
    deleted: number
    _all: number
  }


  export type FilesMinAggregateInputType = {
    file_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    place_id?: true
    action_id?: true
    check_id?: true
    name?: true
    label?: true
    mimetype?: true
    url?: true
    deleted?: true
  }

  export type FilesMaxAggregateInputType = {
    file_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    place_id?: true
    action_id?: true
    check_id?: true
    name?: true
    label?: true
    mimetype?: true
    url?: true
    deleted?: true
  }

  export type FilesCountAggregateInputType = {
    file_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    place_id?: true
    action_id?: true
    check_id?: true
    name?: true
    label?: true
    data?: true
    mimetype?: true
    url?: true
    deleted?: true
    _all?: true
  }

  export type FilesAggregateArgs = {
    /**
     * Filter which Files to aggregate.
     */
    where?: FilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Files
    **/
    _count?: true | FilesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FilesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FilesMaxAggregateInputType
  }

  export type GetFilesAggregateType<T extends FilesAggregateArgs> = {
        [P in keyof T & keyof AggregateFiles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFiles[P]>
      : GetScalarType<T[P], AggregateFiles[P]>
  }




  export type FilesGroupByArgs = {
    where?: FilesWhereInput
    orderBy?: Enumerable<FilesOrderByWithAggregationInput>
    by: FilesScalarFieldEnum[]
    having?: FilesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FilesCountAggregateInputType | true
    _min?: FilesMinAggregateInputType
    _max?: FilesMaxAggregateInputType
  }


  export type FilesGroupByOutputType = {
    file_id: string
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    place_id: string | null
    action_id: string | null
    check_id: string | null
    name: string | null
    label: string | null
    data: JsonValue | null
    mimetype: string | null
    url: string | null
    deleted: boolean | null
    _count: FilesCountAggregateOutputType | null
    _min: FilesMinAggregateOutputType | null
    _max: FilesMaxAggregateOutputType | null
  }

  type GetFilesGroupByPayload<T extends FilesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<FilesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FilesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FilesGroupByOutputType[P]>
            : GetScalarType<T[P], FilesGroupByOutputType[P]>
        }
      >
    >


  export type FilesSelect = {
    file_id?: boolean
    account_id?: boolean
    project_id?: boolean
    subproject_id?: boolean
    place_id?: boolean
    action_id?: boolean
    check_id?: boolean
    name?: boolean
    label?: boolean
    data?: boolean
    mimetype?: boolean
    url?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    actions?: boolean | ActionsArgs
    checks?: boolean | ChecksArgs
    places?: boolean | PlacesArgs
    projects?: boolean | ProjectsArgs
    subprojects?: boolean | SubprojectsArgs
  }


  export type FilesInclude = {
    accounts?: boolean | AccountsArgs
    actions?: boolean | ActionsArgs
    checks?: boolean | ChecksArgs
    places?: boolean | PlacesArgs
    projects?: boolean | ProjectsArgs
    subprojects?: boolean | SubprojectsArgs
  }

  export type FilesGetPayload<S extends boolean | null | undefined | FilesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Files :
    S extends undefined ? never :
    S extends { include: any } & (FilesArgs | FilesFindManyArgs)
    ? Files  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'actions' ? ActionsGetPayload<S['include'][P]> | null :
        P extends 'checks' ? ChecksGetPayload<S['include'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (FilesArgs | FilesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'actions' ? ActionsGetPayload<S['select'][P]> | null :
        P extends 'checks' ? ChecksGetPayload<S['select'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :  P extends keyof Files ? Files[P] : never
  } 
      : Files


  type FilesCountArgs = 
    Omit<FilesFindManyArgs, 'select' | 'include'> & {
      select?: FilesCountAggregateInputType | true
    }

  export interface FilesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Files that matches the filter.
     * @param {FilesFindUniqueArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FilesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, FilesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Files'> extends True ? Prisma__FilesClient<FilesGetPayload<T>> : Prisma__FilesClient<FilesGetPayload<T> | null, null>

    /**
     * Find one Files that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FilesFindUniqueOrThrowArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FilesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, FilesFindUniqueOrThrowArgs>
    ): Prisma__FilesClient<FilesGetPayload<T>>

    /**
     * Find the first Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesFindFirstArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FilesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, FilesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Files'> extends True ? Prisma__FilesClient<FilesGetPayload<T>> : Prisma__FilesClient<FilesGetPayload<T> | null, null>

    /**
     * Find the first Files that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesFindFirstOrThrowArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FilesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, FilesFindFirstOrThrowArgs>
    ): Prisma__FilesClient<FilesGetPayload<T>>

    /**
     * Find zero or more Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Files
     * const files = await prisma.files.findMany()
     * 
     * // Get first 10 Files
     * const files = await prisma.files.findMany({ take: 10 })
     * 
     * // Only select the `file_id`
     * const filesWithFile_idOnly = await prisma.files.findMany({ select: { file_id: true } })
     * 
    **/
    findMany<T extends FilesFindManyArgs>(
      args?: SelectSubset<T, FilesFindManyArgs>
    ): Prisma.PrismaPromise<Array<FilesGetPayload<T>>>

    /**
     * Create a Files.
     * @param {FilesCreateArgs} args - Arguments to create a Files.
     * @example
     * // Create one Files
     * const Files = await prisma.files.create({
     *   data: {
     *     // ... data to create a Files
     *   }
     * })
     * 
    **/
    create<T extends FilesCreateArgs>(
      args: SelectSubset<T, FilesCreateArgs>
    ): Prisma__FilesClient<FilesGetPayload<T>>

    /**
     * Create many Files.
     *     @param {FilesCreateManyArgs} args - Arguments to create many Files.
     *     @example
     *     // Create many Files
     *     const files = await prisma.files.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FilesCreateManyArgs>(
      args?: SelectSubset<T, FilesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Files.
     * @param {FilesDeleteArgs} args - Arguments to delete one Files.
     * @example
     * // Delete one Files
     * const Files = await prisma.files.delete({
     *   where: {
     *     // ... filter to delete one Files
     *   }
     * })
     * 
    **/
    delete<T extends FilesDeleteArgs>(
      args: SelectSubset<T, FilesDeleteArgs>
    ): Prisma__FilesClient<FilesGetPayload<T>>

    /**
     * Update one Files.
     * @param {FilesUpdateArgs} args - Arguments to update one Files.
     * @example
     * // Update one Files
     * const files = await prisma.files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FilesUpdateArgs>(
      args: SelectSubset<T, FilesUpdateArgs>
    ): Prisma__FilesClient<FilesGetPayload<T>>

    /**
     * Delete zero or more Files.
     * @param {FilesDeleteManyArgs} args - Arguments to filter Files to delete.
     * @example
     * // Delete a few Files
     * const { count } = await prisma.files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FilesDeleteManyArgs>(
      args?: SelectSubset<T, FilesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Files
     * const files = await prisma.files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FilesUpdateManyArgs>(
      args: SelectSubset<T, FilesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Files.
     * @param {FilesUpsertArgs} args - Arguments to update or create a Files.
     * @example
     * // Update or create a Files
     * const files = await prisma.files.upsert({
     *   create: {
     *     // ... data to create a Files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Files we want to update
     *   }
     * })
    **/
    upsert<T extends FilesUpsertArgs>(
      args: SelectSubset<T, FilesUpsertArgs>
    ): Prisma__FilesClient<FilesGetPayload<T>>

    /**
     * Count the number of Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesCountArgs} args - Arguments to filter Files to count.
     * @example
     * // Count the number of Files
     * const count = await prisma.files.count({
     *   where: {
     *     // ... the filter for the Files we want to count
     *   }
     * })
    **/
    count<T extends FilesCountArgs>(
      args?: Subset<T, FilesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FilesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FilesAggregateArgs>(args: Subset<T, FilesAggregateArgs>): Prisma.PrismaPromise<GetFilesAggregateType<T>>

    /**
     * Group by Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FilesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FilesGroupByArgs['orderBy'] }
        : { orderBy?: FilesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FilesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__FilesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    actions<T extends ActionsArgs= {}>(args?: Subset<T, ActionsArgs>): Prisma__ActionsClient<ActionsGetPayload<T> | Null>;

    checks<T extends ChecksArgs= {}>(args?: Subset<T, ChecksArgs>): Prisma__ChecksClient<ChecksGetPayload<T> | Null>;

    places<T extends PlacesArgs= {}>(args?: Subset<T, PlacesArgs>): Prisma__PlacesClient<PlacesGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    subprojects<T extends SubprojectsArgs= {}>(args?: Subset<T, SubprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Files base type for findUnique actions
   */
  export type FilesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * Filter, which Files to fetch.
     */
    where: FilesWhereUniqueInput
  }

  /**
   * Files findUnique
   */
  export interface FilesFindUniqueArgs extends FilesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Files findUniqueOrThrow
   */
  export type FilesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * Filter, which Files to fetch.
     */
    where: FilesWhereUniqueInput
  }


  /**
   * Files base type for findFirst actions
   */
  export type FilesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * Filter, which Files to fetch.
     */
    where?: FilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: Enumerable<FilesScalarFieldEnum>
  }

  /**
   * Files findFirst
   */
  export interface FilesFindFirstArgs extends FilesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Files findFirstOrThrow
   */
  export type FilesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * Filter, which Files to fetch.
     */
    where?: FilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Files findMany
   */
  export type FilesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * Filter, which Files to fetch.
     */
    where?: FilesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Files.
     */
    cursor?: FilesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Files create
   */
  export type FilesCreateArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * The data needed to create a Files.
     */
    data: XOR<FilesCreateInput, FilesUncheckedCreateInput>
  }


  /**
   * Files createMany
   */
  export type FilesCreateManyArgs = {
    /**
     * The data used to create many Files.
     */
    data: Enumerable<FilesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Files update
   */
  export type FilesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * The data needed to update a Files.
     */
    data: XOR<FilesUpdateInput, FilesUncheckedUpdateInput>
    /**
     * Choose, which Files to update.
     */
    where: FilesWhereUniqueInput
  }


  /**
   * Files updateMany
   */
  export type FilesUpdateManyArgs = {
    /**
     * The data used to update Files.
     */
    data: XOR<FilesUpdateManyMutationInput, FilesUncheckedUpdateManyInput>
    /**
     * Filter which Files to update
     */
    where?: FilesWhereInput
  }


  /**
   * Files upsert
   */
  export type FilesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * The filter to search for the Files to update in case it exists.
     */
    where: FilesWhereUniqueInput
    /**
     * In case the Files found by the `where` argument doesn't exist, create a new Files with this data.
     */
    create: XOR<FilesCreateInput, FilesUncheckedCreateInput>
    /**
     * In case the Files was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FilesUpdateInput, FilesUncheckedUpdateInput>
  }


  /**
   * Files delete
   */
  export type FilesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    /**
     * Filter which Files to delete.
     */
    where: FilesWhereUniqueInput
  }


  /**
   * Files deleteMany
   */
  export type FilesDeleteManyArgs = {
    /**
     * Filter which Files to delete
     */
    where?: FilesWhereInput
  }


  /**
   * Files without action
   */
  export type FilesArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
  }



  /**
   * Model Goal_report_values
   */


  export type AggregateGoal_report_values = {
    _count: Goal_report_valuesCountAggregateOutputType | null
    _avg: Goal_report_valuesAvgAggregateOutputType | null
    _sum: Goal_report_valuesSumAggregateOutputType | null
    _min: Goal_report_valuesMinAggregateOutputType | null
    _max: Goal_report_valuesMaxAggregateOutputType | null
  }

  export type Goal_report_valuesAvgAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Goal_report_valuesSumAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Goal_report_valuesMinAggregateOutputType = {
    goal_report_value_id: string | null
    account_id: string | null
    goal_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_report_valuesMaxAggregateOutputType = {
    goal_report_value_id: string | null
    account_id: string | null
    goal_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_report_valuesCountAggregateOutputType = {
    goal_report_value_id: number
    account_id: number
    goal_report_id: number
    unit_id: number
    value_integer: number
    value_numeric: number
    value_text: number
    label: number
    deleted: number
    _all: number
  }


  export type Goal_report_valuesAvgAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Goal_report_valuesSumAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Goal_report_valuesMinAggregateInputType = {
    goal_report_value_id?: true
    account_id?: true
    goal_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Goal_report_valuesMaxAggregateInputType = {
    goal_report_value_id?: true
    account_id?: true
    goal_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Goal_report_valuesCountAggregateInputType = {
    goal_report_value_id?: true
    account_id?: true
    goal_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Goal_report_valuesAggregateArgs = {
    /**
     * Filter which Goal_report_values to aggregate.
     */
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     */
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Goal_report_values
    **/
    _count?: true | Goal_report_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Goal_report_valuesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Goal_report_valuesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Goal_report_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Goal_report_valuesMaxAggregateInputType
  }

  export type GetGoal_report_valuesAggregateType<T extends Goal_report_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateGoal_report_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoal_report_values[P]>
      : GetScalarType<T[P], AggregateGoal_report_values[P]>
  }




  export type Goal_report_valuesGroupByArgs = {
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithAggregationInput>
    by: Goal_report_valuesScalarFieldEnum[]
    having?: Goal_report_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Goal_report_valuesCountAggregateInputType | true
    _avg?: Goal_report_valuesAvgAggregateInputType
    _sum?: Goal_report_valuesSumAggregateInputType
    _min?: Goal_report_valuesMinAggregateInputType
    _max?: Goal_report_valuesMaxAggregateInputType
  }


  export type Goal_report_valuesGroupByOutputType = {
    goal_report_value_id: string
    account_id: string | null
    goal_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
    _count: Goal_report_valuesCountAggregateOutputType | null
    _avg: Goal_report_valuesAvgAggregateOutputType | null
    _sum: Goal_report_valuesSumAggregateOutputType | null
    _min: Goal_report_valuesMinAggregateOutputType | null
    _max: Goal_report_valuesMaxAggregateOutputType | null
  }

  type GetGoal_report_valuesGroupByPayload<T extends Goal_report_valuesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Goal_report_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Goal_report_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Goal_report_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], Goal_report_valuesGroupByOutputType[P]>
        }
      >
    >


  export type Goal_report_valuesSelect = {
    goal_report_value_id?: boolean
    account_id?: boolean
    goal_report_id?: boolean
    unit_id?: boolean
    value_integer?: boolean
    value_numeric?: boolean
    value_text?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    goal_reports?: boolean | Goal_reportsArgs
    units?: boolean | UnitsArgs
  }


  export type Goal_report_valuesInclude = {
    accounts?: boolean | AccountsArgs
    goal_reports?: boolean | Goal_reportsArgs
    units?: boolean | UnitsArgs
  }

  export type Goal_report_valuesGetPayload<S extends boolean | null | undefined | Goal_report_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goal_report_values :
    S extends undefined ? never :
    S extends { include: any } & (Goal_report_valuesArgs | Goal_report_valuesFindManyArgs)
    ? Goal_report_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'goal_reports' ? Goal_reportsGetPayload<S['include'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Goal_report_valuesArgs | Goal_report_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'goal_reports' ? Goal_reportsGetPayload<S['select'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['select'][P]> | null :  P extends keyof Goal_report_values ? Goal_report_values[P] : never
  } 
      : Goal_report_values


  type Goal_report_valuesCountArgs = 
    Omit<Goal_report_valuesFindManyArgs, 'select' | 'include'> & {
      select?: Goal_report_valuesCountAggregateInputType | true
    }

  export interface Goal_report_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Goal_report_values that matches the filter.
     * @param {Goal_report_valuesFindUniqueArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Goal_report_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Goal_report_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Goal_report_values'> extends True ? Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>> : Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T> | null, null>

    /**
     * Find one Goal_report_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Goal_report_valuesFindUniqueOrThrowArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Goal_report_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Goal_report_valuesFindUniqueOrThrowArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Find the first Goal_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesFindFirstArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Goal_report_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Goal_report_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Goal_report_values'> extends True ? Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>> : Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T> | null, null>

    /**
     * Find the first Goal_report_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesFindFirstOrThrowArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Goal_report_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Goal_report_valuesFindFirstOrThrowArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Find zero or more Goal_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findMany()
     * 
     * // Get first 10 Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findMany({ take: 10 })
     * 
     * // Only select the `goal_report_value_id`
     * const goal_report_valuesWithGoal_report_value_idOnly = await prisma.goal_report_values.findMany({ select: { goal_report_value_id: true } })
     * 
    **/
    findMany<T extends Goal_report_valuesFindManyArgs>(
      args?: SelectSubset<T, Goal_report_valuesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Goal_report_valuesGetPayload<T>>>

    /**
     * Create a Goal_report_values.
     * @param {Goal_report_valuesCreateArgs} args - Arguments to create a Goal_report_values.
     * @example
     * // Create one Goal_report_values
     * const Goal_report_values = await prisma.goal_report_values.create({
     *   data: {
     *     // ... data to create a Goal_report_values
     *   }
     * })
     * 
    **/
    create<T extends Goal_report_valuesCreateArgs>(
      args: SelectSubset<T, Goal_report_valuesCreateArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Create many Goal_report_values.
     *     @param {Goal_report_valuesCreateManyArgs} args - Arguments to create many Goal_report_values.
     *     @example
     *     // Create many Goal_report_values
     *     const goal_report_values = await prisma.goal_report_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Goal_report_valuesCreateManyArgs>(
      args?: SelectSubset<T, Goal_report_valuesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Goal_report_values.
     * @param {Goal_report_valuesDeleteArgs} args - Arguments to delete one Goal_report_values.
     * @example
     * // Delete one Goal_report_values
     * const Goal_report_values = await prisma.goal_report_values.delete({
     *   where: {
     *     // ... filter to delete one Goal_report_values
     *   }
     * })
     * 
    **/
    delete<T extends Goal_report_valuesDeleteArgs>(
      args: SelectSubset<T, Goal_report_valuesDeleteArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Update one Goal_report_values.
     * @param {Goal_report_valuesUpdateArgs} args - Arguments to update one Goal_report_values.
     * @example
     * // Update one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Goal_report_valuesUpdateArgs>(
      args: SelectSubset<T, Goal_report_valuesUpdateArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Delete zero or more Goal_report_values.
     * @param {Goal_report_valuesDeleteManyArgs} args - Arguments to filter Goal_report_values to delete.
     * @example
     * // Delete a few Goal_report_values
     * const { count } = await prisma.goal_report_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Goal_report_valuesDeleteManyArgs>(
      args?: SelectSubset<T, Goal_report_valuesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Goal_report_valuesUpdateManyArgs>(
      args: SelectSubset<T, Goal_report_valuesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Goal_report_values.
     * @param {Goal_report_valuesUpsertArgs} args - Arguments to update or create a Goal_report_values.
     * @example
     * // Update or create a Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.upsert({
     *   create: {
     *     // ... data to create a Goal_report_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Goal_report_values we want to update
     *   }
     * })
    **/
    upsert<T extends Goal_report_valuesUpsertArgs>(
      args: SelectSubset<T, Goal_report_valuesUpsertArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Count the number of Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesCountArgs} args - Arguments to filter Goal_report_values to count.
     * @example
     * // Count the number of Goal_report_values
     * const count = await prisma.goal_report_values.count({
     *   where: {
     *     // ... the filter for the Goal_report_values we want to count
     *   }
     * })
    **/
    count<T extends Goal_report_valuesCountArgs>(
      args?: Subset<T, Goal_report_valuesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Goal_report_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Goal_report_valuesAggregateArgs>(args: Subset<T, Goal_report_valuesAggregateArgs>): Prisma.PrismaPromise<GetGoal_report_valuesAggregateType<T>>

    /**
     * Group by Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Goal_report_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Goal_report_valuesGroupByArgs['orderBy'] }
        : { orderBy?: Goal_report_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Goal_report_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoal_report_valuesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Goal_report_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Goal_report_valuesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    goal_reports<T extends Goal_reportsArgs= {}>(args?: Subset<T, Goal_reportsArgs>): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T> | Null>;

    units<T extends UnitsArgs= {}>(args?: Subset<T, UnitsArgs>): Prisma__UnitsClient<UnitsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Goal_report_values base type for findUnique actions
   */
  export type Goal_report_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     */
    where: Goal_report_valuesWhereUniqueInput
  }

  /**
   * Goal_report_values findUnique
   */
  export interface Goal_report_valuesFindUniqueArgs extends Goal_report_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_report_values findUniqueOrThrow
   */
  export type Goal_report_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     */
    where: Goal_report_valuesWhereUniqueInput
  }


  /**
   * Goal_report_values base type for findFirst actions
   */
  export type Goal_report_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     */
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     */
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_report_values.
     */
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_report_values.
     */
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }

  /**
   * Goal_report_values findFirst
   */
  export interface Goal_report_valuesFindFirstArgs extends Goal_report_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_report_values findFirstOrThrow
   */
  export type Goal_report_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     */
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     */
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_report_values.
     */
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_report_values.
     */
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Goal_report_values findMany
   */
  export type Goal_report_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     */
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     */
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Goal_report_values.
     */
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     */
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Goal_report_values create
   */
  export type Goal_report_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * The data needed to create a Goal_report_values.
     */
    data: XOR<Goal_report_valuesCreateInput, Goal_report_valuesUncheckedCreateInput>
  }


  /**
   * Goal_report_values createMany
   */
  export type Goal_report_valuesCreateManyArgs = {
    /**
     * The data used to create many Goal_report_values.
     */
    data: Enumerable<Goal_report_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Goal_report_values update
   */
  export type Goal_report_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * The data needed to update a Goal_report_values.
     */
    data: XOR<Goal_report_valuesUpdateInput, Goal_report_valuesUncheckedUpdateInput>
    /**
     * Choose, which Goal_report_values to update.
     */
    where: Goal_report_valuesWhereUniqueInput
  }


  /**
   * Goal_report_values updateMany
   */
  export type Goal_report_valuesUpdateManyArgs = {
    /**
     * The data used to update Goal_report_values.
     */
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyInput>
    /**
     * Filter which Goal_report_values to update
     */
    where?: Goal_report_valuesWhereInput
  }


  /**
   * Goal_report_values upsert
   */
  export type Goal_report_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * The filter to search for the Goal_report_values to update in case it exists.
     */
    where: Goal_report_valuesWhereUniqueInput
    /**
     * In case the Goal_report_values found by the `where` argument doesn't exist, create a new Goal_report_values with this data.
     */
    create: XOR<Goal_report_valuesCreateInput, Goal_report_valuesUncheckedCreateInput>
    /**
     * In case the Goal_report_values was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Goal_report_valuesUpdateInput, Goal_report_valuesUncheckedUpdateInput>
  }


  /**
   * Goal_report_values delete
   */
  export type Goal_report_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    /**
     * Filter which Goal_report_values to delete.
     */
    where: Goal_report_valuesWhereUniqueInput
  }


  /**
   * Goal_report_values deleteMany
   */
  export type Goal_report_valuesDeleteManyArgs = {
    /**
     * Filter which Goal_report_values to delete
     */
    where?: Goal_report_valuesWhereInput
  }


  /**
   * Goal_report_values without action
   */
  export type Goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
  }



  /**
   * Model Goal_reports
   */


  export type AggregateGoal_reports = {
    _count: Goal_reportsCountAggregateOutputType | null
    _min: Goal_reportsMinAggregateOutputType | null
    _max: Goal_reportsMaxAggregateOutputType | null
  }

  export type Goal_reportsMinAggregateOutputType = {
    goal_report_id: string | null
    account_id: string | null
    goal_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_reportsMaxAggregateOutputType = {
    goal_report_id: string | null
    account_id: string | null
    goal_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_reportsCountAggregateOutputType = {
    goal_report_id: number
    account_id: number
    goal_id: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type Goal_reportsMinAggregateInputType = {
    goal_report_id?: true
    account_id?: true
    goal_id?: true
    label?: true
    deleted?: true
  }

  export type Goal_reportsMaxAggregateInputType = {
    goal_report_id?: true
    account_id?: true
    goal_id?: true
    label?: true
    deleted?: true
  }

  export type Goal_reportsCountAggregateInputType = {
    goal_report_id?: true
    account_id?: true
    goal_id?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Goal_reportsAggregateArgs = {
    /**
     * Filter which Goal_reports to aggregate.
     */
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     */
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Goal_reports
    **/
    _count?: true | Goal_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Goal_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Goal_reportsMaxAggregateInputType
  }

  export type GetGoal_reportsAggregateType<T extends Goal_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateGoal_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoal_reports[P]>
      : GetScalarType<T[P], AggregateGoal_reports[P]>
  }




  export type Goal_reportsGroupByArgs = {
    where?: Goal_reportsWhereInput
    orderBy?: Enumerable<Goal_reportsOrderByWithAggregationInput>
    by: Goal_reportsScalarFieldEnum[]
    having?: Goal_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Goal_reportsCountAggregateInputType | true
    _min?: Goal_reportsMinAggregateInputType
    _max?: Goal_reportsMaxAggregateInputType
  }


  export type Goal_reportsGroupByOutputType = {
    goal_report_id: string
    account_id: string | null
    goal_id: string | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: Goal_reportsCountAggregateOutputType | null
    _min: Goal_reportsMinAggregateOutputType | null
    _max: Goal_reportsMaxAggregateOutputType | null
  }

  type GetGoal_reportsGroupByPayload<T extends Goal_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Goal_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Goal_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Goal_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Goal_reportsGroupByOutputType[P]>
        }
      >
    >


  export type Goal_reportsSelect = {
    goal_report_id?: boolean
    account_id?: boolean
    goal_id?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    goal_report_values?: boolean | Goal_reports$goal_report_valuesArgs
    accounts?: boolean | AccountsArgs
    goals?: boolean | GoalsArgs
    _count?: boolean | Goal_reportsCountOutputTypeArgs
  }


  export type Goal_reportsInclude = {
    goal_report_values?: boolean | Goal_reports$goal_report_valuesArgs
    accounts?: boolean | AccountsArgs
    goals?: boolean | GoalsArgs
    _count?: boolean | Goal_reportsCountOutputTypeArgs
  }

  export type Goal_reportsGetPayload<S extends boolean | null | undefined | Goal_reportsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goal_reports :
    S extends undefined ? never :
    S extends { include: any } & (Goal_reportsArgs | Goal_reportsFindManyArgs)
    ? Goal_reports  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'goals' ? GoalsGetPayload<S['include'][P]> | null :
        P extends '_count' ? Goal_reportsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Goal_reportsArgs | Goal_reportsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'goals' ? GoalsGetPayload<S['select'][P]> | null :
        P extends '_count' ? Goal_reportsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Goal_reports ? Goal_reports[P] : never
  } 
      : Goal_reports


  type Goal_reportsCountArgs = 
    Omit<Goal_reportsFindManyArgs, 'select' | 'include'> & {
      select?: Goal_reportsCountAggregateInputType | true
    }

  export interface Goal_reportsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Goal_reports that matches the filter.
     * @param {Goal_reportsFindUniqueArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Goal_reportsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Goal_reportsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Goal_reports'> extends True ? Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>> : Prisma__Goal_reportsClient<Goal_reportsGetPayload<T> | null, null>

    /**
     * Find one Goal_reports that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Goal_reportsFindUniqueOrThrowArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Goal_reportsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Goal_reportsFindUniqueOrThrowArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Find the first Goal_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsFindFirstArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Goal_reportsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Goal_reportsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Goal_reports'> extends True ? Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>> : Prisma__Goal_reportsClient<Goal_reportsGetPayload<T> | null, null>

    /**
     * Find the first Goal_reports that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsFindFirstOrThrowArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Goal_reportsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Goal_reportsFindFirstOrThrowArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Find zero or more Goal_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Goal_reports
     * const goal_reports = await prisma.goal_reports.findMany()
     * 
     * // Get first 10 Goal_reports
     * const goal_reports = await prisma.goal_reports.findMany({ take: 10 })
     * 
     * // Only select the `goal_report_id`
     * const goal_reportsWithGoal_report_idOnly = await prisma.goal_reports.findMany({ select: { goal_report_id: true } })
     * 
    **/
    findMany<T extends Goal_reportsFindManyArgs>(
      args?: SelectSubset<T, Goal_reportsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Goal_reportsGetPayload<T>>>

    /**
     * Create a Goal_reports.
     * @param {Goal_reportsCreateArgs} args - Arguments to create a Goal_reports.
     * @example
     * // Create one Goal_reports
     * const Goal_reports = await prisma.goal_reports.create({
     *   data: {
     *     // ... data to create a Goal_reports
     *   }
     * })
     * 
    **/
    create<T extends Goal_reportsCreateArgs>(
      args: SelectSubset<T, Goal_reportsCreateArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Create many Goal_reports.
     *     @param {Goal_reportsCreateManyArgs} args - Arguments to create many Goal_reports.
     *     @example
     *     // Create many Goal_reports
     *     const goal_reports = await prisma.goal_reports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Goal_reportsCreateManyArgs>(
      args?: SelectSubset<T, Goal_reportsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Goal_reports.
     * @param {Goal_reportsDeleteArgs} args - Arguments to delete one Goal_reports.
     * @example
     * // Delete one Goal_reports
     * const Goal_reports = await prisma.goal_reports.delete({
     *   where: {
     *     // ... filter to delete one Goal_reports
     *   }
     * })
     * 
    **/
    delete<T extends Goal_reportsDeleteArgs>(
      args: SelectSubset<T, Goal_reportsDeleteArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Update one Goal_reports.
     * @param {Goal_reportsUpdateArgs} args - Arguments to update one Goal_reports.
     * @example
     * // Update one Goal_reports
     * const goal_reports = await prisma.goal_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Goal_reportsUpdateArgs>(
      args: SelectSubset<T, Goal_reportsUpdateArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Delete zero or more Goal_reports.
     * @param {Goal_reportsDeleteManyArgs} args - Arguments to filter Goal_reports to delete.
     * @example
     * // Delete a few Goal_reports
     * const { count } = await prisma.goal_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Goal_reportsDeleteManyArgs>(
      args?: SelectSubset<T, Goal_reportsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Goal_reports
     * const goal_reports = await prisma.goal_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Goal_reportsUpdateManyArgs>(
      args: SelectSubset<T, Goal_reportsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Goal_reports.
     * @param {Goal_reportsUpsertArgs} args - Arguments to update or create a Goal_reports.
     * @example
     * // Update or create a Goal_reports
     * const goal_reports = await prisma.goal_reports.upsert({
     *   create: {
     *     // ... data to create a Goal_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Goal_reports we want to update
     *   }
     * })
    **/
    upsert<T extends Goal_reportsUpsertArgs>(
      args: SelectSubset<T, Goal_reportsUpsertArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Count the number of Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsCountArgs} args - Arguments to filter Goal_reports to count.
     * @example
     * // Count the number of Goal_reports
     * const count = await prisma.goal_reports.count({
     *   where: {
     *     // ... the filter for the Goal_reports we want to count
     *   }
     * })
    **/
    count<T extends Goal_reportsCountArgs>(
      args?: Subset<T, Goal_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Goal_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Goal_reportsAggregateArgs>(args: Subset<T, Goal_reportsAggregateArgs>): Prisma.PrismaPromise<GetGoal_reportsAggregateType<T>>

    /**
     * Group by Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Goal_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Goal_reportsGroupByArgs['orderBy'] }
        : { orderBy?: Goal_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Goal_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoal_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Goal_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Goal_reportsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    goal_report_values<T extends Goal_reports$goal_report_valuesArgs= {}>(args?: Subset<T, Goal_reports$goal_report_valuesArgs>): Prisma.PrismaPromise<Array<Goal_report_valuesGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    goals<T extends GoalsArgs= {}>(args?: Subset<T, GoalsArgs>): Prisma__GoalsClient<GoalsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Goal_reports base type for findUnique actions
   */
  export type Goal_reportsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     */
    where: Goal_reportsWhereUniqueInput
  }

  /**
   * Goal_reports findUnique
   */
  export interface Goal_reportsFindUniqueArgs extends Goal_reportsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_reports findUniqueOrThrow
   */
  export type Goal_reportsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     */
    where: Goal_reportsWhereUniqueInput
  }


  /**
   * Goal_reports base type for findFirst actions
   */
  export type Goal_reportsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     */
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     */
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_reports.
     */
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_reports.
     */
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }

  /**
   * Goal_reports findFirst
   */
  export interface Goal_reportsFindFirstArgs extends Goal_reportsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_reports findFirstOrThrow
   */
  export type Goal_reportsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     */
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     */
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_reports.
     */
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_reports.
     */
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Goal_reports findMany
   */
  export type Goal_reportsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     */
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     */
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Goal_reports.
     */
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     */
    skip?: number
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Goal_reports create
   */
  export type Goal_reportsCreateArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * The data needed to create a Goal_reports.
     */
    data: XOR<Goal_reportsCreateInput, Goal_reportsUncheckedCreateInput>
  }


  /**
   * Goal_reports createMany
   */
  export type Goal_reportsCreateManyArgs = {
    /**
     * The data used to create many Goal_reports.
     */
    data: Enumerable<Goal_reportsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Goal_reports update
   */
  export type Goal_reportsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * The data needed to update a Goal_reports.
     */
    data: XOR<Goal_reportsUpdateInput, Goal_reportsUncheckedUpdateInput>
    /**
     * Choose, which Goal_reports to update.
     */
    where: Goal_reportsWhereUniqueInput
  }


  /**
   * Goal_reports updateMany
   */
  export type Goal_reportsUpdateManyArgs = {
    /**
     * The data used to update Goal_reports.
     */
    data: XOR<Goal_reportsUpdateManyMutationInput, Goal_reportsUncheckedUpdateManyInput>
    /**
     * Filter which Goal_reports to update
     */
    where?: Goal_reportsWhereInput
  }


  /**
   * Goal_reports upsert
   */
  export type Goal_reportsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * The filter to search for the Goal_reports to update in case it exists.
     */
    where: Goal_reportsWhereUniqueInput
    /**
     * In case the Goal_reports found by the `where` argument doesn't exist, create a new Goal_reports with this data.
     */
    create: XOR<Goal_reportsCreateInput, Goal_reportsUncheckedCreateInput>
    /**
     * In case the Goal_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Goal_reportsUpdateInput, Goal_reportsUncheckedUpdateInput>
  }


  /**
   * Goal_reports delete
   */
  export type Goal_reportsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    /**
     * Filter which Goal_reports to delete.
     */
    where: Goal_reportsWhereUniqueInput
  }


  /**
   * Goal_reports deleteMany
   */
  export type Goal_reportsDeleteManyArgs = {
    /**
     * Filter which Goal_reports to delete
     */
    where?: Goal_reportsWhereInput
  }


  /**
   * Goal_reports.goal_report_values
   */
  export type Goal_reports$goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    cursor?: Goal_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Goal_reports without action
   */
  export type Goal_reportsArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
  }



  /**
   * Model Goals
   */


  export type AggregateGoals = {
    _count: GoalsCountAggregateOutputType | null
    _avg: GoalsAvgAggregateOutputType | null
    _sum: GoalsSumAggregateOutputType | null
    _min: GoalsMinAggregateOutputType | null
    _max: GoalsMaxAggregateOutputType | null
  }

  export type GoalsAvgAggregateOutputType = {
    year: number | null
  }

  export type GoalsSumAggregateOutputType = {
    year: number | null
  }

  export type GoalsMinAggregateOutputType = {
    goal_id: string | null
    account_id: string | null
    subproject_id: string | null
    year: number | null
    name: string | null
    label: string | null
    deleted: boolean | null
  }

  export type GoalsMaxAggregateOutputType = {
    goal_id: string | null
    account_id: string | null
    subproject_id: string | null
    year: number | null
    name: string | null
    label: string | null
    deleted: boolean | null
  }

  export type GoalsCountAggregateOutputType = {
    goal_id: number
    account_id: number
    subproject_id: number
    year: number
    name: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type GoalsAvgAggregateInputType = {
    year?: true
  }

  export type GoalsSumAggregateInputType = {
    year?: true
  }

  export type GoalsMinAggregateInputType = {
    goal_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    name?: true
    label?: true
    deleted?: true
  }

  export type GoalsMaxAggregateInputType = {
    goal_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    name?: true
    label?: true
    deleted?: true
  }

  export type GoalsCountAggregateInputType = {
    goal_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    name?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type GoalsAggregateArgs = {
    /**
     * Filter which Goals to aggregate.
     */
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     */
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Goals
    **/
    _count?: true | GoalsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GoalsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GoalsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GoalsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GoalsMaxAggregateInputType
  }

  export type GetGoalsAggregateType<T extends GoalsAggregateArgs> = {
        [P in keyof T & keyof AggregateGoals]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoals[P]>
      : GetScalarType<T[P], AggregateGoals[P]>
  }




  export type GoalsGroupByArgs = {
    where?: GoalsWhereInput
    orderBy?: Enumerable<GoalsOrderByWithAggregationInput>
    by: GoalsScalarFieldEnum[]
    having?: GoalsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GoalsCountAggregateInputType | true
    _avg?: GoalsAvgAggregateInputType
    _sum?: GoalsSumAggregateInputType
    _min?: GoalsMinAggregateInputType
    _max?: GoalsMaxAggregateInputType
  }


  export type GoalsGroupByOutputType = {
    goal_id: string
    account_id: string | null
    subproject_id: string | null
    year: number | null
    name: string | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: GoalsCountAggregateOutputType | null
    _avg: GoalsAvgAggregateOutputType | null
    _sum: GoalsSumAggregateOutputType | null
    _min: GoalsMinAggregateOutputType | null
    _max: GoalsMaxAggregateOutputType | null
  }

  type GetGoalsGroupByPayload<T extends GoalsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<GoalsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GoalsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GoalsGroupByOutputType[P]>
            : GetScalarType<T[P], GoalsGroupByOutputType[P]>
        }
      >
    >


  export type GoalsSelect = {
    goal_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    year?: boolean
    name?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    goal_reports?: boolean | Goals$goal_reportsArgs
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
    _count?: boolean | GoalsCountOutputTypeArgs
  }


  export type GoalsInclude = {
    goal_reports?: boolean | Goals$goal_reportsArgs
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
    _count?: boolean | GoalsCountOutputTypeArgs
  }

  export type GoalsGetPayload<S extends boolean | null | undefined | GoalsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goals :
    S extends undefined ? never :
    S extends { include: any } & (GoalsArgs | GoalsFindManyArgs)
    ? Goals  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? GoalsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (GoalsArgs | GoalsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? GoalsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Goals ? Goals[P] : never
  } 
      : Goals


  type GoalsCountArgs = 
    Omit<GoalsFindManyArgs, 'select' | 'include'> & {
      select?: GoalsCountAggregateInputType | true
    }

  export interface GoalsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Goals that matches the filter.
     * @param {GoalsFindUniqueArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends GoalsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, GoalsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Goals'> extends True ? Prisma__GoalsClient<GoalsGetPayload<T>> : Prisma__GoalsClient<GoalsGetPayload<T> | null, null>

    /**
     * Find one Goals that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {GoalsFindUniqueOrThrowArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends GoalsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, GoalsFindUniqueOrThrowArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Find the first Goals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsFindFirstArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends GoalsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, GoalsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Goals'> extends True ? Prisma__GoalsClient<GoalsGetPayload<T>> : Prisma__GoalsClient<GoalsGetPayload<T> | null, null>

    /**
     * Find the first Goals that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsFindFirstOrThrowArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends GoalsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, GoalsFindFirstOrThrowArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Find zero or more Goals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Goals
     * const goals = await prisma.goals.findMany()
     * 
     * // Get first 10 Goals
     * const goals = await prisma.goals.findMany({ take: 10 })
     * 
     * // Only select the `goal_id`
     * const goalsWithGoal_idOnly = await prisma.goals.findMany({ select: { goal_id: true } })
     * 
    **/
    findMany<T extends GoalsFindManyArgs>(
      args?: SelectSubset<T, GoalsFindManyArgs>
    ): Prisma.PrismaPromise<Array<GoalsGetPayload<T>>>

    /**
     * Create a Goals.
     * @param {GoalsCreateArgs} args - Arguments to create a Goals.
     * @example
     * // Create one Goals
     * const Goals = await prisma.goals.create({
     *   data: {
     *     // ... data to create a Goals
     *   }
     * })
     * 
    **/
    create<T extends GoalsCreateArgs>(
      args: SelectSubset<T, GoalsCreateArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Create many Goals.
     *     @param {GoalsCreateManyArgs} args - Arguments to create many Goals.
     *     @example
     *     // Create many Goals
     *     const goals = await prisma.goals.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends GoalsCreateManyArgs>(
      args?: SelectSubset<T, GoalsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Goals.
     * @param {GoalsDeleteArgs} args - Arguments to delete one Goals.
     * @example
     * // Delete one Goals
     * const Goals = await prisma.goals.delete({
     *   where: {
     *     // ... filter to delete one Goals
     *   }
     * })
     * 
    **/
    delete<T extends GoalsDeleteArgs>(
      args: SelectSubset<T, GoalsDeleteArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Update one Goals.
     * @param {GoalsUpdateArgs} args - Arguments to update one Goals.
     * @example
     * // Update one Goals
     * const goals = await prisma.goals.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends GoalsUpdateArgs>(
      args: SelectSubset<T, GoalsUpdateArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Delete zero or more Goals.
     * @param {GoalsDeleteManyArgs} args - Arguments to filter Goals to delete.
     * @example
     * // Delete a few Goals
     * const { count } = await prisma.goals.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends GoalsDeleteManyArgs>(
      args?: SelectSubset<T, GoalsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Goals
     * const goals = await prisma.goals.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends GoalsUpdateManyArgs>(
      args: SelectSubset<T, GoalsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Goals.
     * @param {GoalsUpsertArgs} args - Arguments to update or create a Goals.
     * @example
     * // Update or create a Goals
     * const goals = await prisma.goals.upsert({
     *   create: {
     *     // ... data to create a Goals
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Goals we want to update
     *   }
     * })
    **/
    upsert<T extends GoalsUpsertArgs>(
      args: SelectSubset<T, GoalsUpsertArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Count the number of Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsCountArgs} args - Arguments to filter Goals to count.
     * @example
     * // Count the number of Goals
     * const count = await prisma.goals.count({
     *   where: {
     *     // ... the filter for the Goals we want to count
     *   }
     * })
    **/
    count<T extends GoalsCountArgs>(
      args?: Subset<T, GoalsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GoalsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GoalsAggregateArgs>(args: Subset<T, GoalsAggregateArgs>): Prisma.PrismaPromise<GetGoalsAggregateType<T>>

    /**
     * Group by Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GoalsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GoalsGroupByArgs['orderBy'] }
        : { orderBy?: GoalsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GoalsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoalsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Goals.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__GoalsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    goal_reports<T extends Goals$goal_reportsArgs= {}>(args?: Subset<T, Goals$goal_reportsArgs>): Prisma.PrismaPromise<Array<Goal_reportsGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends SubprojectsArgs= {}>(args?: Subset<T, SubprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Goals base type for findUnique actions
   */
  export type GoalsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     */
    where: GoalsWhereUniqueInput
  }

  /**
   * Goals findUnique
   */
  export interface GoalsFindUniqueArgs extends GoalsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goals findUniqueOrThrow
   */
  export type GoalsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     */
    where: GoalsWhereUniqueInput
  }


  /**
   * Goals base type for findFirst actions
   */
  export type GoalsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     */
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     */
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goals.
     */
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goals.
     */
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }

  /**
   * Goals findFirst
   */
  export interface GoalsFindFirstArgs extends GoalsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goals findFirstOrThrow
   */
  export type GoalsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     */
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     */
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goals.
     */
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goals.
     */
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Goals findMany
   */
  export type GoalsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     */
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     */
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Goals.
     */
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     */
    skip?: number
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Goals create
   */
  export type GoalsCreateArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * The data needed to create a Goals.
     */
    data: XOR<GoalsCreateInput, GoalsUncheckedCreateInput>
  }


  /**
   * Goals createMany
   */
  export type GoalsCreateManyArgs = {
    /**
     * The data used to create many Goals.
     */
    data: Enumerable<GoalsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Goals update
   */
  export type GoalsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * The data needed to update a Goals.
     */
    data: XOR<GoalsUpdateInput, GoalsUncheckedUpdateInput>
    /**
     * Choose, which Goals to update.
     */
    where: GoalsWhereUniqueInput
  }


  /**
   * Goals updateMany
   */
  export type GoalsUpdateManyArgs = {
    /**
     * The data used to update Goals.
     */
    data: XOR<GoalsUpdateManyMutationInput, GoalsUncheckedUpdateManyInput>
    /**
     * Filter which Goals to update
     */
    where?: GoalsWhereInput
  }


  /**
   * Goals upsert
   */
  export type GoalsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * The filter to search for the Goals to update in case it exists.
     */
    where: GoalsWhereUniqueInput
    /**
     * In case the Goals found by the `where` argument doesn't exist, create a new Goals with this data.
     */
    create: XOR<GoalsCreateInput, GoalsUncheckedCreateInput>
    /**
     * In case the Goals was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GoalsUpdateInput, GoalsUncheckedUpdateInput>
  }


  /**
   * Goals delete
   */
  export type GoalsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    /**
     * Filter which Goals to delete.
     */
    where: GoalsWhereUniqueInput
  }


  /**
   * Goals deleteMany
   */
  export type GoalsDeleteManyArgs = {
    /**
     * Filter which Goals to delete
     */
    where?: GoalsWhereInput
  }


  /**
   * Goals.goal_reports
   */
  export type Goals$goal_reportsArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     */
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_reportsInclude | null
    where?: Goal_reportsWhereInput
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    cursor?: Goal_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Goals without action
   */
  export type GoalsArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
  }



  /**
   * Model List_values
   */


  export type AggregateList_values = {
    _count: List_valuesCountAggregateOutputType | null
    _min: List_valuesMinAggregateOutputType | null
    _max: List_valuesMaxAggregateOutputType | null
  }

  export type List_valuesMinAggregateOutputType = {
    list_value_id: string | null
    account_id: string | null
    list_id: string | null
    value: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type List_valuesMaxAggregateOutputType = {
    list_value_id: string | null
    account_id: string | null
    list_id: string | null
    value: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type List_valuesCountAggregateOutputType = {
    list_value_id: number
    account_id: number
    list_id: number
    value: number
    obsolete: number
    label: number
    deleted: number
    _all: number
  }


  export type List_valuesMinAggregateInputType = {
    list_value_id?: true
    account_id?: true
    list_id?: true
    value?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type List_valuesMaxAggregateInputType = {
    list_value_id?: true
    account_id?: true
    list_id?: true
    value?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type List_valuesCountAggregateInputType = {
    list_value_id?: true
    account_id?: true
    list_id?: true
    value?: true
    obsolete?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type List_valuesAggregateArgs = {
    /**
     * Filter which List_values to aggregate.
     */
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     */
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned List_values
    **/
    _count?: true | List_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: List_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: List_valuesMaxAggregateInputType
  }

  export type GetList_valuesAggregateType<T extends List_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateList_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateList_values[P]>
      : GetScalarType<T[P], AggregateList_values[P]>
  }




  export type List_valuesGroupByArgs = {
    where?: List_valuesWhereInput
    orderBy?: Enumerable<List_valuesOrderByWithAggregationInput>
    by: List_valuesScalarFieldEnum[]
    having?: List_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: List_valuesCountAggregateInputType | true
    _min?: List_valuesMinAggregateInputType
    _max?: List_valuesMaxAggregateInputType
  }


  export type List_valuesGroupByOutputType = {
    list_value_id: string
    account_id: string | null
    list_id: string | null
    value: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
    _count: List_valuesCountAggregateOutputType | null
    _min: List_valuesMinAggregateOutputType | null
    _max: List_valuesMaxAggregateOutputType | null
  }

  type GetList_valuesGroupByPayload<T extends List_valuesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<List_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof List_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], List_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], List_valuesGroupByOutputType[P]>
        }
      >
    >


  export type List_valuesSelect = {
    list_value_id?: boolean
    account_id?: boolean
    list_id?: boolean
    value?: boolean
    obsolete?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    lists?: boolean | ListsArgs
  }


  export type List_valuesInclude = {
    accounts?: boolean | AccountsArgs
    lists?: boolean | ListsArgs
  }

  export type List_valuesGetPayload<S extends boolean | null | undefined | List_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? List_values :
    S extends undefined ? never :
    S extends { include: any } & (List_valuesArgs | List_valuesFindManyArgs)
    ? List_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (List_valuesArgs | List_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['select'][P]> | null :  P extends keyof List_values ? List_values[P] : never
  } 
      : List_values


  type List_valuesCountArgs = 
    Omit<List_valuesFindManyArgs, 'select' | 'include'> & {
      select?: List_valuesCountAggregateInputType | true
    }

  export interface List_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one List_values that matches the filter.
     * @param {List_valuesFindUniqueArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends List_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, List_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'List_values'> extends True ? Prisma__List_valuesClient<List_valuesGetPayload<T>> : Prisma__List_valuesClient<List_valuesGetPayload<T> | null, null>

    /**
     * Find one List_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {List_valuesFindUniqueOrThrowArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends List_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, List_valuesFindUniqueOrThrowArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Find the first List_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesFindFirstArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends List_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, List_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'List_values'> extends True ? Prisma__List_valuesClient<List_valuesGetPayload<T>> : Prisma__List_valuesClient<List_valuesGetPayload<T> | null, null>

    /**
     * Find the first List_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesFindFirstOrThrowArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends List_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, List_valuesFindFirstOrThrowArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Find zero or more List_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all List_values
     * const list_values = await prisma.list_values.findMany()
     * 
     * // Get first 10 List_values
     * const list_values = await prisma.list_values.findMany({ take: 10 })
     * 
     * // Only select the `list_value_id`
     * const list_valuesWithList_value_idOnly = await prisma.list_values.findMany({ select: { list_value_id: true } })
     * 
    **/
    findMany<T extends List_valuesFindManyArgs>(
      args?: SelectSubset<T, List_valuesFindManyArgs>
    ): Prisma.PrismaPromise<Array<List_valuesGetPayload<T>>>

    /**
     * Create a List_values.
     * @param {List_valuesCreateArgs} args - Arguments to create a List_values.
     * @example
     * // Create one List_values
     * const List_values = await prisma.list_values.create({
     *   data: {
     *     // ... data to create a List_values
     *   }
     * })
     * 
    **/
    create<T extends List_valuesCreateArgs>(
      args: SelectSubset<T, List_valuesCreateArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Create many List_values.
     *     @param {List_valuesCreateManyArgs} args - Arguments to create many List_values.
     *     @example
     *     // Create many List_values
     *     const list_values = await prisma.list_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends List_valuesCreateManyArgs>(
      args?: SelectSubset<T, List_valuesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a List_values.
     * @param {List_valuesDeleteArgs} args - Arguments to delete one List_values.
     * @example
     * // Delete one List_values
     * const List_values = await prisma.list_values.delete({
     *   where: {
     *     // ... filter to delete one List_values
     *   }
     * })
     * 
    **/
    delete<T extends List_valuesDeleteArgs>(
      args: SelectSubset<T, List_valuesDeleteArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Update one List_values.
     * @param {List_valuesUpdateArgs} args - Arguments to update one List_values.
     * @example
     * // Update one List_values
     * const list_values = await prisma.list_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends List_valuesUpdateArgs>(
      args: SelectSubset<T, List_valuesUpdateArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Delete zero or more List_values.
     * @param {List_valuesDeleteManyArgs} args - Arguments to filter List_values to delete.
     * @example
     * // Delete a few List_values
     * const { count } = await prisma.list_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends List_valuesDeleteManyArgs>(
      args?: SelectSubset<T, List_valuesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many List_values
     * const list_values = await prisma.list_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends List_valuesUpdateManyArgs>(
      args: SelectSubset<T, List_valuesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one List_values.
     * @param {List_valuesUpsertArgs} args - Arguments to update or create a List_values.
     * @example
     * // Update or create a List_values
     * const list_values = await prisma.list_values.upsert({
     *   create: {
     *     // ... data to create a List_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the List_values we want to update
     *   }
     * })
    **/
    upsert<T extends List_valuesUpsertArgs>(
      args: SelectSubset<T, List_valuesUpsertArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Count the number of List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesCountArgs} args - Arguments to filter List_values to count.
     * @example
     * // Count the number of List_values
     * const count = await prisma.list_values.count({
     *   where: {
     *     // ... the filter for the List_values we want to count
     *   }
     * })
    **/
    count<T extends List_valuesCountArgs>(
      args?: Subset<T, List_valuesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], List_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends List_valuesAggregateArgs>(args: Subset<T, List_valuesAggregateArgs>): Prisma.PrismaPromise<GetList_valuesAggregateType<T>>

    /**
     * Group by List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends List_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: List_valuesGroupByArgs['orderBy'] }
        : { orderBy?: List_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, List_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetList_valuesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for List_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__List_valuesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    lists<T extends ListsArgs= {}>(args?: Subset<T, ListsArgs>): Prisma__ListsClient<ListsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * List_values base type for findUnique actions
   */
  export type List_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     */
    where: List_valuesWhereUniqueInput
  }

  /**
   * List_values findUnique
   */
  export interface List_valuesFindUniqueArgs extends List_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * List_values findUniqueOrThrow
   */
  export type List_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     */
    where: List_valuesWhereUniqueInput
  }


  /**
   * List_values base type for findFirst actions
   */
  export type List_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     */
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     */
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for List_values.
     */
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of List_values.
     */
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }

  /**
   * List_values findFirst
   */
  export interface List_valuesFindFirstArgs extends List_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * List_values findFirstOrThrow
   */
  export type List_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     */
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     */
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for List_values.
     */
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of List_values.
     */
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * List_values findMany
   */
  export type List_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     */
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     */
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing List_values.
     */
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     */
    skip?: number
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * List_values create
   */
  export type List_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * The data needed to create a List_values.
     */
    data: XOR<List_valuesCreateInput, List_valuesUncheckedCreateInput>
  }


  /**
   * List_values createMany
   */
  export type List_valuesCreateManyArgs = {
    /**
     * The data used to create many List_values.
     */
    data: Enumerable<List_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * List_values update
   */
  export type List_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * The data needed to update a List_values.
     */
    data: XOR<List_valuesUpdateInput, List_valuesUncheckedUpdateInput>
    /**
     * Choose, which List_values to update.
     */
    where: List_valuesWhereUniqueInput
  }


  /**
   * List_values updateMany
   */
  export type List_valuesUpdateManyArgs = {
    /**
     * The data used to update List_values.
     */
    data: XOR<List_valuesUpdateManyMutationInput, List_valuesUncheckedUpdateManyInput>
    /**
     * Filter which List_values to update
     */
    where?: List_valuesWhereInput
  }


  /**
   * List_values upsert
   */
  export type List_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * The filter to search for the List_values to update in case it exists.
     */
    where: List_valuesWhereUniqueInput
    /**
     * In case the List_values found by the `where` argument doesn't exist, create a new List_values with this data.
     */
    create: XOR<List_valuesCreateInput, List_valuesUncheckedCreateInput>
    /**
     * In case the List_values was found with the provided `where` argument, update it with this data.
     */
    update: XOR<List_valuesUpdateInput, List_valuesUncheckedUpdateInput>
  }


  /**
   * List_values delete
   */
  export type List_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    /**
     * Filter which List_values to delete.
     */
    where: List_valuesWhereUniqueInput
  }


  /**
   * List_values deleteMany
   */
  export type List_valuesDeleteManyArgs = {
    /**
     * Filter which List_values to delete
     */
    where?: List_valuesWhereInput
  }


  /**
   * List_values without action
   */
  export type List_valuesArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
  }



  /**
   * Model Lists
   */


  export type AggregateLists = {
    _count: ListsCountAggregateOutputType | null
    _min: ListsMinAggregateOutputType | null
    _max: ListsMaxAggregateOutputType | null
  }

  export type ListsMinAggregateOutputType = {
    list_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type ListsMaxAggregateOutputType = {
    list_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type ListsCountAggregateOutputType = {
    list_id: number
    account_id: number
    project_id: number
    name: number
    data: number
    obsolete: number
    label: number
    deleted: number
    _all: number
  }


  export type ListsMinAggregateInputType = {
    list_id?: true
    account_id?: true
    project_id?: true
    name?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type ListsMaxAggregateInputType = {
    list_id?: true
    account_id?: true
    project_id?: true
    name?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type ListsCountAggregateInputType = {
    list_id?: true
    account_id?: true
    project_id?: true
    name?: true
    data?: true
    obsolete?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type ListsAggregateArgs = {
    /**
     * Filter which Lists to aggregate.
     */
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     */
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Lists
    **/
    _count?: true | ListsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListsMaxAggregateInputType
  }

  export type GetListsAggregateType<T extends ListsAggregateArgs> = {
        [P in keyof T & keyof AggregateLists]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLists[P]>
      : GetScalarType<T[P], AggregateLists[P]>
  }




  export type ListsGroupByArgs = {
    where?: ListsWhereInput
    orderBy?: Enumerable<ListsOrderByWithAggregationInput>
    by: ListsScalarFieldEnum[]
    having?: ListsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListsCountAggregateInputType | true
    _min?: ListsMinAggregateInputType
    _max?: ListsMaxAggregateInputType
  }


  export type ListsGroupByOutputType = {
    list_id: string
    account_id: string | null
    project_id: string | null
    name: string | null
    data: JsonValue | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
    _count: ListsCountAggregateOutputType | null
    _min: ListsMinAggregateOutputType | null
    _max: ListsMaxAggregateOutputType | null
  }

  type GetListsGroupByPayload<T extends ListsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<ListsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListsGroupByOutputType[P]>
            : GetScalarType<T[P], ListsGroupByOutputType[P]>
        }
      >
    >


  export type ListsSelect = {
    list_id?: boolean
    account_id?: boolean
    project_id?: boolean
    name?: boolean
    data?: boolean
    obsolete?: boolean
    label?: boolean
    deleted?: boolean
    fields?: boolean | Lists$fieldsArgs
    list_values?: boolean | Lists$list_valuesArgs
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    units?: boolean | Lists$unitsArgs
    _count?: boolean | ListsCountOutputTypeArgs
  }


  export type ListsInclude = {
    fields?: boolean | Lists$fieldsArgs
    list_values?: boolean | Lists$list_valuesArgs
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    units?: boolean | Lists$unitsArgs
    _count?: boolean | ListsCountOutputTypeArgs
  }

  export type ListsGetPayload<S extends boolean | null | undefined | ListsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Lists :
    S extends undefined ? never :
    S extends { include: any } & (ListsArgs | ListsFindManyArgs)
    ? Lists  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['include'][P]>>  :
        P extends 'list_values' ? Array < List_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'units' ? Array < UnitsGetPayload<S['include'][P]>>  :
        P extends '_count' ? ListsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ListsArgs | ListsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['select'][P]>>  :
        P extends 'list_values' ? Array < List_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'units' ? Array < UnitsGetPayload<S['select'][P]>>  :
        P extends '_count' ? ListsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Lists ? Lists[P] : never
  } 
      : Lists


  type ListsCountArgs = 
    Omit<ListsFindManyArgs, 'select' | 'include'> & {
      select?: ListsCountAggregateInputType | true
    }

  export interface ListsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Lists that matches the filter.
     * @param {ListsFindUniqueArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ListsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ListsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Lists'> extends True ? Prisma__ListsClient<ListsGetPayload<T>> : Prisma__ListsClient<ListsGetPayload<T> | null, null>

    /**
     * Find one Lists that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ListsFindUniqueOrThrowArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ListsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ListsFindUniqueOrThrowArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Find the first Lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsFindFirstArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ListsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ListsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Lists'> extends True ? Prisma__ListsClient<ListsGetPayload<T>> : Prisma__ListsClient<ListsGetPayload<T> | null, null>

    /**
     * Find the first Lists that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsFindFirstOrThrowArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ListsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ListsFindFirstOrThrowArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Find zero or more Lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lists
     * const lists = await prisma.lists.findMany()
     * 
     * // Get first 10 Lists
     * const lists = await prisma.lists.findMany({ take: 10 })
     * 
     * // Only select the `list_id`
     * const listsWithList_idOnly = await prisma.lists.findMany({ select: { list_id: true } })
     * 
    **/
    findMany<T extends ListsFindManyArgs>(
      args?: SelectSubset<T, ListsFindManyArgs>
    ): Prisma.PrismaPromise<Array<ListsGetPayload<T>>>

    /**
     * Create a Lists.
     * @param {ListsCreateArgs} args - Arguments to create a Lists.
     * @example
     * // Create one Lists
     * const Lists = await prisma.lists.create({
     *   data: {
     *     // ... data to create a Lists
     *   }
     * })
     * 
    **/
    create<T extends ListsCreateArgs>(
      args: SelectSubset<T, ListsCreateArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Create many Lists.
     *     @param {ListsCreateManyArgs} args - Arguments to create many Lists.
     *     @example
     *     // Create many Lists
     *     const lists = await prisma.lists.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ListsCreateManyArgs>(
      args?: SelectSubset<T, ListsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Lists.
     * @param {ListsDeleteArgs} args - Arguments to delete one Lists.
     * @example
     * // Delete one Lists
     * const Lists = await prisma.lists.delete({
     *   where: {
     *     // ... filter to delete one Lists
     *   }
     * })
     * 
    **/
    delete<T extends ListsDeleteArgs>(
      args: SelectSubset<T, ListsDeleteArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Update one Lists.
     * @param {ListsUpdateArgs} args - Arguments to update one Lists.
     * @example
     * // Update one Lists
     * const lists = await prisma.lists.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ListsUpdateArgs>(
      args: SelectSubset<T, ListsUpdateArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Delete zero or more Lists.
     * @param {ListsDeleteManyArgs} args - Arguments to filter Lists to delete.
     * @example
     * // Delete a few Lists
     * const { count } = await prisma.lists.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ListsDeleteManyArgs>(
      args?: SelectSubset<T, ListsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lists
     * const lists = await prisma.lists.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ListsUpdateManyArgs>(
      args: SelectSubset<T, ListsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Lists.
     * @param {ListsUpsertArgs} args - Arguments to update or create a Lists.
     * @example
     * // Update or create a Lists
     * const lists = await prisma.lists.upsert({
     *   create: {
     *     // ... data to create a Lists
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lists we want to update
     *   }
     * })
    **/
    upsert<T extends ListsUpsertArgs>(
      args: SelectSubset<T, ListsUpsertArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Count the number of Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsCountArgs} args - Arguments to filter Lists to count.
     * @example
     * // Count the number of Lists
     * const count = await prisma.lists.count({
     *   where: {
     *     // ... the filter for the Lists we want to count
     *   }
     * })
    **/
    count<T extends ListsCountArgs>(
      args?: Subset<T, ListsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListsAggregateArgs>(args: Subset<T, ListsAggregateArgs>): Prisma.PrismaPromise<GetListsAggregateType<T>>

    /**
     * Group by Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListsGroupByArgs['orderBy'] }
        : { orderBy?: ListsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Lists.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ListsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    fields<T extends Lists$fieldsArgs= {}>(args?: Subset<T, Lists$fieldsArgs>): Prisma.PrismaPromise<Array<FieldsGetPayload<T>>| Null>;

    list_values<T extends Lists$list_valuesArgs= {}>(args?: Subset<T, Lists$list_valuesArgs>): Prisma.PrismaPromise<Array<List_valuesGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    units<T extends Lists$unitsArgs= {}>(args?: Subset<T, Lists$unitsArgs>): Prisma.PrismaPromise<Array<UnitsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Lists base type for findUnique actions
   */
  export type ListsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     */
    where: ListsWhereUniqueInput
  }

  /**
   * Lists findUnique
   */
  export interface ListsFindUniqueArgs extends ListsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Lists findUniqueOrThrow
   */
  export type ListsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     */
    where: ListsWhereUniqueInput
  }


  /**
   * Lists base type for findFirst actions
   */
  export type ListsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     */
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     */
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lists.
     */
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lists.
     */
    distinct?: Enumerable<ListsScalarFieldEnum>
  }

  /**
   * Lists findFirst
   */
  export interface ListsFindFirstArgs extends ListsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Lists findFirstOrThrow
   */
  export type ListsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     */
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     */
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lists.
     */
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lists.
     */
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Lists findMany
   */
  export type ListsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     */
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     */
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Lists.
     */
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     */
    skip?: number
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Lists create
   */
  export type ListsCreateArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * The data needed to create a Lists.
     */
    data: XOR<ListsCreateInput, ListsUncheckedCreateInput>
  }


  /**
   * Lists createMany
   */
  export type ListsCreateManyArgs = {
    /**
     * The data used to create many Lists.
     */
    data: Enumerable<ListsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Lists update
   */
  export type ListsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * The data needed to update a Lists.
     */
    data: XOR<ListsUpdateInput, ListsUncheckedUpdateInput>
    /**
     * Choose, which Lists to update.
     */
    where: ListsWhereUniqueInput
  }


  /**
   * Lists updateMany
   */
  export type ListsUpdateManyArgs = {
    /**
     * The data used to update Lists.
     */
    data: XOR<ListsUpdateManyMutationInput, ListsUncheckedUpdateManyInput>
    /**
     * Filter which Lists to update
     */
    where?: ListsWhereInput
  }


  /**
   * Lists upsert
   */
  export type ListsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * The filter to search for the Lists to update in case it exists.
     */
    where: ListsWhereUniqueInput
    /**
     * In case the Lists found by the `where` argument doesn't exist, create a new Lists with this data.
     */
    create: XOR<ListsCreateInput, ListsUncheckedCreateInput>
    /**
     * In case the Lists was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListsUpdateInput, ListsUncheckedUpdateInput>
  }


  /**
   * Lists delete
   */
  export type ListsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    /**
     * Filter which Lists to delete.
     */
    where: ListsWhereUniqueInput
  }


  /**
   * Lists deleteMany
   */
  export type ListsDeleteManyArgs = {
    /**
     * Filter which Lists to delete
     */
    where?: ListsWhereInput
  }


  /**
   * Lists.fields
   */
  export type Lists$fieldsArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    where?: FieldsWhereInput
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    cursor?: FieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }


  /**
   * Lists.list_values
   */
  export type Lists$list_valuesArgs = {
    /**
     * Select specific fields to fetch from the List_values
     */
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: List_valuesInclude | null
    where?: List_valuesWhereInput
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    cursor?: List_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * Lists.units
   */
  export type Lists$unitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    cursor?: UnitsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Lists without action
   */
  export type ListsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
  }



  /**
   * Model Messages
   */


  export type AggregateMessages = {
    _count: MessagesCountAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  export type MessagesMinAggregateOutputType = {
    message_id: string | null
    label: string | null
    date: Date | null
    message: string | null
  }

  export type MessagesMaxAggregateOutputType = {
    message_id: string | null
    label: string | null
    date: Date | null
    message: string | null
  }

  export type MessagesCountAggregateOutputType = {
    message_id: number
    label: number
    date: number
    message: number
    _all: number
  }


  export type MessagesMinAggregateInputType = {
    message_id?: true
    label?: true
    date?: true
    message?: true
  }

  export type MessagesMaxAggregateInputType = {
    message_id?: true
    label?: true
    date?: true
    message?: true
  }

  export type MessagesCountAggregateInputType = {
    message_id?: true
    label?: true
    date?: true
    message?: true
    _all?: true
  }

  export type MessagesAggregateArgs = {
    /**
     * Filter which Messages to aggregate.
     */
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessagesMaxAggregateInputType
  }

  export type GetMessagesAggregateType<T extends MessagesAggregateArgs> = {
        [P in keyof T & keyof AggregateMessages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessages[P]>
      : GetScalarType<T[P], AggregateMessages[P]>
  }




  export type MessagesGroupByArgs = {
    where?: MessagesWhereInput
    orderBy?: Enumerable<MessagesOrderByWithAggregationInput>
    by: MessagesScalarFieldEnum[]
    having?: MessagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessagesCountAggregateInputType | true
    _min?: MessagesMinAggregateInputType
    _max?: MessagesMaxAggregateInputType
  }


  export type MessagesGroupByOutputType = {
    message_id: string
    label: string | null
    date: Date | null
    message: string | null
    _count: MessagesCountAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  type GetMessagesGroupByPayload<T extends MessagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<MessagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessagesGroupByOutputType[P]>
            : GetScalarType<T[P], MessagesGroupByOutputType[P]>
        }
      >
    >


  export type MessagesSelect = {
    message_id?: boolean
    label?: boolean
    date?: boolean
    message?: boolean
    user_messages?: boolean | Messages$user_messagesArgs
    _count?: boolean | MessagesCountOutputTypeArgs
  }


  export type MessagesInclude = {
    user_messages?: boolean | Messages$user_messagesArgs
    _count?: boolean | MessagesCountOutputTypeArgs
  }

  export type MessagesGetPayload<S extends boolean | null | undefined | MessagesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Messages :
    S extends undefined ? never :
    S extends { include: any } & (MessagesArgs | MessagesFindManyArgs)
    ? Messages  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['include'][P]>>  :
        P extends '_count' ? MessagesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (MessagesArgs | MessagesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['select'][P]>>  :
        P extends '_count' ? MessagesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Messages ? Messages[P] : never
  } 
      : Messages


  type MessagesCountArgs = 
    Omit<MessagesFindManyArgs, 'select' | 'include'> & {
      select?: MessagesCountAggregateInputType | true
    }

  export interface MessagesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Messages that matches the filter.
     * @param {MessagesFindUniqueArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MessagesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, MessagesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Messages'> extends True ? Prisma__MessagesClient<MessagesGetPayload<T>> : Prisma__MessagesClient<MessagesGetPayload<T> | null, null>

    /**
     * Find one Messages that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {MessagesFindUniqueOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends MessagesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, MessagesFindUniqueOrThrowArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Find the first Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesFindFirstArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MessagesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, MessagesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Messages'> extends True ? Prisma__MessagesClient<MessagesGetPayload<T>> : Prisma__MessagesClient<MessagesGetPayload<T> | null, null>

    /**
     * Find the first Messages that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesFindFirstOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends MessagesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, MessagesFindFirstOrThrowArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.messages.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.messages.findMany({ take: 10 })
     * 
     * // Only select the `message_id`
     * const messagesWithMessage_idOnly = await prisma.messages.findMany({ select: { message_id: true } })
     * 
    **/
    findMany<T extends MessagesFindManyArgs>(
      args?: SelectSubset<T, MessagesFindManyArgs>
    ): Prisma.PrismaPromise<Array<MessagesGetPayload<T>>>

    /**
     * Create a Messages.
     * @param {MessagesCreateArgs} args - Arguments to create a Messages.
     * @example
     * // Create one Messages
     * const Messages = await prisma.messages.create({
     *   data: {
     *     // ... data to create a Messages
     *   }
     * })
     * 
    **/
    create<T extends MessagesCreateArgs>(
      args: SelectSubset<T, MessagesCreateArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Create many Messages.
     *     @param {MessagesCreateManyArgs} args - Arguments to create many Messages.
     *     @example
     *     // Create many Messages
     *     const messages = await prisma.messages.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends MessagesCreateManyArgs>(
      args?: SelectSubset<T, MessagesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Messages.
     * @param {MessagesDeleteArgs} args - Arguments to delete one Messages.
     * @example
     * // Delete one Messages
     * const Messages = await prisma.messages.delete({
     *   where: {
     *     // ... filter to delete one Messages
     *   }
     * })
     * 
    **/
    delete<T extends MessagesDeleteArgs>(
      args: SelectSubset<T, MessagesDeleteArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Update one Messages.
     * @param {MessagesUpdateArgs} args - Arguments to update one Messages.
     * @example
     * // Update one Messages
     * const messages = await prisma.messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MessagesUpdateArgs>(
      args: SelectSubset<T, MessagesUpdateArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Delete zero or more Messages.
     * @param {MessagesDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MessagesDeleteManyArgs>(
      args?: SelectSubset<T, MessagesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MessagesUpdateManyArgs>(
      args: SelectSubset<T, MessagesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Messages.
     * @param {MessagesUpsertArgs} args - Arguments to update or create a Messages.
     * @example
     * // Update or create a Messages
     * const messages = await prisma.messages.upsert({
     *   create: {
     *     // ... data to create a Messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Messages we want to update
     *   }
     * })
    **/
    upsert<T extends MessagesUpsertArgs>(
      args: SelectSubset<T, MessagesUpsertArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.messages.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessagesCountArgs>(
      args?: Subset<T, MessagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessagesAggregateArgs>(args: Subset<T, MessagesAggregateArgs>): Prisma.PrismaPromise<GetMessagesAggregateType<T>>

    /**
     * Group by Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessagesGroupByArgs['orderBy'] }
        : { orderBy?: MessagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__MessagesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    user_messages<T extends Messages$user_messagesArgs= {}>(args?: Subset<T, Messages$user_messagesArgs>): Prisma.PrismaPromise<Array<User_messagesGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Messages base type for findUnique actions
   */
  export type MessagesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     */
    where: MessagesWhereUniqueInput
  }

  /**
   * Messages findUnique
   */
  export interface MessagesFindUniqueArgs extends MessagesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Messages findUniqueOrThrow
   */
  export type MessagesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     */
    where: MessagesWhereUniqueInput
  }


  /**
   * Messages base type for findFirst actions
   */
  export type MessagesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: Enumerable<MessagesScalarFieldEnum>
  }

  /**
   * Messages findFirst
   */
  export interface MessagesFindFirstArgs extends MessagesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Messages findFirstOrThrow
   */
  export type MessagesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: Enumerable<MessagesScalarFieldEnum>
  }


  /**
   * Messages findMany
   */
  export type MessagesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: Enumerable<MessagesScalarFieldEnum>
  }


  /**
   * Messages create
   */
  export type MessagesCreateArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * The data needed to create a Messages.
     */
    data: XOR<MessagesCreateInput, MessagesUncheckedCreateInput>
  }


  /**
   * Messages createMany
   */
  export type MessagesCreateManyArgs = {
    /**
     * The data used to create many Messages.
     */
    data: Enumerable<MessagesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Messages update
   */
  export type MessagesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * The data needed to update a Messages.
     */
    data: XOR<MessagesUpdateInput, MessagesUncheckedUpdateInput>
    /**
     * Choose, which Messages to update.
     */
    where: MessagesWhereUniqueInput
  }


  /**
   * Messages updateMany
   */
  export type MessagesUpdateManyArgs = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessagesUpdateManyMutationInput, MessagesUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessagesWhereInput
  }


  /**
   * Messages upsert
   */
  export type MessagesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * The filter to search for the Messages to update in case it exists.
     */
    where: MessagesWhereUniqueInput
    /**
     * In case the Messages found by the `where` argument doesn't exist, create a new Messages with this data.
     */
    create: XOR<MessagesCreateInput, MessagesUncheckedCreateInput>
    /**
     * In case the Messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessagesUpdateInput, MessagesUncheckedUpdateInput>
  }


  /**
   * Messages delete
   */
  export type MessagesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
    /**
     * Filter which Messages to delete.
     */
    where: MessagesWhereUniqueInput
  }


  /**
   * Messages deleteMany
   */
  export type MessagesDeleteManyArgs = {
    /**
     * Filter which Messages to delete
     */
    where?: MessagesWhereInput
  }


  /**
   * Messages.user_messages
   */
  export type Messages$user_messagesArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    where?: User_messagesWhereInput
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    cursor?: User_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * Messages without action
   */
  export type MessagesArgs = {
    /**
     * Select specific fields to fetch from the Messages
     */
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: MessagesInclude | null
  }



  /**
   * Model Observation_sources
   */


  export type AggregateObservation_sources = {
    _count: Observation_sourcesCountAggregateOutputType | null
    _min: Observation_sourcesMinAggregateOutputType | null
    _max: Observation_sourcesMaxAggregateOutputType | null
  }

  export type Observation_sourcesMinAggregateOutputType = {
    observation_source_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Observation_sourcesMaxAggregateOutputType = {
    observation_source_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Observation_sourcesCountAggregateOutputType = {
    observation_source_id: number
    account_id: number
    project_id: number
    name: number
    url: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type Observation_sourcesMinAggregateInputType = {
    observation_source_id?: true
    account_id?: true
    project_id?: true
    name?: true
    url?: true
    label?: true
    deleted?: true
  }

  export type Observation_sourcesMaxAggregateInputType = {
    observation_source_id?: true
    account_id?: true
    project_id?: true
    name?: true
    url?: true
    label?: true
    deleted?: true
  }

  export type Observation_sourcesCountAggregateInputType = {
    observation_source_id?: true
    account_id?: true
    project_id?: true
    name?: true
    url?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Observation_sourcesAggregateArgs = {
    /**
     * Filter which Observation_sources to aggregate.
     */
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     */
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Observation_sources
    **/
    _count?: true | Observation_sourcesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Observation_sourcesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Observation_sourcesMaxAggregateInputType
  }

  export type GetObservation_sourcesAggregateType<T extends Observation_sourcesAggregateArgs> = {
        [P in keyof T & keyof AggregateObservation_sources]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateObservation_sources[P]>
      : GetScalarType<T[P], AggregateObservation_sources[P]>
  }




  export type Observation_sourcesGroupByArgs = {
    where?: Observation_sourcesWhereInput
    orderBy?: Enumerable<Observation_sourcesOrderByWithAggregationInput>
    by: Observation_sourcesScalarFieldEnum[]
    having?: Observation_sourcesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Observation_sourcesCountAggregateInputType | true
    _min?: Observation_sourcesMinAggregateInputType
    _max?: Observation_sourcesMaxAggregateInputType
  }


  export type Observation_sourcesGroupByOutputType = {
    observation_source_id: string
    account_id: string | null
    project_id: string | null
    name: string | null
    url: string | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: Observation_sourcesCountAggregateOutputType | null
    _min: Observation_sourcesMinAggregateOutputType | null
    _max: Observation_sourcesMaxAggregateOutputType | null
  }

  type GetObservation_sourcesGroupByPayload<T extends Observation_sourcesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Observation_sourcesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Observation_sourcesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Observation_sourcesGroupByOutputType[P]>
            : GetScalarType<T[P], Observation_sourcesGroupByOutputType[P]>
        }
      >
    >


  export type Observation_sourcesSelect = {
    observation_source_id?: boolean
    account_id?: boolean
    project_id?: boolean
    name?: boolean
    url?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    observations?: boolean | Observation_sources$observationsArgs
    _count?: boolean | Observation_sourcesCountOutputTypeArgs
  }


  export type Observation_sourcesInclude = {
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    observations?: boolean | Observation_sources$observationsArgs
    _count?: boolean | Observation_sourcesCountOutputTypeArgs
  }

  export type Observation_sourcesGetPayload<S extends boolean | null | undefined | Observation_sourcesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Observation_sources :
    S extends undefined ? never :
    S extends { include: any } & (Observation_sourcesArgs | Observation_sourcesFindManyArgs)
    ? Observation_sources  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'observations' ? Array < ObservationsGetPayload<S['include'][P]>>  :
        P extends '_count' ? Observation_sourcesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Observation_sourcesArgs | Observation_sourcesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'observations' ? Array < ObservationsGetPayload<S['select'][P]>>  :
        P extends '_count' ? Observation_sourcesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Observation_sources ? Observation_sources[P] : never
  } 
      : Observation_sources


  type Observation_sourcesCountArgs = 
    Omit<Observation_sourcesFindManyArgs, 'select' | 'include'> & {
      select?: Observation_sourcesCountAggregateInputType | true
    }

  export interface Observation_sourcesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Observation_sources that matches the filter.
     * @param {Observation_sourcesFindUniqueArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Observation_sourcesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Observation_sourcesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Observation_sources'> extends True ? Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>> : Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T> | null, null>

    /**
     * Find one Observation_sources that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Observation_sourcesFindUniqueOrThrowArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Observation_sourcesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Observation_sourcesFindUniqueOrThrowArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Find the first Observation_sources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesFindFirstArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Observation_sourcesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Observation_sourcesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Observation_sources'> extends True ? Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>> : Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T> | null, null>

    /**
     * Find the first Observation_sources that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesFindFirstOrThrowArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Observation_sourcesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Observation_sourcesFindFirstOrThrowArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Find zero or more Observation_sources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Observation_sources
     * const observation_sources = await prisma.observation_sources.findMany()
     * 
     * // Get first 10 Observation_sources
     * const observation_sources = await prisma.observation_sources.findMany({ take: 10 })
     * 
     * // Only select the `observation_source_id`
     * const observation_sourcesWithObservation_source_idOnly = await prisma.observation_sources.findMany({ select: { observation_source_id: true } })
     * 
    **/
    findMany<T extends Observation_sourcesFindManyArgs>(
      args?: SelectSubset<T, Observation_sourcesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Observation_sourcesGetPayload<T>>>

    /**
     * Create a Observation_sources.
     * @param {Observation_sourcesCreateArgs} args - Arguments to create a Observation_sources.
     * @example
     * // Create one Observation_sources
     * const Observation_sources = await prisma.observation_sources.create({
     *   data: {
     *     // ... data to create a Observation_sources
     *   }
     * })
     * 
    **/
    create<T extends Observation_sourcesCreateArgs>(
      args: SelectSubset<T, Observation_sourcesCreateArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Create many Observation_sources.
     *     @param {Observation_sourcesCreateManyArgs} args - Arguments to create many Observation_sources.
     *     @example
     *     // Create many Observation_sources
     *     const observation_sources = await prisma.observation_sources.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Observation_sourcesCreateManyArgs>(
      args?: SelectSubset<T, Observation_sourcesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Observation_sources.
     * @param {Observation_sourcesDeleteArgs} args - Arguments to delete one Observation_sources.
     * @example
     * // Delete one Observation_sources
     * const Observation_sources = await prisma.observation_sources.delete({
     *   where: {
     *     // ... filter to delete one Observation_sources
     *   }
     * })
     * 
    **/
    delete<T extends Observation_sourcesDeleteArgs>(
      args: SelectSubset<T, Observation_sourcesDeleteArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Update one Observation_sources.
     * @param {Observation_sourcesUpdateArgs} args - Arguments to update one Observation_sources.
     * @example
     * // Update one Observation_sources
     * const observation_sources = await prisma.observation_sources.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Observation_sourcesUpdateArgs>(
      args: SelectSubset<T, Observation_sourcesUpdateArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Delete zero or more Observation_sources.
     * @param {Observation_sourcesDeleteManyArgs} args - Arguments to filter Observation_sources to delete.
     * @example
     * // Delete a few Observation_sources
     * const { count } = await prisma.observation_sources.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Observation_sourcesDeleteManyArgs>(
      args?: SelectSubset<T, Observation_sourcesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Observation_sources
     * const observation_sources = await prisma.observation_sources.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Observation_sourcesUpdateManyArgs>(
      args: SelectSubset<T, Observation_sourcesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Observation_sources.
     * @param {Observation_sourcesUpsertArgs} args - Arguments to update or create a Observation_sources.
     * @example
     * // Update or create a Observation_sources
     * const observation_sources = await prisma.observation_sources.upsert({
     *   create: {
     *     // ... data to create a Observation_sources
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Observation_sources we want to update
     *   }
     * })
    **/
    upsert<T extends Observation_sourcesUpsertArgs>(
      args: SelectSubset<T, Observation_sourcesUpsertArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Count the number of Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesCountArgs} args - Arguments to filter Observation_sources to count.
     * @example
     * // Count the number of Observation_sources
     * const count = await prisma.observation_sources.count({
     *   where: {
     *     // ... the filter for the Observation_sources we want to count
     *   }
     * })
    **/
    count<T extends Observation_sourcesCountArgs>(
      args?: Subset<T, Observation_sourcesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Observation_sourcesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Observation_sourcesAggregateArgs>(args: Subset<T, Observation_sourcesAggregateArgs>): Prisma.PrismaPromise<GetObservation_sourcesAggregateType<T>>

    /**
     * Group by Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Observation_sourcesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Observation_sourcesGroupByArgs['orderBy'] }
        : { orderBy?: Observation_sourcesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Observation_sourcesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetObservation_sourcesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Observation_sources.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Observation_sourcesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    observations<T extends Observation_sources$observationsArgs= {}>(args?: Subset<T, Observation_sources$observationsArgs>): Prisma.PrismaPromise<Array<ObservationsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Observation_sources base type for findUnique actions
   */
  export type Observation_sourcesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     */
    where: Observation_sourcesWhereUniqueInput
  }

  /**
   * Observation_sources findUnique
   */
  export interface Observation_sourcesFindUniqueArgs extends Observation_sourcesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Observation_sources findUniqueOrThrow
   */
  export type Observation_sourcesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     */
    where: Observation_sourcesWhereUniqueInput
  }


  /**
   * Observation_sources base type for findFirst actions
   */
  export type Observation_sourcesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     */
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     */
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Observation_sources.
     */
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Observation_sources.
     */
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }

  /**
   * Observation_sources findFirst
   */
  export interface Observation_sourcesFindFirstArgs extends Observation_sourcesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Observation_sources findFirstOrThrow
   */
  export type Observation_sourcesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     */
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     */
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Observation_sources.
     */
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Observation_sources.
     */
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Observation_sources findMany
   */
  export type Observation_sourcesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     */
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     */
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Observation_sources.
     */
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     */
    skip?: number
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Observation_sources create
   */
  export type Observation_sourcesCreateArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * The data needed to create a Observation_sources.
     */
    data: XOR<Observation_sourcesCreateInput, Observation_sourcesUncheckedCreateInput>
  }


  /**
   * Observation_sources createMany
   */
  export type Observation_sourcesCreateManyArgs = {
    /**
     * The data used to create many Observation_sources.
     */
    data: Enumerable<Observation_sourcesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Observation_sources update
   */
  export type Observation_sourcesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * The data needed to update a Observation_sources.
     */
    data: XOR<Observation_sourcesUpdateInput, Observation_sourcesUncheckedUpdateInput>
    /**
     * Choose, which Observation_sources to update.
     */
    where: Observation_sourcesWhereUniqueInput
  }


  /**
   * Observation_sources updateMany
   */
  export type Observation_sourcesUpdateManyArgs = {
    /**
     * The data used to update Observation_sources.
     */
    data: XOR<Observation_sourcesUpdateManyMutationInput, Observation_sourcesUncheckedUpdateManyInput>
    /**
     * Filter which Observation_sources to update
     */
    where?: Observation_sourcesWhereInput
  }


  /**
   * Observation_sources upsert
   */
  export type Observation_sourcesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * The filter to search for the Observation_sources to update in case it exists.
     */
    where: Observation_sourcesWhereUniqueInput
    /**
     * In case the Observation_sources found by the `where` argument doesn't exist, create a new Observation_sources with this data.
     */
    create: XOR<Observation_sourcesCreateInput, Observation_sourcesUncheckedCreateInput>
    /**
     * In case the Observation_sources was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Observation_sourcesUpdateInput, Observation_sourcesUncheckedUpdateInput>
  }


  /**
   * Observation_sources delete
   */
  export type Observation_sourcesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    /**
     * Filter which Observation_sources to delete.
     */
    where: Observation_sourcesWhereUniqueInput
  }


  /**
   * Observation_sources deleteMany
   */
  export type Observation_sourcesDeleteManyArgs = {
    /**
     * Filter which Observation_sources to delete
     */
    where?: Observation_sourcesWhereInput
  }


  /**
   * Observation_sources.observations
   */
  export type Observation_sources$observationsArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    where?: ObservationsWhereInput
    orderBy?: Enumerable<ObservationsOrderByWithRelationInput>
    cursor?: ObservationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ObservationsScalarFieldEnum>
  }


  /**
   * Observation_sources without action
   */
  export type Observation_sourcesArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
  }



  /**
   * Model Observations
   */


  export type AggregateObservations = {
    _count: ObservationsCountAggregateOutputType | null
    _min: ObservationsMinAggregateOutputType | null
    _max: ObservationsMaxAggregateOutputType | null
  }

  export type ObservationsMinAggregateOutputType = {
    observation_id: string | null
    account_id: string | null
    observation_source_id: string | null
    place_id: string | null
    id_in_source: string | null
    url: string | null
    date: Date | null
    author: string | null
    label: string | null
    deleted: boolean | null
  }

  export type ObservationsMaxAggregateOutputType = {
    observation_id: string | null
    account_id: string | null
    observation_source_id: string | null
    place_id: string | null
    id_in_source: string | null
    url: string | null
    date: Date | null
    author: string | null
    label: string | null
    deleted: boolean | null
  }

  export type ObservationsCountAggregateOutputType = {
    observation_id: number
    account_id: number
    observation_source_id: number
    place_id: number
    id_in_source: number
    url: number
    observation_data: number
    date: number
    author: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type ObservationsMinAggregateInputType = {
    observation_id?: true
    account_id?: true
    observation_source_id?: true
    place_id?: true
    id_in_source?: true
    url?: true
    date?: true
    author?: true
    label?: true
    deleted?: true
  }

  export type ObservationsMaxAggregateInputType = {
    observation_id?: true
    account_id?: true
    observation_source_id?: true
    place_id?: true
    id_in_source?: true
    url?: true
    date?: true
    author?: true
    label?: true
    deleted?: true
  }

  export type ObservationsCountAggregateInputType = {
    observation_id?: true
    account_id?: true
    observation_source_id?: true
    place_id?: true
    id_in_source?: true
    url?: true
    observation_data?: true
    date?: true
    author?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type ObservationsAggregateArgs = {
    /**
     * Filter which Observations to aggregate.
     */
    where?: ObservationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observations to fetch.
     */
    orderBy?: Enumerable<ObservationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ObservationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Observations
    **/
    _count?: true | ObservationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ObservationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ObservationsMaxAggregateInputType
  }

  export type GetObservationsAggregateType<T extends ObservationsAggregateArgs> = {
        [P in keyof T & keyof AggregateObservations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateObservations[P]>
      : GetScalarType<T[P], AggregateObservations[P]>
  }




  export type ObservationsGroupByArgs = {
    where?: ObservationsWhereInput
    orderBy?: Enumerable<ObservationsOrderByWithAggregationInput>
    by: ObservationsScalarFieldEnum[]
    having?: ObservationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ObservationsCountAggregateInputType | true
    _min?: ObservationsMinAggregateInputType
    _max?: ObservationsMaxAggregateInputType
  }


  export type ObservationsGroupByOutputType = {
    observation_id: string
    account_id: string | null
    observation_source_id: string | null
    place_id: string | null
    id_in_source: string | null
    url: string | null
    observation_data: JsonValue | null
    date: Date | null
    author: string | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: ObservationsCountAggregateOutputType | null
    _min: ObservationsMinAggregateOutputType | null
    _max: ObservationsMaxAggregateOutputType | null
  }

  type GetObservationsGroupByPayload<T extends ObservationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<ObservationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ObservationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ObservationsGroupByOutputType[P]>
            : GetScalarType<T[P], ObservationsGroupByOutputType[P]>
        }
      >
    >


  export type ObservationsSelect = {
    observation_id?: boolean
    account_id?: boolean
    observation_source_id?: boolean
    place_id?: boolean
    id_in_source?: boolean
    url?: boolean
    observation_data?: boolean
    date?: boolean
    author?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    observation_sources?: boolean | Observation_sourcesArgs
    places?: boolean | PlacesArgs
  }


  export type ObservationsInclude = {
    accounts?: boolean | AccountsArgs
    observation_sources?: boolean | Observation_sourcesArgs
    places?: boolean | PlacesArgs
  }

  export type ObservationsGetPayload<S extends boolean | null | undefined | ObservationsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Observations :
    S extends undefined ? never :
    S extends { include: any } & (ObservationsArgs | ObservationsFindManyArgs)
    ? Observations  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'observation_sources' ? Observation_sourcesGetPayload<S['include'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (ObservationsArgs | ObservationsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'observation_sources' ? Observation_sourcesGetPayload<S['select'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['select'][P]> | null :  P extends keyof Observations ? Observations[P] : never
  } 
      : Observations


  type ObservationsCountArgs = 
    Omit<ObservationsFindManyArgs, 'select' | 'include'> & {
      select?: ObservationsCountAggregateInputType | true
    }

  export interface ObservationsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Observations that matches the filter.
     * @param {ObservationsFindUniqueArgs} args - Arguments to find a Observations
     * @example
     * // Get one Observations
     * const observations = await prisma.observations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ObservationsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ObservationsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Observations'> extends True ? Prisma__ObservationsClient<ObservationsGetPayload<T>> : Prisma__ObservationsClient<ObservationsGetPayload<T> | null, null>

    /**
     * Find one Observations that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ObservationsFindUniqueOrThrowArgs} args - Arguments to find a Observations
     * @example
     * // Get one Observations
     * const observations = await prisma.observations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ObservationsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ObservationsFindUniqueOrThrowArgs>
    ): Prisma__ObservationsClient<ObservationsGetPayload<T>>

    /**
     * Find the first Observations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservationsFindFirstArgs} args - Arguments to find a Observations
     * @example
     * // Get one Observations
     * const observations = await prisma.observations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ObservationsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ObservationsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Observations'> extends True ? Prisma__ObservationsClient<ObservationsGetPayload<T>> : Prisma__ObservationsClient<ObservationsGetPayload<T> | null, null>

    /**
     * Find the first Observations that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservationsFindFirstOrThrowArgs} args - Arguments to find a Observations
     * @example
     * // Get one Observations
     * const observations = await prisma.observations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ObservationsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ObservationsFindFirstOrThrowArgs>
    ): Prisma__ObservationsClient<ObservationsGetPayload<T>>

    /**
     * Find zero or more Observations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservationsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Observations
     * const observations = await prisma.observations.findMany()
     * 
     * // Get first 10 Observations
     * const observations = await prisma.observations.findMany({ take: 10 })
     * 
     * // Only select the `observation_id`
     * const observationsWithObservation_idOnly = await prisma.observations.findMany({ select: { observation_id: true } })
     * 
    **/
    findMany<T extends ObservationsFindManyArgs>(
      args?: SelectSubset<T, ObservationsFindManyArgs>
    ): Prisma.PrismaPromise<Array<ObservationsGetPayload<T>>>

    /**
     * Create a Observations.
     * @param {ObservationsCreateArgs} args - Arguments to create a Observations.
     * @example
     * // Create one Observations
     * const Observations = await prisma.observations.create({
     *   data: {
     *     // ... data to create a Observations
     *   }
     * })
     * 
    **/
    create<T extends ObservationsCreateArgs>(
      args: SelectSubset<T, ObservationsCreateArgs>
    ): Prisma__ObservationsClient<ObservationsGetPayload<T>>

    /**
     * Create many Observations.
     *     @param {ObservationsCreateManyArgs} args - Arguments to create many Observations.
     *     @example
     *     // Create many Observations
     *     const observations = await prisma.observations.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ObservationsCreateManyArgs>(
      args?: SelectSubset<T, ObservationsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Observations.
     * @param {ObservationsDeleteArgs} args - Arguments to delete one Observations.
     * @example
     * // Delete one Observations
     * const Observations = await prisma.observations.delete({
     *   where: {
     *     // ... filter to delete one Observations
     *   }
     * })
     * 
    **/
    delete<T extends ObservationsDeleteArgs>(
      args: SelectSubset<T, ObservationsDeleteArgs>
    ): Prisma__ObservationsClient<ObservationsGetPayload<T>>

    /**
     * Update one Observations.
     * @param {ObservationsUpdateArgs} args - Arguments to update one Observations.
     * @example
     * // Update one Observations
     * const observations = await prisma.observations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ObservationsUpdateArgs>(
      args: SelectSubset<T, ObservationsUpdateArgs>
    ): Prisma__ObservationsClient<ObservationsGetPayload<T>>

    /**
     * Delete zero or more Observations.
     * @param {ObservationsDeleteManyArgs} args - Arguments to filter Observations to delete.
     * @example
     * // Delete a few Observations
     * const { count } = await prisma.observations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ObservationsDeleteManyArgs>(
      args?: SelectSubset<T, ObservationsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Observations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Observations
     * const observations = await prisma.observations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ObservationsUpdateManyArgs>(
      args: SelectSubset<T, ObservationsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Observations.
     * @param {ObservationsUpsertArgs} args - Arguments to update or create a Observations.
     * @example
     * // Update or create a Observations
     * const observations = await prisma.observations.upsert({
     *   create: {
     *     // ... data to create a Observations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Observations we want to update
     *   }
     * })
    **/
    upsert<T extends ObservationsUpsertArgs>(
      args: SelectSubset<T, ObservationsUpsertArgs>
    ): Prisma__ObservationsClient<ObservationsGetPayload<T>>

    /**
     * Count the number of Observations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservationsCountArgs} args - Arguments to filter Observations to count.
     * @example
     * // Count the number of Observations
     * const count = await prisma.observations.count({
     *   where: {
     *     // ... the filter for the Observations we want to count
     *   }
     * })
    **/
    count<T extends ObservationsCountArgs>(
      args?: Subset<T, ObservationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ObservationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Observations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ObservationsAggregateArgs>(args: Subset<T, ObservationsAggregateArgs>): Prisma.PrismaPromise<GetObservationsAggregateType<T>>

    /**
     * Group by Observations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ObservationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ObservationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ObservationsGroupByArgs['orderBy'] }
        : { orderBy?: ObservationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ObservationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetObservationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Observations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ObservationsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    observation_sources<T extends Observation_sourcesArgs= {}>(args?: Subset<T, Observation_sourcesArgs>): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T> | Null>;

    places<T extends PlacesArgs= {}>(args?: Subset<T, PlacesArgs>): Prisma__PlacesClient<PlacesGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Observations base type for findUnique actions
   */
  export type ObservationsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * Filter, which Observations to fetch.
     */
    where: ObservationsWhereUniqueInput
  }

  /**
   * Observations findUnique
   */
  export interface ObservationsFindUniqueArgs extends ObservationsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Observations findUniqueOrThrow
   */
  export type ObservationsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * Filter, which Observations to fetch.
     */
    where: ObservationsWhereUniqueInput
  }


  /**
   * Observations base type for findFirst actions
   */
  export type ObservationsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * Filter, which Observations to fetch.
     */
    where?: ObservationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observations to fetch.
     */
    orderBy?: Enumerable<ObservationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Observations.
     */
    cursor?: ObservationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Observations.
     */
    distinct?: Enumerable<ObservationsScalarFieldEnum>
  }

  /**
   * Observations findFirst
   */
  export interface ObservationsFindFirstArgs extends ObservationsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Observations findFirstOrThrow
   */
  export type ObservationsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * Filter, which Observations to fetch.
     */
    where?: ObservationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observations to fetch.
     */
    orderBy?: Enumerable<ObservationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Observations.
     */
    cursor?: ObservationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Observations.
     */
    distinct?: Enumerable<ObservationsScalarFieldEnum>
  }


  /**
   * Observations findMany
   */
  export type ObservationsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * Filter, which Observations to fetch.
     */
    where?: ObservationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observations to fetch.
     */
    orderBy?: Enumerable<ObservationsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Observations.
     */
    cursor?: ObservationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observations.
     */
    skip?: number
    distinct?: Enumerable<ObservationsScalarFieldEnum>
  }


  /**
   * Observations create
   */
  export type ObservationsCreateArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * The data needed to create a Observations.
     */
    data: XOR<ObservationsCreateInput, ObservationsUncheckedCreateInput>
  }


  /**
   * Observations createMany
   */
  export type ObservationsCreateManyArgs = {
    /**
     * The data used to create many Observations.
     */
    data: Enumerable<ObservationsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Observations update
   */
  export type ObservationsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * The data needed to update a Observations.
     */
    data: XOR<ObservationsUpdateInput, ObservationsUncheckedUpdateInput>
    /**
     * Choose, which Observations to update.
     */
    where: ObservationsWhereUniqueInput
  }


  /**
   * Observations updateMany
   */
  export type ObservationsUpdateManyArgs = {
    /**
     * The data used to update Observations.
     */
    data: XOR<ObservationsUpdateManyMutationInput, ObservationsUncheckedUpdateManyInput>
    /**
     * Filter which Observations to update
     */
    where?: ObservationsWhereInput
  }


  /**
   * Observations upsert
   */
  export type ObservationsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * The filter to search for the Observations to update in case it exists.
     */
    where: ObservationsWhereUniqueInput
    /**
     * In case the Observations found by the `where` argument doesn't exist, create a new Observations with this data.
     */
    create: XOR<ObservationsCreateInput, ObservationsUncheckedCreateInput>
    /**
     * In case the Observations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ObservationsUpdateInput, ObservationsUncheckedUpdateInput>
  }


  /**
   * Observations delete
   */
  export type ObservationsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    /**
     * Filter which Observations to delete.
     */
    where: ObservationsWhereUniqueInput
  }


  /**
   * Observations deleteMany
   */
  export type ObservationsDeleteManyArgs = {
    /**
     * Filter which Observations to delete
     */
    where?: ObservationsWhereInput
  }


  /**
   * Observations without action
   */
  export type ObservationsArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
  }



  /**
   * Model Persons
   */


  export type AggregatePersons = {
    _count: PersonsCountAggregateOutputType | null
    _min: PersonsMinAggregateOutputType | null
    _max: PersonsMaxAggregateOutputType | null
  }

  export type PersonsMinAggregateOutputType = {
    person_id: string | null
    project_id: string | null
    account_id: string | null
    email: string | null
    label: string | null
    deleted: boolean | null
  }

  export type PersonsMaxAggregateOutputType = {
    person_id: string | null
    project_id: string | null
    account_id: string | null
    email: string | null
    label: string | null
    deleted: boolean | null
  }

  export type PersonsCountAggregateOutputType = {
    person_id: number
    project_id: number
    account_id: number
    email: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type PersonsMinAggregateInputType = {
    person_id?: true
    project_id?: true
    account_id?: true
    email?: true
    label?: true
    deleted?: true
  }

  export type PersonsMaxAggregateInputType = {
    person_id?: true
    project_id?: true
    account_id?: true
    email?: true
    label?: true
    deleted?: true
  }

  export type PersonsCountAggregateInputType = {
    person_id?: true
    project_id?: true
    account_id?: true
    email?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type PersonsAggregateArgs = {
    /**
     * Filter which Persons to aggregate.
     */
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     */
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Persons
    **/
    _count?: true | PersonsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PersonsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PersonsMaxAggregateInputType
  }

  export type GetPersonsAggregateType<T extends PersonsAggregateArgs> = {
        [P in keyof T & keyof AggregatePersons]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersons[P]>
      : GetScalarType<T[P], AggregatePersons[P]>
  }




  export type PersonsGroupByArgs = {
    where?: PersonsWhereInput
    orderBy?: Enumerable<PersonsOrderByWithAggregationInput>
    by: PersonsScalarFieldEnum[]
    having?: PersonsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PersonsCountAggregateInputType | true
    _min?: PersonsMinAggregateInputType
    _max?: PersonsMaxAggregateInputType
  }


  export type PersonsGroupByOutputType = {
    person_id: string
    project_id: string | null
    account_id: string | null
    email: string | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: PersonsCountAggregateOutputType | null
    _min: PersonsMinAggregateOutputType | null
    _max: PersonsMaxAggregateOutputType | null
  }

  type GetPersonsGroupByPayload<T extends PersonsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<PersonsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PersonsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PersonsGroupByOutputType[P]>
            : GetScalarType<T[P], PersonsGroupByOutputType[P]>
        }
      >
    >


  export type PersonsSelect = {
    person_id?: boolean
    project_id?: boolean
    account_id?: boolean
    email?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
  }


  export type PersonsInclude = {
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
  }

  export type PersonsGetPayload<S extends boolean | null | undefined | PersonsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Persons :
    S extends undefined ? never :
    S extends { include: any } & (PersonsArgs | PersonsFindManyArgs)
    ? Persons  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (PersonsArgs | PersonsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :  P extends keyof Persons ? Persons[P] : never
  } 
      : Persons


  type PersonsCountArgs = 
    Omit<PersonsFindManyArgs, 'select' | 'include'> & {
      select?: PersonsCountAggregateInputType | true
    }

  export interface PersonsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Persons that matches the filter.
     * @param {PersonsFindUniqueArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PersonsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, PersonsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Persons'> extends True ? Prisma__PersonsClient<PersonsGetPayload<T>> : Prisma__PersonsClient<PersonsGetPayload<T> | null, null>

    /**
     * Find one Persons that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {PersonsFindUniqueOrThrowArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PersonsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, PersonsFindUniqueOrThrowArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Find the first Persons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsFindFirstArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PersonsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, PersonsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Persons'> extends True ? Prisma__PersonsClient<PersonsGetPayload<T>> : Prisma__PersonsClient<PersonsGetPayload<T> | null, null>

    /**
     * Find the first Persons that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsFindFirstOrThrowArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PersonsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, PersonsFindFirstOrThrowArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Find zero or more Persons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Persons
     * const persons = await prisma.persons.findMany()
     * 
     * // Get first 10 Persons
     * const persons = await prisma.persons.findMany({ take: 10 })
     * 
     * // Only select the `person_id`
     * const personsWithPerson_idOnly = await prisma.persons.findMany({ select: { person_id: true } })
     * 
    **/
    findMany<T extends PersonsFindManyArgs>(
      args?: SelectSubset<T, PersonsFindManyArgs>
    ): Prisma.PrismaPromise<Array<PersonsGetPayload<T>>>

    /**
     * Create a Persons.
     * @param {PersonsCreateArgs} args - Arguments to create a Persons.
     * @example
     * // Create one Persons
     * const Persons = await prisma.persons.create({
     *   data: {
     *     // ... data to create a Persons
     *   }
     * })
     * 
    **/
    create<T extends PersonsCreateArgs>(
      args: SelectSubset<T, PersonsCreateArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Create many Persons.
     *     @param {PersonsCreateManyArgs} args - Arguments to create many Persons.
     *     @example
     *     // Create many Persons
     *     const persons = await prisma.persons.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends PersonsCreateManyArgs>(
      args?: SelectSubset<T, PersonsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Persons.
     * @param {PersonsDeleteArgs} args - Arguments to delete one Persons.
     * @example
     * // Delete one Persons
     * const Persons = await prisma.persons.delete({
     *   where: {
     *     // ... filter to delete one Persons
     *   }
     * })
     * 
    **/
    delete<T extends PersonsDeleteArgs>(
      args: SelectSubset<T, PersonsDeleteArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Update one Persons.
     * @param {PersonsUpdateArgs} args - Arguments to update one Persons.
     * @example
     * // Update one Persons
     * const persons = await prisma.persons.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PersonsUpdateArgs>(
      args: SelectSubset<T, PersonsUpdateArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Delete zero or more Persons.
     * @param {PersonsDeleteManyArgs} args - Arguments to filter Persons to delete.
     * @example
     * // Delete a few Persons
     * const { count } = await prisma.persons.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PersonsDeleteManyArgs>(
      args?: SelectSubset<T, PersonsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Persons
     * const persons = await prisma.persons.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PersonsUpdateManyArgs>(
      args: SelectSubset<T, PersonsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Persons.
     * @param {PersonsUpsertArgs} args - Arguments to update or create a Persons.
     * @example
     * // Update or create a Persons
     * const persons = await prisma.persons.upsert({
     *   create: {
     *     // ... data to create a Persons
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Persons we want to update
     *   }
     * })
    **/
    upsert<T extends PersonsUpsertArgs>(
      args: SelectSubset<T, PersonsUpsertArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Count the number of Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsCountArgs} args - Arguments to filter Persons to count.
     * @example
     * // Count the number of Persons
     * const count = await prisma.persons.count({
     *   where: {
     *     // ... the filter for the Persons we want to count
     *   }
     * })
    **/
    count<T extends PersonsCountArgs>(
      args?: Subset<T, PersonsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PersonsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PersonsAggregateArgs>(args: Subset<T, PersonsAggregateArgs>): Prisma.PrismaPromise<GetPersonsAggregateType<T>>

    /**
     * Group by Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PersonsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PersonsGroupByArgs['orderBy'] }
        : { orderBy?: PersonsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PersonsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Persons.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__PersonsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Persons base type for findUnique actions
   */
  export type PersonsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     */
    where: PersonsWhereUniqueInput
  }

  /**
   * Persons findUnique
   */
  export interface PersonsFindUniqueArgs extends PersonsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Persons findUniqueOrThrow
   */
  export type PersonsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     */
    where: PersonsWhereUniqueInput
  }


  /**
   * Persons base type for findFirst actions
   */
  export type PersonsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     */
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     */
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Persons.
     */
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Persons.
     */
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }

  /**
   * Persons findFirst
   */
  export interface PersonsFindFirstArgs extends PersonsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Persons findFirstOrThrow
   */
  export type PersonsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     */
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     */
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Persons.
     */
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Persons.
     */
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Persons findMany
   */
  export type PersonsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     */
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     */
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Persons.
     */
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     */
    skip?: number
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Persons create
   */
  export type PersonsCreateArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * The data needed to create a Persons.
     */
    data: XOR<PersonsCreateInput, PersonsUncheckedCreateInput>
  }


  /**
   * Persons createMany
   */
  export type PersonsCreateManyArgs = {
    /**
     * The data used to create many Persons.
     */
    data: Enumerable<PersonsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Persons update
   */
  export type PersonsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * The data needed to update a Persons.
     */
    data: XOR<PersonsUpdateInput, PersonsUncheckedUpdateInput>
    /**
     * Choose, which Persons to update.
     */
    where: PersonsWhereUniqueInput
  }


  /**
   * Persons updateMany
   */
  export type PersonsUpdateManyArgs = {
    /**
     * The data used to update Persons.
     */
    data: XOR<PersonsUpdateManyMutationInput, PersonsUncheckedUpdateManyInput>
    /**
     * Filter which Persons to update
     */
    where?: PersonsWhereInput
  }


  /**
   * Persons upsert
   */
  export type PersonsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * The filter to search for the Persons to update in case it exists.
     */
    where: PersonsWhereUniqueInput
    /**
     * In case the Persons found by the `where` argument doesn't exist, create a new Persons with this data.
     */
    create: XOR<PersonsCreateInput, PersonsUncheckedCreateInput>
    /**
     * In case the Persons was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PersonsUpdateInput, PersonsUncheckedUpdateInput>
  }


  /**
   * Persons delete
   */
  export type PersonsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    /**
     * Filter which Persons to delete.
     */
    where: PersonsWhereUniqueInput
  }


  /**
   * Persons deleteMany
   */
  export type PersonsDeleteManyArgs = {
    /**
     * Filter which Persons to delete
     */
    where?: PersonsWhereInput
  }


  /**
   * Persons without action
   */
  export type PersonsArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
  }



  /**
   * Model Place_levels
   */


  export type AggregatePlace_levels = {
    _count: Place_levelsCountAggregateOutputType | null
    _avg: Place_levelsAvgAggregateOutputType | null
    _sum: Place_levelsSumAggregateOutputType | null
    _min: Place_levelsMinAggregateOutputType | null
    _max: Place_levelsMaxAggregateOutputType | null
  }

  export type Place_levelsAvgAggregateOutputType = {
    level: number | null
  }

  export type Place_levelsSumAggregateOutputType = {
    level: number | null
  }

  export type Place_levelsMinAggregateOutputType = {
    place_level_id: string | null
    account_id: string | null
    project_id: string | null
    level: number | null
    name_singular: string | null
    name_plural: string | null
    name_short: string | null
    reports: boolean | null
    report_values: boolean | null
    actions: boolean | null
    action_values: boolean | null
    action_reports: boolean | null
    checks: boolean | null
    check_values: boolean | null
    check_taxa: boolean | null
    observation_references: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_levelsMaxAggregateOutputType = {
    place_level_id: string | null
    account_id: string | null
    project_id: string | null
    level: number | null
    name_singular: string | null
    name_plural: string | null
    name_short: string | null
    reports: boolean | null
    report_values: boolean | null
    actions: boolean | null
    action_values: boolean | null
    action_reports: boolean | null
    checks: boolean | null
    check_values: boolean | null
    check_taxa: boolean | null
    observation_references: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_levelsCountAggregateOutputType = {
    place_level_id: number
    account_id: number
    project_id: number
    level: number
    name_singular: number
    name_plural: number
    name_short: number
    reports: number
    report_values: number
    actions: number
    action_values: number
    action_reports: number
    checks: number
    check_values: number
    check_taxa: number
    observation_references: number
    label: number
    deleted: number
    _all: number
  }


  export type Place_levelsAvgAggregateInputType = {
    level?: true
  }

  export type Place_levelsSumAggregateInputType = {
    level?: true
  }

  export type Place_levelsMinAggregateInputType = {
    place_level_id?: true
    account_id?: true
    project_id?: true
    level?: true
    name_singular?: true
    name_plural?: true
    name_short?: true
    reports?: true
    report_values?: true
    actions?: true
    action_values?: true
    action_reports?: true
    checks?: true
    check_values?: true
    check_taxa?: true
    observation_references?: true
    label?: true
    deleted?: true
  }

  export type Place_levelsMaxAggregateInputType = {
    place_level_id?: true
    account_id?: true
    project_id?: true
    level?: true
    name_singular?: true
    name_plural?: true
    name_short?: true
    reports?: true
    report_values?: true
    actions?: true
    action_values?: true
    action_reports?: true
    checks?: true
    check_values?: true
    check_taxa?: true
    observation_references?: true
    label?: true
    deleted?: true
  }

  export type Place_levelsCountAggregateInputType = {
    place_level_id?: true
    account_id?: true
    project_id?: true
    level?: true
    name_singular?: true
    name_plural?: true
    name_short?: true
    reports?: true
    report_values?: true
    actions?: true
    action_values?: true
    action_reports?: true
    checks?: true
    check_values?: true
    check_taxa?: true
    observation_references?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Place_levelsAggregateArgs = {
    /**
     * Filter which Place_levels to aggregate.
     */
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     */
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Place_levels
    **/
    _count?: true | Place_levelsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Place_levelsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Place_levelsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Place_levelsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Place_levelsMaxAggregateInputType
  }

  export type GetPlace_levelsAggregateType<T extends Place_levelsAggregateArgs> = {
        [P in keyof T & keyof AggregatePlace_levels]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlace_levels[P]>
      : GetScalarType<T[P], AggregatePlace_levels[P]>
  }




  export type Place_levelsGroupByArgs = {
    where?: Place_levelsWhereInput
    orderBy?: Enumerable<Place_levelsOrderByWithAggregationInput>
    by: Place_levelsScalarFieldEnum[]
    having?: Place_levelsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Place_levelsCountAggregateInputType | true
    _avg?: Place_levelsAvgAggregateInputType
    _sum?: Place_levelsSumAggregateInputType
    _min?: Place_levelsMinAggregateInputType
    _max?: Place_levelsMaxAggregateInputType
  }


  export type Place_levelsGroupByOutputType = {
    place_level_id: string
    account_id: string | null
    project_id: string | null
    level: number | null
    name_singular: string | null
    name_plural: string | null
    name_short: string | null
    reports: boolean | null
    report_values: boolean | null
    actions: boolean | null
    action_values: boolean | null
    action_reports: boolean | null
    checks: boolean | null
    check_values: boolean | null
    check_taxa: boolean | null
    observation_references: boolean | null
    label: string | null
    deleted: boolean | null
    _count: Place_levelsCountAggregateOutputType | null
    _avg: Place_levelsAvgAggregateOutputType | null
    _sum: Place_levelsSumAggregateOutputType | null
    _min: Place_levelsMinAggregateOutputType | null
    _max: Place_levelsMaxAggregateOutputType | null
  }

  type GetPlace_levelsGroupByPayload<T extends Place_levelsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Place_levelsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Place_levelsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Place_levelsGroupByOutputType[P]>
            : GetScalarType<T[P], Place_levelsGroupByOutputType[P]>
        }
      >
    >


  export type Place_levelsSelect = {
    place_level_id?: boolean
    account_id?: boolean
    project_id?: boolean
    level?: boolean
    name_singular?: boolean
    name_plural?: boolean
    name_short?: boolean
    reports?: boolean
    report_values?: boolean
    actions?: boolean
    action_values?: boolean
    action_reports?: boolean
    checks?: boolean
    check_values?: boolean
    check_taxa?: boolean
    observation_references?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
  }


  export type Place_levelsInclude = {
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
  }

  export type Place_levelsGetPayload<S extends boolean | null | undefined | Place_levelsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Place_levels :
    S extends undefined ? never :
    S extends { include: any } & (Place_levelsArgs | Place_levelsFindManyArgs)
    ? Place_levels  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Place_levelsArgs | Place_levelsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :  P extends keyof Place_levels ? Place_levels[P] : never
  } 
      : Place_levels


  type Place_levelsCountArgs = 
    Omit<Place_levelsFindManyArgs, 'select' | 'include'> & {
      select?: Place_levelsCountAggregateInputType | true
    }

  export interface Place_levelsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Place_levels that matches the filter.
     * @param {Place_levelsFindUniqueArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Place_levelsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Place_levelsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Place_levels'> extends True ? Prisma__Place_levelsClient<Place_levelsGetPayload<T>> : Prisma__Place_levelsClient<Place_levelsGetPayload<T> | null, null>

    /**
     * Find one Place_levels that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Place_levelsFindUniqueOrThrowArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Place_levelsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Place_levelsFindUniqueOrThrowArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Find the first Place_levels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsFindFirstArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Place_levelsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Place_levelsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Place_levels'> extends True ? Prisma__Place_levelsClient<Place_levelsGetPayload<T>> : Prisma__Place_levelsClient<Place_levelsGetPayload<T> | null, null>

    /**
     * Find the first Place_levels that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsFindFirstOrThrowArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Place_levelsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Place_levelsFindFirstOrThrowArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Find zero or more Place_levels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Place_levels
     * const place_levels = await prisma.place_levels.findMany()
     * 
     * // Get first 10 Place_levels
     * const place_levels = await prisma.place_levels.findMany({ take: 10 })
     * 
     * // Only select the `place_level_id`
     * const place_levelsWithPlace_level_idOnly = await prisma.place_levels.findMany({ select: { place_level_id: true } })
     * 
    **/
    findMany<T extends Place_levelsFindManyArgs>(
      args?: SelectSubset<T, Place_levelsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Place_levelsGetPayload<T>>>

    /**
     * Create a Place_levels.
     * @param {Place_levelsCreateArgs} args - Arguments to create a Place_levels.
     * @example
     * // Create one Place_levels
     * const Place_levels = await prisma.place_levels.create({
     *   data: {
     *     // ... data to create a Place_levels
     *   }
     * })
     * 
    **/
    create<T extends Place_levelsCreateArgs>(
      args: SelectSubset<T, Place_levelsCreateArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Create many Place_levels.
     *     @param {Place_levelsCreateManyArgs} args - Arguments to create many Place_levels.
     *     @example
     *     // Create many Place_levels
     *     const place_levels = await prisma.place_levels.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Place_levelsCreateManyArgs>(
      args?: SelectSubset<T, Place_levelsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Place_levels.
     * @param {Place_levelsDeleteArgs} args - Arguments to delete one Place_levels.
     * @example
     * // Delete one Place_levels
     * const Place_levels = await prisma.place_levels.delete({
     *   where: {
     *     // ... filter to delete one Place_levels
     *   }
     * })
     * 
    **/
    delete<T extends Place_levelsDeleteArgs>(
      args: SelectSubset<T, Place_levelsDeleteArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Update one Place_levels.
     * @param {Place_levelsUpdateArgs} args - Arguments to update one Place_levels.
     * @example
     * // Update one Place_levels
     * const place_levels = await prisma.place_levels.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Place_levelsUpdateArgs>(
      args: SelectSubset<T, Place_levelsUpdateArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Delete zero or more Place_levels.
     * @param {Place_levelsDeleteManyArgs} args - Arguments to filter Place_levels to delete.
     * @example
     * // Delete a few Place_levels
     * const { count } = await prisma.place_levels.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Place_levelsDeleteManyArgs>(
      args?: SelectSubset<T, Place_levelsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Place_levels
     * const place_levels = await prisma.place_levels.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Place_levelsUpdateManyArgs>(
      args: SelectSubset<T, Place_levelsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Place_levels.
     * @param {Place_levelsUpsertArgs} args - Arguments to update or create a Place_levels.
     * @example
     * // Update or create a Place_levels
     * const place_levels = await prisma.place_levels.upsert({
     *   create: {
     *     // ... data to create a Place_levels
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Place_levels we want to update
     *   }
     * })
    **/
    upsert<T extends Place_levelsUpsertArgs>(
      args: SelectSubset<T, Place_levelsUpsertArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Count the number of Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsCountArgs} args - Arguments to filter Place_levels to count.
     * @example
     * // Count the number of Place_levels
     * const count = await prisma.place_levels.count({
     *   where: {
     *     // ... the filter for the Place_levels we want to count
     *   }
     * })
    **/
    count<T extends Place_levelsCountArgs>(
      args?: Subset<T, Place_levelsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Place_levelsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Place_levelsAggregateArgs>(args: Subset<T, Place_levelsAggregateArgs>): Prisma.PrismaPromise<GetPlace_levelsAggregateType<T>>

    /**
     * Group by Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Place_levelsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Place_levelsGroupByArgs['orderBy'] }
        : { orderBy?: Place_levelsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Place_levelsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlace_levelsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Place_levels.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Place_levelsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Place_levels base type for findUnique actions
   */
  export type Place_levelsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     */
    where: Place_levelsWhereUniqueInput
  }

  /**
   * Place_levels findUnique
   */
  export interface Place_levelsFindUniqueArgs extends Place_levelsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_levels findUniqueOrThrow
   */
  export type Place_levelsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     */
    where: Place_levelsWhereUniqueInput
  }


  /**
   * Place_levels base type for findFirst actions
   */
  export type Place_levelsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     */
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     */
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_levels.
     */
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_levels.
     */
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }

  /**
   * Place_levels findFirst
   */
  export interface Place_levelsFindFirstArgs extends Place_levelsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_levels findFirstOrThrow
   */
  export type Place_levelsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     */
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     */
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_levels.
     */
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_levels.
     */
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Place_levels findMany
   */
  export type Place_levelsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     */
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     */
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Place_levels.
     */
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     */
    skip?: number
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Place_levels create
   */
  export type Place_levelsCreateArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * The data needed to create a Place_levels.
     */
    data: XOR<Place_levelsCreateInput, Place_levelsUncheckedCreateInput>
  }


  /**
   * Place_levels createMany
   */
  export type Place_levelsCreateManyArgs = {
    /**
     * The data used to create many Place_levels.
     */
    data: Enumerable<Place_levelsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Place_levels update
   */
  export type Place_levelsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * The data needed to update a Place_levels.
     */
    data: XOR<Place_levelsUpdateInput, Place_levelsUncheckedUpdateInput>
    /**
     * Choose, which Place_levels to update.
     */
    where: Place_levelsWhereUniqueInput
  }


  /**
   * Place_levels updateMany
   */
  export type Place_levelsUpdateManyArgs = {
    /**
     * The data used to update Place_levels.
     */
    data: XOR<Place_levelsUpdateManyMutationInput, Place_levelsUncheckedUpdateManyInput>
    /**
     * Filter which Place_levels to update
     */
    where?: Place_levelsWhereInput
  }


  /**
   * Place_levels upsert
   */
  export type Place_levelsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * The filter to search for the Place_levels to update in case it exists.
     */
    where: Place_levelsWhereUniqueInput
    /**
     * In case the Place_levels found by the `where` argument doesn't exist, create a new Place_levels with this data.
     */
    create: XOR<Place_levelsCreateInput, Place_levelsUncheckedCreateInput>
    /**
     * In case the Place_levels was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Place_levelsUpdateInput, Place_levelsUncheckedUpdateInput>
  }


  /**
   * Place_levels delete
   */
  export type Place_levelsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    /**
     * Filter which Place_levels to delete.
     */
    where: Place_levelsWhereUniqueInput
  }


  /**
   * Place_levels deleteMany
   */
  export type Place_levelsDeleteManyArgs = {
    /**
     * Filter which Place_levels to delete
     */
    where?: Place_levelsWhereInput
  }


  /**
   * Place_levels without action
   */
  export type Place_levelsArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
  }



  /**
   * Model Place_report_values
   */


  export type AggregatePlace_report_values = {
    _count: Place_report_valuesCountAggregateOutputType | null
    _avg: Place_report_valuesAvgAggregateOutputType | null
    _sum: Place_report_valuesSumAggregateOutputType | null
    _min: Place_report_valuesMinAggregateOutputType | null
    _max: Place_report_valuesMaxAggregateOutputType | null
  }

  export type Place_report_valuesAvgAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Place_report_valuesSumAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Place_report_valuesMinAggregateOutputType = {
    place_report_value_id: string | null
    account_id: string | null
    place_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_report_valuesMaxAggregateOutputType = {
    place_report_value_id: string | null
    account_id: string | null
    place_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_report_valuesCountAggregateOutputType = {
    place_report_value_id: number
    account_id: number
    place_report_id: number
    unit_id: number
    value_integer: number
    value_numeric: number
    value_text: number
    label: number
    deleted: number
    _all: number
  }


  export type Place_report_valuesAvgAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Place_report_valuesSumAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Place_report_valuesMinAggregateInputType = {
    place_report_value_id?: true
    account_id?: true
    place_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Place_report_valuesMaxAggregateInputType = {
    place_report_value_id?: true
    account_id?: true
    place_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Place_report_valuesCountAggregateInputType = {
    place_report_value_id?: true
    account_id?: true
    place_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Place_report_valuesAggregateArgs = {
    /**
     * Filter which Place_report_values to aggregate.
     */
    where?: Place_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_report_values to fetch.
     */
    orderBy?: Enumerable<Place_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Place_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Place_report_values
    **/
    _count?: true | Place_report_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Place_report_valuesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Place_report_valuesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Place_report_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Place_report_valuesMaxAggregateInputType
  }

  export type GetPlace_report_valuesAggregateType<T extends Place_report_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregatePlace_report_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlace_report_values[P]>
      : GetScalarType<T[P], AggregatePlace_report_values[P]>
  }




  export type Place_report_valuesGroupByArgs = {
    where?: Place_report_valuesWhereInput
    orderBy?: Enumerable<Place_report_valuesOrderByWithAggregationInput>
    by: Place_report_valuesScalarFieldEnum[]
    having?: Place_report_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Place_report_valuesCountAggregateInputType | true
    _avg?: Place_report_valuesAvgAggregateInputType
    _sum?: Place_report_valuesSumAggregateInputType
    _min?: Place_report_valuesMinAggregateInputType
    _max?: Place_report_valuesMaxAggregateInputType
  }


  export type Place_report_valuesGroupByOutputType = {
    place_report_value_id: string
    account_id: string | null
    place_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
    _count: Place_report_valuesCountAggregateOutputType | null
    _avg: Place_report_valuesAvgAggregateOutputType | null
    _sum: Place_report_valuesSumAggregateOutputType | null
    _min: Place_report_valuesMinAggregateOutputType | null
    _max: Place_report_valuesMaxAggregateOutputType | null
  }

  type GetPlace_report_valuesGroupByPayload<T extends Place_report_valuesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Place_report_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Place_report_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Place_report_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], Place_report_valuesGroupByOutputType[P]>
        }
      >
    >


  export type Place_report_valuesSelect = {
    place_report_value_id?: boolean
    account_id?: boolean
    place_report_id?: boolean
    unit_id?: boolean
    value_integer?: boolean
    value_numeric?: boolean
    value_text?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    place_reports?: boolean | Place_reportsArgs
    units?: boolean | UnitsArgs
  }


  export type Place_report_valuesInclude = {
    accounts?: boolean | AccountsArgs
    place_reports?: boolean | Place_reportsArgs
    units?: boolean | UnitsArgs
  }

  export type Place_report_valuesGetPayload<S extends boolean | null | undefined | Place_report_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Place_report_values :
    S extends undefined ? never :
    S extends { include: any } & (Place_report_valuesArgs | Place_report_valuesFindManyArgs)
    ? Place_report_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'place_reports' ? Place_reportsGetPayload<S['include'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Place_report_valuesArgs | Place_report_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'place_reports' ? Place_reportsGetPayload<S['select'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['select'][P]> | null :  P extends keyof Place_report_values ? Place_report_values[P] : never
  } 
      : Place_report_values


  type Place_report_valuesCountArgs = 
    Omit<Place_report_valuesFindManyArgs, 'select' | 'include'> & {
      select?: Place_report_valuesCountAggregateInputType | true
    }

  export interface Place_report_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Place_report_values that matches the filter.
     * @param {Place_report_valuesFindUniqueArgs} args - Arguments to find a Place_report_values
     * @example
     * // Get one Place_report_values
     * const place_report_values = await prisma.place_report_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Place_report_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Place_report_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Place_report_values'> extends True ? Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>> : Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T> | null, null>

    /**
     * Find one Place_report_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Place_report_valuesFindUniqueOrThrowArgs} args - Arguments to find a Place_report_values
     * @example
     * // Get one Place_report_values
     * const place_report_values = await prisma.place_report_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Place_report_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Place_report_valuesFindUniqueOrThrowArgs>
    ): Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>>

    /**
     * Find the first Place_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_report_valuesFindFirstArgs} args - Arguments to find a Place_report_values
     * @example
     * // Get one Place_report_values
     * const place_report_values = await prisma.place_report_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Place_report_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Place_report_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Place_report_values'> extends True ? Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>> : Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T> | null, null>

    /**
     * Find the first Place_report_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_report_valuesFindFirstOrThrowArgs} args - Arguments to find a Place_report_values
     * @example
     * // Get one Place_report_values
     * const place_report_values = await prisma.place_report_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Place_report_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Place_report_valuesFindFirstOrThrowArgs>
    ): Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>>

    /**
     * Find zero or more Place_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_report_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Place_report_values
     * const place_report_values = await prisma.place_report_values.findMany()
     * 
     * // Get first 10 Place_report_values
     * const place_report_values = await prisma.place_report_values.findMany({ take: 10 })
     * 
     * // Only select the `place_report_value_id`
     * const place_report_valuesWithPlace_report_value_idOnly = await prisma.place_report_values.findMany({ select: { place_report_value_id: true } })
     * 
    **/
    findMany<T extends Place_report_valuesFindManyArgs>(
      args?: SelectSubset<T, Place_report_valuesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Place_report_valuesGetPayload<T>>>

    /**
     * Create a Place_report_values.
     * @param {Place_report_valuesCreateArgs} args - Arguments to create a Place_report_values.
     * @example
     * // Create one Place_report_values
     * const Place_report_values = await prisma.place_report_values.create({
     *   data: {
     *     // ... data to create a Place_report_values
     *   }
     * })
     * 
    **/
    create<T extends Place_report_valuesCreateArgs>(
      args: SelectSubset<T, Place_report_valuesCreateArgs>
    ): Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>>

    /**
     * Create many Place_report_values.
     *     @param {Place_report_valuesCreateManyArgs} args - Arguments to create many Place_report_values.
     *     @example
     *     // Create many Place_report_values
     *     const place_report_values = await prisma.place_report_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Place_report_valuesCreateManyArgs>(
      args?: SelectSubset<T, Place_report_valuesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Place_report_values.
     * @param {Place_report_valuesDeleteArgs} args - Arguments to delete one Place_report_values.
     * @example
     * // Delete one Place_report_values
     * const Place_report_values = await prisma.place_report_values.delete({
     *   where: {
     *     // ... filter to delete one Place_report_values
     *   }
     * })
     * 
    **/
    delete<T extends Place_report_valuesDeleteArgs>(
      args: SelectSubset<T, Place_report_valuesDeleteArgs>
    ): Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>>

    /**
     * Update one Place_report_values.
     * @param {Place_report_valuesUpdateArgs} args - Arguments to update one Place_report_values.
     * @example
     * // Update one Place_report_values
     * const place_report_values = await prisma.place_report_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Place_report_valuesUpdateArgs>(
      args: SelectSubset<T, Place_report_valuesUpdateArgs>
    ): Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>>

    /**
     * Delete zero or more Place_report_values.
     * @param {Place_report_valuesDeleteManyArgs} args - Arguments to filter Place_report_values to delete.
     * @example
     * // Delete a few Place_report_values
     * const { count } = await prisma.place_report_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Place_report_valuesDeleteManyArgs>(
      args?: SelectSubset<T, Place_report_valuesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Place_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_report_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Place_report_values
     * const place_report_values = await prisma.place_report_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Place_report_valuesUpdateManyArgs>(
      args: SelectSubset<T, Place_report_valuesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Place_report_values.
     * @param {Place_report_valuesUpsertArgs} args - Arguments to update or create a Place_report_values.
     * @example
     * // Update or create a Place_report_values
     * const place_report_values = await prisma.place_report_values.upsert({
     *   create: {
     *     // ... data to create a Place_report_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Place_report_values we want to update
     *   }
     * })
    **/
    upsert<T extends Place_report_valuesUpsertArgs>(
      args: SelectSubset<T, Place_report_valuesUpsertArgs>
    ): Prisma__Place_report_valuesClient<Place_report_valuesGetPayload<T>>

    /**
     * Count the number of Place_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_report_valuesCountArgs} args - Arguments to filter Place_report_values to count.
     * @example
     * // Count the number of Place_report_values
     * const count = await prisma.place_report_values.count({
     *   where: {
     *     // ... the filter for the Place_report_values we want to count
     *   }
     * })
    **/
    count<T extends Place_report_valuesCountArgs>(
      args?: Subset<T, Place_report_valuesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Place_report_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Place_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_report_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Place_report_valuesAggregateArgs>(args: Subset<T, Place_report_valuesAggregateArgs>): Prisma.PrismaPromise<GetPlace_report_valuesAggregateType<T>>

    /**
     * Group by Place_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_report_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Place_report_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Place_report_valuesGroupByArgs['orderBy'] }
        : { orderBy?: Place_report_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Place_report_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlace_report_valuesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Place_report_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Place_report_valuesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    place_reports<T extends Place_reportsArgs= {}>(args?: Subset<T, Place_reportsArgs>): Prisma__Place_reportsClient<Place_reportsGetPayload<T> | Null>;

    units<T extends UnitsArgs= {}>(args?: Subset<T, UnitsArgs>): Prisma__UnitsClient<UnitsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Place_report_values base type for findUnique actions
   */
  export type Place_report_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * Filter, which Place_report_values to fetch.
     */
    where: Place_report_valuesWhereUniqueInput
  }

  /**
   * Place_report_values findUnique
   */
  export interface Place_report_valuesFindUniqueArgs extends Place_report_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_report_values findUniqueOrThrow
   */
  export type Place_report_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * Filter, which Place_report_values to fetch.
     */
    where: Place_report_valuesWhereUniqueInput
  }


  /**
   * Place_report_values base type for findFirst actions
   */
  export type Place_report_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * Filter, which Place_report_values to fetch.
     */
    where?: Place_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_report_values to fetch.
     */
    orderBy?: Enumerable<Place_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_report_values.
     */
    cursor?: Place_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_report_values.
     */
    distinct?: Enumerable<Place_report_valuesScalarFieldEnum>
  }

  /**
   * Place_report_values findFirst
   */
  export interface Place_report_valuesFindFirstArgs extends Place_report_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_report_values findFirstOrThrow
   */
  export type Place_report_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * Filter, which Place_report_values to fetch.
     */
    where?: Place_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_report_values to fetch.
     */
    orderBy?: Enumerable<Place_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_report_values.
     */
    cursor?: Place_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_report_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_report_values.
     */
    distinct?: Enumerable<Place_report_valuesScalarFieldEnum>
  }


  /**
   * Place_report_values findMany
   */
  export type Place_report_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * Filter, which Place_report_values to fetch.
     */
    where?: Place_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_report_values to fetch.
     */
    orderBy?: Enumerable<Place_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Place_report_values.
     */
    cursor?: Place_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_report_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_report_values.
     */
    skip?: number
    distinct?: Enumerable<Place_report_valuesScalarFieldEnum>
  }


  /**
   * Place_report_values create
   */
  export type Place_report_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * The data needed to create a Place_report_values.
     */
    data: XOR<Place_report_valuesCreateInput, Place_report_valuesUncheckedCreateInput>
  }


  /**
   * Place_report_values createMany
   */
  export type Place_report_valuesCreateManyArgs = {
    /**
     * The data used to create many Place_report_values.
     */
    data: Enumerable<Place_report_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Place_report_values update
   */
  export type Place_report_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * The data needed to update a Place_report_values.
     */
    data: XOR<Place_report_valuesUpdateInput, Place_report_valuesUncheckedUpdateInput>
    /**
     * Choose, which Place_report_values to update.
     */
    where: Place_report_valuesWhereUniqueInput
  }


  /**
   * Place_report_values updateMany
   */
  export type Place_report_valuesUpdateManyArgs = {
    /**
     * The data used to update Place_report_values.
     */
    data: XOR<Place_report_valuesUpdateManyMutationInput, Place_report_valuesUncheckedUpdateManyInput>
    /**
     * Filter which Place_report_values to update
     */
    where?: Place_report_valuesWhereInput
  }


  /**
   * Place_report_values upsert
   */
  export type Place_report_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * The filter to search for the Place_report_values to update in case it exists.
     */
    where: Place_report_valuesWhereUniqueInput
    /**
     * In case the Place_report_values found by the `where` argument doesn't exist, create a new Place_report_values with this data.
     */
    create: XOR<Place_report_valuesCreateInput, Place_report_valuesUncheckedCreateInput>
    /**
     * In case the Place_report_values was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Place_report_valuesUpdateInput, Place_report_valuesUncheckedUpdateInput>
  }


  /**
   * Place_report_values delete
   */
  export type Place_report_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    /**
     * Filter which Place_report_values to delete.
     */
    where: Place_report_valuesWhereUniqueInput
  }


  /**
   * Place_report_values deleteMany
   */
  export type Place_report_valuesDeleteManyArgs = {
    /**
     * Filter which Place_report_values to delete
     */
    where?: Place_report_valuesWhereInput
  }


  /**
   * Place_report_values without action
   */
  export type Place_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
  }



  /**
   * Model Place_reports
   */


  export type AggregatePlace_reports = {
    _count: Place_reportsCountAggregateOutputType | null
    _avg: Place_reportsAvgAggregateOutputType | null
    _sum: Place_reportsSumAggregateOutputType | null
    _min: Place_reportsMinAggregateOutputType | null
    _max: Place_reportsMaxAggregateOutputType | null
  }

  export type Place_reportsAvgAggregateOutputType = {
    year: number | null
  }

  export type Place_reportsSumAggregateOutputType = {
    year: number | null
  }

  export type Place_reportsMinAggregateOutputType = {
    place_report_id: string | null
    account_id: string | null
    place_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_reportsMaxAggregateOutputType = {
    place_report_id: string | null
    account_id: string | null
    place_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_reportsCountAggregateOutputType = {
    place_report_id: number
    account_id: number
    place_id: number
    year: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type Place_reportsAvgAggregateInputType = {
    year?: true
  }

  export type Place_reportsSumAggregateInputType = {
    year?: true
  }

  export type Place_reportsMinAggregateInputType = {
    place_report_id?: true
    account_id?: true
    place_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Place_reportsMaxAggregateInputType = {
    place_report_id?: true
    account_id?: true
    place_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Place_reportsCountAggregateInputType = {
    place_report_id?: true
    account_id?: true
    place_id?: true
    year?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Place_reportsAggregateArgs = {
    /**
     * Filter which Place_reports to aggregate.
     */
    where?: Place_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_reports to fetch.
     */
    orderBy?: Enumerable<Place_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Place_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Place_reports
    **/
    _count?: true | Place_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Place_reportsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Place_reportsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Place_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Place_reportsMaxAggregateInputType
  }

  export type GetPlace_reportsAggregateType<T extends Place_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregatePlace_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlace_reports[P]>
      : GetScalarType<T[P], AggregatePlace_reports[P]>
  }




  export type Place_reportsGroupByArgs = {
    where?: Place_reportsWhereInput
    orderBy?: Enumerable<Place_reportsOrderByWithAggregationInput>
    by: Place_reportsScalarFieldEnum[]
    having?: Place_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Place_reportsCountAggregateInputType | true
    _avg?: Place_reportsAvgAggregateInputType
    _sum?: Place_reportsSumAggregateInputType
    _min?: Place_reportsMinAggregateInputType
    _max?: Place_reportsMaxAggregateInputType
  }


  export type Place_reportsGroupByOutputType = {
    place_report_id: string
    account_id: string | null
    place_id: string | null
    year: number | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: Place_reportsCountAggregateOutputType | null
    _avg: Place_reportsAvgAggregateOutputType | null
    _sum: Place_reportsSumAggregateOutputType | null
    _min: Place_reportsMinAggregateOutputType | null
    _max: Place_reportsMaxAggregateOutputType | null
  }

  type GetPlace_reportsGroupByPayload<T extends Place_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Place_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Place_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Place_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Place_reportsGroupByOutputType[P]>
        }
      >
    >


  export type Place_reportsSelect = {
    place_report_id?: boolean
    account_id?: boolean
    place_id?: boolean
    year?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    place_report_values?: boolean | Place_reports$place_report_valuesArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    _count?: boolean | Place_reportsCountOutputTypeArgs
  }


  export type Place_reportsInclude = {
    place_report_values?: boolean | Place_reports$place_report_valuesArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    _count?: boolean | Place_reportsCountOutputTypeArgs
  }

  export type Place_reportsGetPayload<S extends boolean | null | undefined | Place_reportsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Place_reports :
    S extends undefined ? never :
    S extends { include: any } & (Place_reportsArgs | Place_reportsFindManyArgs)
    ? Place_reports  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'place_report_values' ? Array < Place_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['include'][P]> | null :
        P extends '_count' ? Place_reportsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Place_reportsArgs | Place_reportsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'place_report_values' ? Array < Place_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['select'][P]> | null :
        P extends '_count' ? Place_reportsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Place_reports ? Place_reports[P] : never
  } 
      : Place_reports


  type Place_reportsCountArgs = 
    Omit<Place_reportsFindManyArgs, 'select' | 'include'> & {
      select?: Place_reportsCountAggregateInputType | true
    }

  export interface Place_reportsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Place_reports that matches the filter.
     * @param {Place_reportsFindUniqueArgs} args - Arguments to find a Place_reports
     * @example
     * // Get one Place_reports
     * const place_reports = await prisma.place_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Place_reportsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Place_reportsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Place_reports'> extends True ? Prisma__Place_reportsClient<Place_reportsGetPayload<T>> : Prisma__Place_reportsClient<Place_reportsGetPayload<T> | null, null>

    /**
     * Find one Place_reports that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Place_reportsFindUniqueOrThrowArgs} args - Arguments to find a Place_reports
     * @example
     * // Get one Place_reports
     * const place_reports = await prisma.place_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Place_reportsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Place_reportsFindUniqueOrThrowArgs>
    ): Prisma__Place_reportsClient<Place_reportsGetPayload<T>>

    /**
     * Find the first Place_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_reportsFindFirstArgs} args - Arguments to find a Place_reports
     * @example
     * // Get one Place_reports
     * const place_reports = await prisma.place_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Place_reportsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Place_reportsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Place_reports'> extends True ? Prisma__Place_reportsClient<Place_reportsGetPayload<T>> : Prisma__Place_reportsClient<Place_reportsGetPayload<T> | null, null>

    /**
     * Find the first Place_reports that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_reportsFindFirstOrThrowArgs} args - Arguments to find a Place_reports
     * @example
     * // Get one Place_reports
     * const place_reports = await prisma.place_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Place_reportsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Place_reportsFindFirstOrThrowArgs>
    ): Prisma__Place_reportsClient<Place_reportsGetPayload<T>>

    /**
     * Find zero or more Place_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_reportsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Place_reports
     * const place_reports = await prisma.place_reports.findMany()
     * 
     * // Get first 10 Place_reports
     * const place_reports = await prisma.place_reports.findMany({ take: 10 })
     * 
     * // Only select the `place_report_id`
     * const place_reportsWithPlace_report_idOnly = await prisma.place_reports.findMany({ select: { place_report_id: true } })
     * 
    **/
    findMany<T extends Place_reportsFindManyArgs>(
      args?: SelectSubset<T, Place_reportsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Place_reportsGetPayload<T>>>

    /**
     * Create a Place_reports.
     * @param {Place_reportsCreateArgs} args - Arguments to create a Place_reports.
     * @example
     * // Create one Place_reports
     * const Place_reports = await prisma.place_reports.create({
     *   data: {
     *     // ... data to create a Place_reports
     *   }
     * })
     * 
    **/
    create<T extends Place_reportsCreateArgs>(
      args: SelectSubset<T, Place_reportsCreateArgs>
    ): Prisma__Place_reportsClient<Place_reportsGetPayload<T>>

    /**
     * Create many Place_reports.
     *     @param {Place_reportsCreateManyArgs} args - Arguments to create many Place_reports.
     *     @example
     *     // Create many Place_reports
     *     const place_reports = await prisma.place_reports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Place_reportsCreateManyArgs>(
      args?: SelectSubset<T, Place_reportsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Place_reports.
     * @param {Place_reportsDeleteArgs} args - Arguments to delete one Place_reports.
     * @example
     * // Delete one Place_reports
     * const Place_reports = await prisma.place_reports.delete({
     *   where: {
     *     // ... filter to delete one Place_reports
     *   }
     * })
     * 
    **/
    delete<T extends Place_reportsDeleteArgs>(
      args: SelectSubset<T, Place_reportsDeleteArgs>
    ): Prisma__Place_reportsClient<Place_reportsGetPayload<T>>

    /**
     * Update one Place_reports.
     * @param {Place_reportsUpdateArgs} args - Arguments to update one Place_reports.
     * @example
     * // Update one Place_reports
     * const place_reports = await prisma.place_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Place_reportsUpdateArgs>(
      args: SelectSubset<T, Place_reportsUpdateArgs>
    ): Prisma__Place_reportsClient<Place_reportsGetPayload<T>>

    /**
     * Delete zero or more Place_reports.
     * @param {Place_reportsDeleteManyArgs} args - Arguments to filter Place_reports to delete.
     * @example
     * // Delete a few Place_reports
     * const { count } = await prisma.place_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Place_reportsDeleteManyArgs>(
      args?: SelectSubset<T, Place_reportsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Place_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Place_reports
     * const place_reports = await prisma.place_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Place_reportsUpdateManyArgs>(
      args: SelectSubset<T, Place_reportsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Place_reports.
     * @param {Place_reportsUpsertArgs} args - Arguments to update or create a Place_reports.
     * @example
     * // Update or create a Place_reports
     * const place_reports = await prisma.place_reports.upsert({
     *   create: {
     *     // ... data to create a Place_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Place_reports we want to update
     *   }
     * })
    **/
    upsert<T extends Place_reportsUpsertArgs>(
      args: SelectSubset<T, Place_reportsUpsertArgs>
    ): Prisma__Place_reportsClient<Place_reportsGetPayload<T>>

    /**
     * Count the number of Place_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_reportsCountArgs} args - Arguments to filter Place_reports to count.
     * @example
     * // Count the number of Place_reports
     * const count = await prisma.place_reports.count({
     *   where: {
     *     // ... the filter for the Place_reports we want to count
     *   }
     * })
    **/
    count<T extends Place_reportsCountArgs>(
      args?: Subset<T, Place_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Place_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Place_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Place_reportsAggregateArgs>(args: Subset<T, Place_reportsAggregateArgs>): Prisma.PrismaPromise<GetPlace_reportsAggregateType<T>>

    /**
     * Group by Place_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Place_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Place_reportsGroupByArgs['orderBy'] }
        : { orderBy?: Place_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Place_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlace_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Place_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Place_reportsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    place_report_values<T extends Place_reports$place_report_valuesArgs= {}>(args?: Subset<T, Place_reports$place_report_valuesArgs>): Prisma.PrismaPromise<Array<Place_report_valuesGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    places<T extends PlacesArgs= {}>(args?: Subset<T, PlacesArgs>): Prisma__PlacesClient<PlacesGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Place_reports base type for findUnique actions
   */
  export type Place_reportsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * Filter, which Place_reports to fetch.
     */
    where: Place_reportsWhereUniqueInput
  }

  /**
   * Place_reports findUnique
   */
  export interface Place_reportsFindUniqueArgs extends Place_reportsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_reports findUniqueOrThrow
   */
  export type Place_reportsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * Filter, which Place_reports to fetch.
     */
    where: Place_reportsWhereUniqueInput
  }


  /**
   * Place_reports base type for findFirst actions
   */
  export type Place_reportsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * Filter, which Place_reports to fetch.
     */
    where?: Place_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_reports to fetch.
     */
    orderBy?: Enumerable<Place_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_reports.
     */
    cursor?: Place_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_reports.
     */
    distinct?: Enumerable<Place_reportsScalarFieldEnum>
  }

  /**
   * Place_reports findFirst
   */
  export interface Place_reportsFindFirstArgs extends Place_reportsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_reports findFirstOrThrow
   */
  export type Place_reportsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * Filter, which Place_reports to fetch.
     */
    where?: Place_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_reports to fetch.
     */
    orderBy?: Enumerable<Place_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_reports.
     */
    cursor?: Place_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_reports.
     */
    distinct?: Enumerable<Place_reportsScalarFieldEnum>
  }


  /**
   * Place_reports findMany
   */
  export type Place_reportsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * Filter, which Place_reports to fetch.
     */
    where?: Place_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_reports to fetch.
     */
    orderBy?: Enumerable<Place_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Place_reports.
     */
    cursor?: Place_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_reports.
     */
    skip?: number
    distinct?: Enumerable<Place_reportsScalarFieldEnum>
  }


  /**
   * Place_reports create
   */
  export type Place_reportsCreateArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * The data needed to create a Place_reports.
     */
    data: XOR<Place_reportsCreateInput, Place_reportsUncheckedCreateInput>
  }


  /**
   * Place_reports createMany
   */
  export type Place_reportsCreateManyArgs = {
    /**
     * The data used to create many Place_reports.
     */
    data: Enumerable<Place_reportsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Place_reports update
   */
  export type Place_reportsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * The data needed to update a Place_reports.
     */
    data: XOR<Place_reportsUpdateInput, Place_reportsUncheckedUpdateInput>
    /**
     * Choose, which Place_reports to update.
     */
    where: Place_reportsWhereUniqueInput
  }


  /**
   * Place_reports updateMany
   */
  export type Place_reportsUpdateManyArgs = {
    /**
     * The data used to update Place_reports.
     */
    data: XOR<Place_reportsUpdateManyMutationInput, Place_reportsUncheckedUpdateManyInput>
    /**
     * Filter which Place_reports to update
     */
    where?: Place_reportsWhereInput
  }


  /**
   * Place_reports upsert
   */
  export type Place_reportsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * The filter to search for the Place_reports to update in case it exists.
     */
    where: Place_reportsWhereUniqueInput
    /**
     * In case the Place_reports found by the `where` argument doesn't exist, create a new Place_reports with this data.
     */
    create: XOR<Place_reportsCreateInput, Place_reportsUncheckedCreateInput>
    /**
     * In case the Place_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Place_reportsUpdateInput, Place_reportsUncheckedUpdateInput>
  }


  /**
   * Place_reports delete
   */
  export type Place_reportsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    /**
     * Filter which Place_reports to delete.
     */
    where: Place_reportsWhereUniqueInput
  }


  /**
   * Place_reports deleteMany
   */
  export type Place_reportsDeleteManyArgs = {
    /**
     * Filter which Place_reports to delete
     */
    where?: Place_reportsWhereInput
  }


  /**
   * Place_reports.place_report_values
   */
  export type Place_reports$place_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    where?: Place_report_valuesWhereInput
    orderBy?: Enumerable<Place_report_valuesOrderByWithRelationInput>
    cursor?: Place_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_report_valuesScalarFieldEnum>
  }


  /**
   * Place_reports without action
   */
  export type Place_reportsArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
  }



  /**
   * Model Place_users
   */


  export type AggregatePlace_users = {
    _count: Place_usersCountAggregateOutputType | null
    _min: Place_usersMinAggregateOutputType | null
    _max: Place_usersMaxAggregateOutputType | null
  }

  export type Place_usersMinAggregateOutputType = {
    place_user_id: string | null
    account_id: string | null
    place_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_usersMaxAggregateOutputType = {
    place_user_id: string | null
    account_id: string | null
    place_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Place_usersCountAggregateOutputType = {
    place_user_id: number
    account_id: number
    place_id: number
    user_id: number
    role: number
    label: number
    deleted: number
    _all: number
  }


  export type Place_usersMinAggregateInputType = {
    place_user_id?: true
    account_id?: true
    place_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Place_usersMaxAggregateInputType = {
    place_user_id?: true
    account_id?: true
    place_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Place_usersCountAggregateInputType = {
    place_user_id?: true
    account_id?: true
    place_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Place_usersAggregateArgs = {
    /**
     * Filter which Place_users to aggregate.
     */
    where?: Place_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_users to fetch.
     */
    orderBy?: Enumerable<Place_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Place_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Place_users
    **/
    _count?: true | Place_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Place_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Place_usersMaxAggregateInputType
  }

  export type GetPlace_usersAggregateType<T extends Place_usersAggregateArgs> = {
        [P in keyof T & keyof AggregatePlace_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlace_users[P]>
      : GetScalarType<T[P], AggregatePlace_users[P]>
  }




  export type Place_usersGroupByArgs = {
    where?: Place_usersWhereInput
    orderBy?: Enumerable<Place_usersOrderByWithAggregationInput>
    by: Place_usersScalarFieldEnum[]
    having?: Place_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Place_usersCountAggregateInputType | true
    _min?: Place_usersMinAggregateInputType
    _max?: Place_usersMaxAggregateInputType
  }


  export type Place_usersGroupByOutputType = {
    place_user_id: string
    account_id: string | null
    place_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
    _count: Place_usersCountAggregateOutputType | null
    _min: Place_usersMinAggregateOutputType | null
    _max: Place_usersMaxAggregateOutputType | null
  }

  type GetPlace_usersGroupByPayload<T extends Place_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Place_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Place_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Place_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Place_usersGroupByOutputType[P]>
        }
      >
    >


  export type Place_usersSelect = {
    place_user_id?: boolean
    account_id?: boolean
    place_id?: boolean
    user_id?: boolean
    role?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    users?: boolean | UsersArgs
  }


  export type Place_usersInclude = {
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    users?: boolean | UsersArgs
  }

  export type Place_usersGetPayload<S extends boolean | null | undefined | Place_usersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Place_users :
    S extends undefined ? never :
    S extends { include: any } & (Place_usersArgs | Place_usersFindManyArgs)
    ? Place_users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Place_usersArgs | Place_usersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :  P extends keyof Place_users ? Place_users[P] : never
  } 
      : Place_users


  type Place_usersCountArgs = 
    Omit<Place_usersFindManyArgs, 'select' | 'include'> & {
      select?: Place_usersCountAggregateInputType | true
    }

  export interface Place_usersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Place_users that matches the filter.
     * @param {Place_usersFindUniqueArgs} args - Arguments to find a Place_users
     * @example
     * // Get one Place_users
     * const place_users = await prisma.place_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Place_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Place_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Place_users'> extends True ? Prisma__Place_usersClient<Place_usersGetPayload<T>> : Prisma__Place_usersClient<Place_usersGetPayload<T> | null, null>

    /**
     * Find one Place_users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Place_usersFindUniqueOrThrowArgs} args - Arguments to find a Place_users
     * @example
     * // Get one Place_users
     * const place_users = await prisma.place_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Place_usersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Place_usersFindUniqueOrThrowArgs>
    ): Prisma__Place_usersClient<Place_usersGetPayload<T>>

    /**
     * Find the first Place_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_usersFindFirstArgs} args - Arguments to find a Place_users
     * @example
     * // Get one Place_users
     * const place_users = await prisma.place_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Place_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Place_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Place_users'> extends True ? Prisma__Place_usersClient<Place_usersGetPayload<T>> : Prisma__Place_usersClient<Place_usersGetPayload<T> | null, null>

    /**
     * Find the first Place_users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_usersFindFirstOrThrowArgs} args - Arguments to find a Place_users
     * @example
     * // Get one Place_users
     * const place_users = await prisma.place_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Place_usersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Place_usersFindFirstOrThrowArgs>
    ): Prisma__Place_usersClient<Place_usersGetPayload<T>>

    /**
     * Find zero or more Place_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Place_users
     * const place_users = await prisma.place_users.findMany()
     * 
     * // Get first 10 Place_users
     * const place_users = await prisma.place_users.findMany({ take: 10 })
     * 
     * // Only select the `place_user_id`
     * const place_usersWithPlace_user_idOnly = await prisma.place_users.findMany({ select: { place_user_id: true } })
     * 
    **/
    findMany<T extends Place_usersFindManyArgs>(
      args?: SelectSubset<T, Place_usersFindManyArgs>
    ): Prisma.PrismaPromise<Array<Place_usersGetPayload<T>>>

    /**
     * Create a Place_users.
     * @param {Place_usersCreateArgs} args - Arguments to create a Place_users.
     * @example
     * // Create one Place_users
     * const Place_users = await prisma.place_users.create({
     *   data: {
     *     // ... data to create a Place_users
     *   }
     * })
     * 
    **/
    create<T extends Place_usersCreateArgs>(
      args: SelectSubset<T, Place_usersCreateArgs>
    ): Prisma__Place_usersClient<Place_usersGetPayload<T>>

    /**
     * Create many Place_users.
     *     @param {Place_usersCreateManyArgs} args - Arguments to create many Place_users.
     *     @example
     *     // Create many Place_users
     *     const place_users = await prisma.place_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Place_usersCreateManyArgs>(
      args?: SelectSubset<T, Place_usersCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Place_users.
     * @param {Place_usersDeleteArgs} args - Arguments to delete one Place_users.
     * @example
     * // Delete one Place_users
     * const Place_users = await prisma.place_users.delete({
     *   where: {
     *     // ... filter to delete one Place_users
     *   }
     * })
     * 
    **/
    delete<T extends Place_usersDeleteArgs>(
      args: SelectSubset<T, Place_usersDeleteArgs>
    ): Prisma__Place_usersClient<Place_usersGetPayload<T>>

    /**
     * Update one Place_users.
     * @param {Place_usersUpdateArgs} args - Arguments to update one Place_users.
     * @example
     * // Update one Place_users
     * const place_users = await prisma.place_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Place_usersUpdateArgs>(
      args: SelectSubset<T, Place_usersUpdateArgs>
    ): Prisma__Place_usersClient<Place_usersGetPayload<T>>

    /**
     * Delete zero or more Place_users.
     * @param {Place_usersDeleteManyArgs} args - Arguments to filter Place_users to delete.
     * @example
     * // Delete a few Place_users
     * const { count } = await prisma.place_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Place_usersDeleteManyArgs>(
      args?: SelectSubset<T, Place_usersDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Place_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Place_users
     * const place_users = await prisma.place_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Place_usersUpdateManyArgs>(
      args: SelectSubset<T, Place_usersUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Place_users.
     * @param {Place_usersUpsertArgs} args - Arguments to update or create a Place_users.
     * @example
     * // Update or create a Place_users
     * const place_users = await prisma.place_users.upsert({
     *   create: {
     *     // ... data to create a Place_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Place_users we want to update
     *   }
     * })
    **/
    upsert<T extends Place_usersUpsertArgs>(
      args: SelectSubset<T, Place_usersUpsertArgs>
    ): Prisma__Place_usersClient<Place_usersGetPayload<T>>

    /**
     * Count the number of Place_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_usersCountArgs} args - Arguments to filter Place_users to count.
     * @example
     * // Count the number of Place_users
     * const count = await prisma.place_users.count({
     *   where: {
     *     // ... the filter for the Place_users we want to count
     *   }
     * })
    **/
    count<T extends Place_usersCountArgs>(
      args?: Subset<T, Place_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Place_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Place_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Place_usersAggregateArgs>(args: Subset<T, Place_usersAggregateArgs>): Prisma.PrismaPromise<GetPlace_usersAggregateType<T>>

    /**
     * Group by Place_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Place_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Place_usersGroupByArgs['orderBy'] }
        : { orderBy?: Place_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Place_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlace_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Place_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Place_usersClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    places<T extends PlacesArgs= {}>(args?: Subset<T, PlacesArgs>): Prisma__PlacesClient<PlacesGetPayload<T> | Null>;

    users<T extends UsersArgs= {}>(args?: Subset<T, UsersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Place_users base type for findUnique actions
   */
  export type Place_usersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * Filter, which Place_users to fetch.
     */
    where: Place_usersWhereUniqueInput
  }

  /**
   * Place_users findUnique
   */
  export interface Place_usersFindUniqueArgs extends Place_usersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_users findUniqueOrThrow
   */
  export type Place_usersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * Filter, which Place_users to fetch.
     */
    where: Place_usersWhereUniqueInput
  }


  /**
   * Place_users base type for findFirst actions
   */
  export type Place_usersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * Filter, which Place_users to fetch.
     */
    where?: Place_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_users to fetch.
     */
    orderBy?: Enumerable<Place_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_users.
     */
    cursor?: Place_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_users.
     */
    distinct?: Enumerable<Place_usersScalarFieldEnum>
  }

  /**
   * Place_users findFirst
   */
  export interface Place_usersFindFirstArgs extends Place_usersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_users findFirstOrThrow
   */
  export type Place_usersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * Filter, which Place_users to fetch.
     */
    where?: Place_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_users to fetch.
     */
    orderBy?: Enumerable<Place_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_users.
     */
    cursor?: Place_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_users.
     */
    distinct?: Enumerable<Place_usersScalarFieldEnum>
  }


  /**
   * Place_users findMany
   */
  export type Place_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * Filter, which Place_users to fetch.
     */
    where?: Place_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_users to fetch.
     */
    orderBy?: Enumerable<Place_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Place_users.
     */
    cursor?: Place_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_users.
     */
    skip?: number
    distinct?: Enumerable<Place_usersScalarFieldEnum>
  }


  /**
   * Place_users create
   */
  export type Place_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * The data needed to create a Place_users.
     */
    data: XOR<Place_usersCreateInput, Place_usersUncheckedCreateInput>
  }


  /**
   * Place_users createMany
   */
  export type Place_usersCreateManyArgs = {
    /**
     * The data used to create many Place_users.
     */
    data: Enumerable<Place_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Place_users update
   */
  export type Place_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * The data needed to update a Place_users.
     */
    data: XOR<Place_usersUpdateInput, Place_usersUncheckedUpdateInput>
    /**
     * Choose, which Place_users to update.
     */
    where: Place_usersWhereUniqueInput
  }


  /**
   * Place_users updateMany
   */
  export type Place_usersUpdateManyArgs = {
    /**
     * The data used to update Place_users.
     */
    data: XOR<Place_usersUpdateManyMutationInput, Place_usersUncheckedUpdateManyInput>
    /**
     * Filter which Place_users to update
     */
    where?: Place_usersWhereInput
  }


  /**
   * Place_users upsert
   */
  export type Place_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * The filter to search for the Place_users to update in case it exists.
     */
    where: Place_usersWhereUniqueInput
    /**
     * In case the Place_users found by the `where` argument doesn't exist, create a new Place_users with this data.
     */
    create: XOR<Place_usersCreateInput, Place_usersUncheckedCreateInput>
    /**
     * In case the Place_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Place_usersUpdateInput, Place_usersUncheckedUpdateInput>
  }


  /**
   * Place_users delete
   */
  export type Place_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    /**
     * Filter which Place_users to delete.
     */
    where: Place_usersWhereUniqueInput
  }


  /**
   * Place_users deleteMany
   */
  export type Place_usersDeleteManyArgs = {
    /**
     * Filter which Place_users to delete
     */
    where?: Place_usersWhereInput
  }


  /**
   * Place_users without action
   */
  export type Place_usersArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
  }



  /**
   * Model Places
   */


  export type AggregatePlaces = {
    _count: PlacesCountAggregateOutputType | null
    _avg: PlacesAvgAggregateOutputType | null
    _sum: PlacesSumAggregateOutputType | null
    _min: PlacesMinAggregateOutputType | null
    _max: PlacesMaxAggregateOutputType | null
  }

  export type PlacesAvgAggregateOutputType = {
    level: number | null
  }

  export type PlacesSumAggregateOutputType = {
    level: number | null
  }

  export type PlacesMinAggregateOutputType = {
    place_id: string | null
    account_id: string | null
    subproject_id: string | null
    parent_id: string | null
    level: number | null
    label: string | null
    files_active_places: boolean | null
    deleted: boolean | null
  }

  export type PlacesMaxAggregateOutputType = {
    place_id: string | null
    account_id: string | null
    subproject_id: string | null
    parent_id: string | null
    level: number | null
    label: string | null
    files_active_places: boolean | null
    deleted: boolean | null
  }

  export type PlacesCountAggregateOutputType = {
    place_id: number
    account_id: number
    subproject_id: number
    parent_id: number
    level: number
    data: number
    label: number
    files_active_places: number
    deleted: number
    _all: number
  }


  export type PlacesAvgAggregateInputType = {
    level?: true
  }

  export type PlacesSumAggregateInputType = {
    level?: true
  }

  export type PlacesMinAggregateInputType = {
    place_id?: true
    account_id?: true
    subproject_id?: true
    parent_id?: true
    level?: true
    label?: true
    files_active_places?: true
    deleted?: true
  }

  export type PlacesMaxAggregateInputType = {
    place_id?: true
    account_id?: true
    subproject_id?: true
    parent_id?: true
    level?: true
    label?: true
    files_active_places?: true
    deleted?: true
  }

  export type PlacesCountAggregateInputType = {
    place_id?: true
    account_id?: true
    subproject_id?: true
    parent_id?: true
    level?: true
    data?: true
    label?: true
    files_active_places?: true
    deleted?: true
    _all?: true
  }

  export type PlacesAggregateArgs = {
    /**
     * Filter which Places to aggregate.
     */
    where?: PlacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Places to fetch.
     */
    orderBy?: Enumerable<PlacesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Places from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Places.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Places
    **/
    _count?: true | PlacesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlacesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlacesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlacesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlacesMaxAggregateInputType
  }

  export type GetPlacesAggregateType<T extends PlacesAggregateArgs> = {
        [P in keyof T & keyof AggregatePlaces]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlaces[P]>
      : GetScalarType<T[P], AggregatePlaces[P]>
  }




  export type PlacesGroupByArgs = {
    where?: PlacesWhereInput
    orderBy?: Enumerable<PlacesOrderByWithAggregationInput>
    by: PlacesScalarFieldEnum[]
    having?: PlacesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlacesCountAggregateInputType | true
    _avg?: PlacesAvgAggregateInputType
    _sum?: PlacesSumAggregateInputType
    _min?: PlacesMinAggregateInputType
    _max?: PlacesMaxAggregateInputType
  }


  export type PlacesGroupByOutputType = {
    place_id: string
    account_id: string | null
    subproject_id: string | null
    parent_id: string | null
    level: number | null
    data: JsonValue | null
    label: string | null
    files_active_places: boolean | null
    deleted: boolean | null
    _count: PlacesCountAggregateOutputType | null
    _avg: PlacesAvgAggregateOutputType | null
    _sum: PlacesSumAggregateOutputType | null
    _min: PlacesMinAggregateOutputType | null
    _max: PlacesMaxAggregateOutputType | null
  }

  type GetPlacesGroupByPayload<T extends PlacesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<PlacesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlacesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlacesGroupByOutputType[P]>
            : GetScalarType<T[P], PlacesGroupByOutputType[P]>
        }
      >
    >


  export type PlacesSelect = {
    place_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    parent_id?: boolean
    level?: boolean
    data?: boolean
    label?: boolean
    files_active_places?: boolean
    deleted?: boolean
    actions?: boolean | Places$actionsArgs
    checks?: boolean | Places$checksArgs
    files?: boolean | Places$filesArgs
    observations?: boolean | Places$observationsArgs
    place_reports?: boolean | Places$place_reportsArgs
    place_users?: boolean | Places$place_usersArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    other_places?: boolean | Places$other_placesArgs
    subprojects?: boolean | SubprojectsArgs
    _count?: boolean | PlacesCountOutputTypeArgs
  }


  export type PlacesInclude = {
    actions?: boolean | Places$actionsArgs
    checks?: boolean | Places$checksArgs
    files?: boolean | Places$filesArgs
    observations?: boolean | Places$observationsArgs
    place_reports?: boolean | Places$place_reportsArgs
    place_users?: boolean | Places$place_usersArgs
    accounts?: boolean | AccountsArgs
    places?: boolean | PlacesArgs
    other_places?: boolean | Places$other_placesArgs
    subprojects?: boolean | SubprojectsArgs
    _count?: boolean | PlacesCountOutputTypeArgs
  }

  export type PlacesGetPayload<S extends boolean | null | undefined | PlacesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Places :
    S extends undefined ? never :
    S extends { include: any } & (PlacesArgs | PlacesFindManyArgs)
    ? Places  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'actions' ? Array < ActionsGetPayload<S['include'][P]>>  :
        P extends 'checks' ? Array < ChecksGetPayload<S['include'][P]>>  :
        P extends 'files' ? Array < FilesGetPayload<S['include'][P]>>  :
        P extends 'observations' ? Array < ObservationsGetPayload<S['include'][P]>>  :
        P extends 'place_reports' ? Array < Place_reportsGetPayload<S['include'][P]>>  :
        P extends 'place_users' ? Array < Place_usersGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['include'][P]> | null :
        P extends 'other_places' ? Array < PlacesGetPayload<S['include'][P]>>  :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? PlacesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (PlacesArgs | PlacesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'actions' ? Array < ActionsGetPayload<S['select'][P]>>  :
        P extends 'checks' ? Array < ChecksGetPayload<S['select'][P]>>  :
        P extends 'files' ? Array < FilesGetPayload<S['select'][P]>>  :
        P extends 'observations' ? Array < ObservationsGetPayload<S['select'][P]>>  :
        P extends 'place_reports' ? Array < Place_reportsGetPayload<S['select'][P]>>  :
        P extends 'place_users' ? Array < Place_usersGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'places' ? PlacesGetPayload<S['select'][P]> | null :
        P extends 'other_places' ? Array < PlacesGetPayload<S['select'][P]>>  :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? PlacesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Places ? Places[P] : never
  } 
      : Places


  type PlacesCountArgs = 
    Omit<PlacesFindManyArgs, 'select' | 'include'> & {
      select?: PlacesCountAggregateInputType | true
    }

  export interface PlacesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Places that matches the filter.
     * @param {PlacesFindUniqueArgs} args - Arguments to find a Places
     * @example
     * // Get one Places
     * const places = await prisma.places.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PlacesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, PlacesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Places'> extends True ? Prisma__PlacesClient<PlacesGetPayload<T>> : Prisma__PlacesClient<PlacesGetPayload<T> | null, null>

    /**
     * Find one Places that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {PlacesFindUniqueOrThrowArgs} args - Arguments to find a Places
     * @example
     * // Get one Places
     * const places = await prisma.places.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PlacesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, PlacesFindUniqueOrThrowArgs>
    ): Prisma__PlacesClient<PlacesGetPayload<T>>

    /**
     * Find the first Places that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacesFindFirstArgs} args - Arguments to find a Places
     * @example
     * // Get one Places
     * const places = await prisma.places.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PlacesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, PlacesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Places'> extends True ? Prisma__PlacesClient<PlacesGetPayload<T>> : Prisma__PlacesClient<PlacesGetPayload<T> | null, null>

    /**
     * Find the first Places that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacesFindFirstOrThrowArgs} args - Arguments to find a Places
     * @example
     * // Get one Places
     * const places = await prisma.places.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PlacesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, PlacesFindFirstOrThrowArgs>
    ): Prisma__PlacesClient<PlacesGetPayload<T>>

    /**
     * Find zero or more Places that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Places
     * const places = await prisma.places.findMany()
     * 
     * // Get first 10 Places
     * const places = await prisma.places.findMany({ take: 10 })
     * 
     * // Only select the `place_id`
     * const placesWithPlace_idOnly = await prisma.places.findMany({ select: { place_id: true } })
     * 
    **/
    findMany<T extends PlacesFindManyArgs>(
      args?: SelectSubset<T, PlacesFindManyArgs>
    ): Prisma.PrismaPromise<Array<PlacesGetPayload<T>>>

    /**
     * Create a Places.
     * @param {PlacesCreateArgs} args - Arguments to create a Places.
     * @example
     * // Create one Places
     * const Places = await prisma.places.create({
     *   data: {
     *     // ... data to create a Places
     *   }
     * })
     * 
    **/
    create<T extends PlacesCreateArgs>(
      args: SelectSubset<T, PlacesCreateArgs>
    ): Prisma__PlacesClient<PlacesGetPayload<T>>

    /**
     * Create many Places.
     *     @param {PlacesCreateManyArgs} args - Arguments to create many Places.
     *     @example
     *     // Create many Places
     *     const places = await prisma.places.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends PlacesCreateManyArgs>(
      args?: SelectSubset<T, PlacesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Places.
     * @param {PlacesDeleteArgs} args - Arguments to delete one Places.
     * @example
     * // Delete one Places
     * const Places = await prisma.places.delete({
     *   where: {
     *     // ... filter to delete one Places
     *   }
     * })
     * 
    **/
    delete<T extends PlacesDeleteArgs>(
      args: SelectSubset<T, PlacesDeleteArgs>
    ): Prisma__PlacesClient<PlacesGetPayload<T>>

    /**
     * Update one Places.
     * @param {PlacesUpdateArgs} args - Arguments to update one Places.
     * @example
     * // Update one Places
     * const places = await prisma.places.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PlacesUpdateArgs>(
      args: SelectSubset<T, PlacesUpdateArgs>
    ): Prisma__PlacesClient<PlacesGetPayload<T>>

    /**
     * Delete zero or more Places.
     * @param {PlacesDeleteManyArgs} args - Arguments to filter Places to delete.
     * @example
     * // Delete a few Places
     * const { count } = await prisma.places.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PlacesDeleteManyArgs>(
      args?: SelectSubset<T, PlacesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Places.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Places
     * const places = await prisma.places.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PlacesUpdateManyArgs>(
      args: SelectSubset<T, PlacesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Places.
     * @param {PlacesUpsertArgs} args - Arguments to update or create a Places.
     * @example
     * // Update or create a Places
     * const places = await prisma.places.upsert({
     *   create: {
     *     // ... data to create a Places
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Places we want to update
     *   }
     * })
    **/
    upsert<T extends PlacesUpsertArgs>(
      args: SelectSubset<T, PlacesUpsertArgs>
    ): Prisma__PlacesClient<PlacesGetPayload<T>>

    /**
     * Count the number of Places.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacesCountArgs} args - Arguments to filter Places to count.
     * @example
     * // Count the number of Places
     * const count = await prisma.places.count({
     *   where: {
     *     // ... the filter for the Places we want to count
     *   }
     * })
    **/
    count<T extends PlacesCountArgs>(
      args?: Subset<T, PlacesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlacesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Places.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlacesAggregateArgs>(args: Subset<T, PlacesAggregateArgs>): Prisma.PrismaPromise<GetPlacesAggregateType<T>>

    /**
     * Group by Places.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlacesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlacesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlacesGroupByArgs['orderBy'] }
        : { orderBy?: PlacesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlacesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlacesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Places.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__PlacesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    actions<T extends Places$actionsArgs= {}>(args?: Subset<T, Places$actionsArgs>): Prisma.PrismaPromise<Array<ActionsGetPayload<T>>| Null>;

    checks<T extends Places$checksArgs= {}>(args?: Subset<T, Places$checksArgs>): Prisma.PrismaPromise<Array<ChecksGetPayload<T>>| Null>;

    files<T extends Places$filesArgs= {}>(args?: Subset<T, Places$filesArgs>): Prisma.PrismaPromise<Array<FilesGetPayload<T>>| Null>;

    observations<T extends Places$observationsArgs= {}>(args?: Subset<T, Places$observationsArgs>): Prisma.PrismaPromise<Array<ObservationsGetPayload<T>>| Null>;

    place_reports<T extends Places$place_reportsArgs= {}>(args?: Subset<T, Places$place_reportsArgs>): Prisma.PrismaPromise<Array<Place_reportsGetPayload<T>>| Null>;

    place_users<T extends Places$place_usersArgs= {}>(args?: Subset<T, Places$place_usersArgs>): Prisma.PrismaPromise<Array<Place_usersGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    places<T extends PlacesArgs= {}>(args?: Subset<T, PlacesArgs>): Prisma__PlacesClient<PlacesGetPayload<T> | Null>;

    other_places<T extends Places$other_placesArgs= {}>(args?: Subset<T, Places$other_placesArgs>): Prisma.PrismaPromise<Array<PlacesGetPayload<T>>| Null>;

    subprojects<T extends SubprojectsArgs= {}>(args?: Subset<T, SubprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Places base type for findUnique actions
   */
  export type PlacesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * Filter, which Places to fetch.
     */
    where: PlacesWhereUniqueInput
  }

  /**
   * Places findUnique
   */
  export interface PlacesFindUniqueArgs extends PlacesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Places findUniqueOrThrow
   */
  export type PlacesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * Filter, which Places to fetch.
     */
    where: PlacesWhereUniqueInput
  }


  /**
   * Places base type for findFirst actions
   */
  export type PlacesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * Filter, which Places to fetch.
     */
    where?: PlacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Places to fetch.
     */
    orderBy?: Enumerable<PlacesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Places.
     */
    cursor?: PlacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Places from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Places.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Places.
     */
    distinct?: Enumerable<PlacesScalarFieldEnum>
  }

  /**
   * Places findFirst
   */
  export interface PlacesFindFirstArgs extends PlacesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Places findFirstOrThrow
   */
  export type PlacesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * Filter, which Places to fetch.
     */
    where?: PlacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Places to fetch.
     */
    orderBy?: Enumerable<PlacesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Places.
     */
    cursor?: PlacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Places from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Places.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Places.
     */
    distinct?: Enumerable<PlacesScalarFieldEnum>
  }


  /**
   * Places findMany
   */
  export type PlacesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * Filter, which Places to fetch.
     */
    where?: PlacesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Places to fetch.
     */
    orderBy?: Enumerable<PlacesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Places.
     */
    cursor?: PlacesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Places from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Places.
     */
    skip?: number
    distinct?: Enumerable<PlacesScalarFieldEnum>
  }


  /**
   * Places create
   */
  export type PlacesCreateArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * The data needed to create a Places.
     */
    data: XOR<PlacesCreateInput, PlacesUncheckedCreateInput>
  }


  /**
   * Places createMany
   */
  export type PlacesCreateManyArgs = {
    /**
     * The data used to create many Places.
     */
    data: Enumerable<PlacesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Places update
   */
  export type PlacesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * The data needed to update a Places.
     */
    data: XOR<PlacesUpdateInput, PlacesUncheckedUpdateInput>
    /**
     * Choose, which Places to update.
     */
    where: PlacesWhereUniqueInput
  }


  /**
   * Places updateMany
   */
  export type PlacesUpdateManyArgs = {
    /**
     * The data used to update Places.
     */
    data: XOR<PlacesUpdateManyMutationInput, PlacesUncheckedUpdateManyInput>
    /**
     * Filter which Places to update
     */
    where?: PlacesWhereInput
  }


  /**
   * Places upsert
   */
  export type PlacesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * The filter to search for the Places to update in case it exists.
     */
    where: PlacesWhereUniqueInput
    /**
     * In case the Places found by the `where` argument doesn't exist, create a new Places with this data.
     */
    create: XOR<PlacesCreateInput, PlacesUncheckedCreateInput>
    /**
     * In case the Places was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlacesUpdateInput, PlacesUncheckedUpdateInput>
  }


  /**
   * Places delete
   */
  export type PlacesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    /**
     * Filter which Places to delete.
     */
    where: PlacesWhereUniqueInput
  }


  /**
   * Places deleteMany
   */
  export type PlacesDeleteManyArgs = {
    /**
     * Filter which Places to delete
     */
    where?: PlacesWhereInput
  }


  /**
   * Places.actions
   */
  export type Places$actionsArgs = {
    /**
     * Select specific fields to fetch from the Actions
     */
    select?: ActionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ActionsInclude | null
    where?: ActionsWhereInput
    orderBy?: Enumerable<ActionsOrderByWithRelationInput>
    cursor?: ActionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ActionsScalarFieldEnum>
  }


  /**
   * Places.checks
   */
  export type Places$checksArgs = {
    /**
     * Select specific fields to fetch from the Checks
     */
    select?: ChecksSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ChecksInclude | null
    where?: ChecksWhereInput
    orderBy?: Enumerable<ChecksOrderByWithRelationInput>
    cursor?: ChecksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ChecksScalarFieldEnum>
  }


  /**
   * Places.files
   */
  export type Places$filesArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    where?: FilesWhereInput
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    cursor?: FilesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Places.observations
   */
  export type Places$observationsArgs = {
    /**
     * Select specific fields to fetch from the Observations
     */
    select?: ObservationsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ObservationsInclude | null
    where?: ObservationsWhereInput
    orderBy?: Enumerable<ObservationsOrderByWithRelationInput>
    cursor?: ObservationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ObservationsScalarFieldEnum>
  }


  /**
   * Places.place_reports
   */
  export type Places$place_reportsArgs = {
    /**
     * Select specific fields to fetch from the Place_reports
     */
    select?: Place_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_reportsInclude | null
    where?: Place_reportsWhereInput
    orderBy?: Enumerable<Place_reportsOrderByWithRelationInput>
    cursor?: Place_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_reportsScalarFieldEnum>
  }


  /**
   * Places.place_users
   */
  export type Places$place_usersArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    where?: Place_usersWhereInput
    orderBy?: Enumerable<Place_usersOrderByWithRelationInput>
    cursor?: Place_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_usersScalarFieldEnum>
  }


  /**
   * Places.other_places
   */
  export type Places$other_placesArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    where?: PlacesWhereInput
    orderBy?: Enumerable<PlacesOrderByWithRelationInput>
    cursor?: PlacesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PlacesScalarFieldEnum>
  }


  /**
   * Places without action
   */
  export type PlacesArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
  }



  /**
   * Model Project_reports
   */


  export type AggregateProject_reports = {
    _count: Project_reportsCountAggregateOutputType | null
    _avg: Project_reportsAvgAggregateOutputType | null
    _sum: Project_reportsSumAggregateOutputType | null
    _min: Project_reportsMinAggregateOutputType | null
    _max: Project_reportsMaxAggregateOutputType | null
  }

  export type Project_reportsAvgAggregateOutputType = {
    year: number | null
  }

  export type Project_reportsSumAggregateOutputType = {
    year: number | null
  }

  export type Project_reportsMinAggregateOutputType = {
    project_report_id: string | null
    account_id: string | null
    project_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Project_reportsMaxAggregateOutputType = {
    project_report_id: string | null
    account_id: string | null
    project_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Project_reportsCountAggregateOutputType = {
    project_report_id: number
    account_id: number
    project_id: number
    year: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type Project_reportsAvgAggregateInputType = {
    year?: true
  }

  export type Project_reportsSumAggregateInputType = {
    year?: true
  }

  export type Project_reportsMinAggregateInputType = {
    project_report_id?: true
    account_id?: true
    project_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Project_reportsMaxAggregateInputType = {
    project_report_id?: true
    account_id?: true
    project_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Project_reportsCountAggregateInputType = {
    project_report_id?: true
    account_id?: true
    project_id?: true
    year?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Project_reportsAggregateArgs = {
    /**
     * Filter which Project_reports to aggregate.
     */
    where?: Project_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_reports to fetch.
     */
    orderBy?: Enumerable<Project_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Project_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Project_reports
    **/
    _count?: true | Project_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Project_reportsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Project_reportsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_reportsMaxAggregateInputType
  }

  export type GetProject_reportsAggregateType<T extends Project_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_reports[P]>
      : GetScalarType<T[P], AggregateProject_reports[P]>
  }




  export type Project_reportsGroupByArgs = {
    where?: Project_reportsWhereInput
    orderBy?: Enumerable<Project_reportsOrderByWithAggregationInput>
    by: Project_reportsScalarFieldEnum[]
    having?: Project_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_reportsCountAggregateInputType | true
    _avg?: Project_reportsAvgAggregateInputType
    _sum?: Project_reportsSumAggregateInputType
    _min?: Project_reportsMinAggregateInputType
    _max?: Project_reportsMaxAggregateInputType
  }


  export type Project_reportsGroupByOutputType = {
    project_report_id: string
    account_id: string | null
    project_id: string | null
    year: number | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: Project_reportsCountAggregateOutputType | null
    _avg: Project_reportsAvgAggregateOutputType | null
    _sum: Project_reportsSumAggregateOutputType | null
    _min: Project_reportsMinAggregateOutputType | null
    _max: Project_reportsMaxAggregateOutputType | null
  }

  type GetProject_reportsGroupByPayload<T extends Project_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Project_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Project_reportsGroupByOutputType[P]>
        }
      >
    >


  export type Project_reportsSelect = {
    project_report_id?: boolean
    account_id?: boolean
    project_id?: boolean
    year?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
  }


  export type Project_reportsInclude = {
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
  }

  export type Project_reportsGetPayload<S extends boolean | null | undefined | Project_reportsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Project_reports :
    S extends undefined ? never :
    S extends { include: any } & (Project_reportsArgs | Project_reportsFindManyArgs)
    ? Project_reports  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Project_reportsArgs | Project_reportsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :  P extends keyof Project_reports ? Project_reports[P] : never
  } 
      : Project_reports


  type Project_reportsCountArgs = 
    Omit<Project_reportsFindManyArgs, 'select' | 'include'> & {
      select?: Project_reportsCountAggregateInputType | true
    }

  export interface Project_reportsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Project_reports that matches the filter.
     * @param {Project_reportsFindUniqueArgs} args - Arguments to find a Project_reports
     * @example
     * // Get one Project_reports
     * const project_reports = await prisma.project_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Project_reportsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Project_reportsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Project_reports'> extends True ? Prisma__Project_reportsClient<Project_reportsGetPayload<T>> : Prisma__Project_reportsClient<Project_reportsGetPayload<T> | null, null>

    /**
     * Find one Project_reports that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Project_reportsFindUniqueOrThrowArgs} args - Arguments to find a Project_reports
     * @example
     * // Get one Project_reports
     * const project_reports = await prisma.project_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Project_reportsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Project_reportsFindUniqueOrThrowArgs>
    ): Prisma__Project_reportsClient<Project_reportsGetPayload<T>>

    /**
     * Find the first Project_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_reportsFindFirstArgs} args - Arguments to find a Project_reports
     * @example
     * // Get one Project_reports
     * const project_reports = await prisma.project_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Project_reportsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Project_reportsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Project_reports'> extends True ? Prisma__Project_reportsClient<Project_reportsGetPayload<T>> : Prisma__Project_reportsClient<Project_reportsGetPayload<T> | null, null>

    /**
     * Find the first Project_reports that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_reportsFindFirstOrThrowArgs} args - Arguments to find a Project_reports
     * @example
     * // Get one Project_reports
     * const project_reports = await prisma.project_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Project_reportsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Project_reportsFindFirstOrThrowArgs>
    ): Prisma__Project_reportsClient<Project_reportsGetPayload<T>>

    /**
     * Find zero or more Project_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_reportsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_reports
     * const project_reports = await prisma.project_reports.findMany()
     * 
     * // Get first 10 Project_reports
     * const project_reports = await prisma.project_reports.findMany({ take: 10 })
     * 
     * // Only select the `project_report_id`
     * const project_reportsWithProject_report_idOnly = await prisma.project_reports.findMany({ select: { project_report_id: true } })
     * 
    **/
    findMany<T extends Project_reportsFindManyArgs>(
      args?: SelectSubset<T, Project_reportsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Project_reportsGetPayload<T>>>

    /**
     * Create a Project_reports.
     * @param {Project_reportsCreateArgs} args - Arguments to create a Project_reports.
     * @example
     * // Create one Project_reports
     * const Project_reports = await prisma.project_reports.create({
     *   data: {
     *     // ... data to create a Project_reports
     *   }
     * })
     * 
    **/
    create<T extends Project_reportsCreateArgs>(
      args: SelectSubset<T, Project_reportsCreateArgs>
    ): Prisma__Project_reportsClient<Project_reportsGetPayload<T>>

    /**
     * Create many Project_reports.
     *     @param {Project_reportsCreateManyArgs} args - Arguments to create many Project_reports.
     *     @example
     *     // Create many Project_reports
     *     const project_reports = await prisma.project_reports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Project_reportsCreateManyArgs>(
      args?: SelectSubset<T, Project_reportsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Project_reports.
     * @param {Project_reportsDeleteArgs} args - Arguments to delete one Project_reports.
     * @example
     * // Delete one Project_reports
     * const Project_reports = await prisma.project_reports.delete({
     *   where: {
     *     // ... filter to delete one Project_reports
     *   }
     * })
     * 
    **/
    delete<T extends Project_reportsDeleteArgs>(
      args: SelectSubset<T, Project_reportsDeleteArgs>
    ): Prisma__Project_reportsClient<Project_reportsGetPayload<T>>

    /**
     * Update one Project_reports.
     * @param {Project_reportsUpdateArgs} args - Arguments to update one Project_reports.
     * @example
     * // Update one Project_reports
     * const project_reports = await prisma.project_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Project_reportsUpdateArgs>(
      args: SelectSubset<T, Project_reportsUpdateArgs>
    ): Prisma__Project_reportsClient<Project_reportsGetPayload<T>>

    /**
     * Delete zero or more Project_reports.
     * @param {Project_reportsDeleteManyArgs} args - Arguments to filter Project_reports to delete.
     * @example
     * // Delete a few Project_reports
     * const { count } = await prisma.project_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Project_reportsDeleteManyArgs>(
      args?: SelectSubset<T, Project_reportsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_reports
     * const project_reports = await prisma.project_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Project_reportsUpdateManyArgs>(
      args: SelectSubset<T, Project_reportsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Project_reports.
     * @param {Project_reportsUpsertArgs} args - Arguments to update or create a Project_reports.
     * @example
     * // Update or create a Project_reports
     * const project_reports = await prisma.project_reports.upsert({
     *   create: {
     *     // ... data to create a Project_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_reports we want to update
     *   }
     * })
    **/
    upsert<T extends Project_reportsUpsertArgs>(
      args: SelectSubset<T, Project_reportsUpsertArgs>
    ): Prisma__Project_reportsClient<Project_reportsGetPayload<T>>

    /**
     * Count the number of Project_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_reportsCountArgs} args - Arguments to filter Project_reports to count.
     * @example
     * // Count the number of Project_reports
     * const count = await prisma.project_reports.count({
     *   where: {
     *     // ... the filter for the Project_reports we want to count
     *   }
     * })
    **/
    count<T extends Project_reportsCountArgs>(
      args?: Subset<T, Project_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_reportsAggregateArgs>(args: Subset<T, Project_reportsAggregateArgs>): Prisma.PrismaPromise<GetProject_reportsAggregateType<T>>

    /**
     * Group by Project_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Project_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Project_reportsGroupByArgs['orderBy'] }
        : { orderBy?: Project_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Project_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Project_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Project_reportsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Project_reports base type for findUnique actions
   */
  export type Project_reportsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * Filter, which Project_reports to fetch.
     */
    where: Project_reportsWhereUniqueInput
  }

  /**
   * Project_reports findUnique
   */
  export interface Project_reportsFindUniqueArgs extends Project_reportsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project_reports findUniqueOrThrow
   */
  export type Project_reportsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * Filter, which Project_reports to fetch.
     */
    where: Project_reportsWhereUniqueInput
  }


  /**
   * Project_reports base type for findFirst actions
   */
  export type Project_reportsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * Filter, which Project_reports to fetch.
     */
    where?: Project_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_reports to fetch.
     */
    orderBy?: Enumerable<Project_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Project_reports.
     */
    cursor?: Project_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Project_reports.
     */
    distinct?: Enumerable<Project_reportsScalarFieldEnum>
  }

  /**
   * Project_reports findFirst
   */
  export interface Project_reportsFindFirstArgs extends Project_reportsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project_reports findFirstOrThrow
   */
  export type Project_reportsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * Filter, which Project_reports to fetch.
     */
    where?: Project_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_reports to fetch.
     */
    orderBy?: Enumerable<Project_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Project_reports.
     */
    cursor?: Project_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Project_reports.
     */
    distinct?: Enumerable<Project_reportsScalarFieldEnum>
  }


  /**
   * Project_reports findMany
   */
  export type Project_reportsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * Filter, which Project_reports to fetch.
     */
    where?: Project_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_reports to fetch.
     */
    orderBy?: Enumerable<Project_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Project_reports.
     */
    cursor?: Project_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_reports.
     */
    skip?: number
    distinct?: Enumerable<Project_reportsScalarFieldEnum>
  }


  /**
   * Project_reports create
   */
  export type Project_reportsCreateArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * The data needed to create a Project_reports.
     */
    data: XOR<Project_reportsCreateInput, Project_reportsUncheckedCreateInput>
  }


  /**
   * Project_reports createMany
   */
  export type Project_reportsCreateManyArgs = {
    /**
     * The data used to create many Project_reports.
     */
    data: Enumerable<Project_reportsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Project_reports update
   */
  export type Project_reportsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * The data needed to update a Project_reports.
     */
    data: XOR<Project_reportsUpdateInput, Project_reportsUncheckedUpdateInput>
    /**
     * Choose, which Project_reports to update.
     */
    where: Project_reportsWhereUniqueInput
  }


  /**
   * Project_reports updateMany
   */
  export type Project_reportsUpdateManyArgs = {
    /**
     * The data used to update Project_reports.
     */
    data: XOR<Project_reportsUpdateManyMutationInput, Project_reportsUncheckedUpdateManyInput>
    /**
     * Filter which Project_reports to update
     */
    where?: Project_reportsWhereInput
  }


  /**
   * Project_reports upsert
   */
  export type Project_reportsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * The filter to search for the Project_reports to update in case it exists.
     */
    where: Project_reportsWhereUniqueInput
    /**
     * In case the Project_reports found by the `where` argument doesn't exist, create a new Project_reports with this data.
     */
    create: XOR<Project_reportsCreateInput, Project_reportsUncheckedCreateInput>
    /**
     * In case the Project_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Project_reportsUpdateInput, Project_reportsUncheckedUpdateInput>
  }


  /**
   * Project_reports delete
   */
  export type Project_reportsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    /**
     * Filter which Project_reports to delete.
     */
    where: Project_reportsWhereUniqueInput
  }


  /**
   * Project_reports deleteMany
   */
  export type Project_reportsDeleteManyArgs = {
    /**
     * Filter which Project_reports to delete
     */
    where?: Project_reportsWhereInput
  }


  /**
   * Project_reports without action
   */
  export type Project_reportsArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
  }



  /**
   * Model Project_users
   */


  export type AggregateProject_users = {
    _count: Project_usersCountAggregateOutputType | null
    _min: Project_usersMinAggregateOutputType | null
    _max: Project_usersMaxAggregateOutputType | null
  }

  export type Project_usersMinAggregateOutputType = {
    project_user_id: string | null
    account_id: string | null
    project_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Project_usersMaxAggregateOutputType = {
    project_user_id: string | null
    account_id: string | null
    project_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Project_usersCountAggregateOutputType = {
    project_user_id: number
    account_id: number
    project_id: number
    user_id: number
    role: number
    label: number
    deleted: number
    _all: number
  }


  export type Project_usersMinAggregateInputType = {
    project_user_id?: true
    account_id?: true
    project_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Project_usersMaxAggregateInputType = {
    project_user_id?: true
    account_id?: true
    project_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Project_usersCountAggregateInputType = {
    project_user_id?: true
    account_id?: true
    project_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Project_usersAggregateArgs = {
    /**
     * Filter which Project_users to aggregate.
     */
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     */
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Project_users
    **/
    _count?: true | Project_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_usersMaxAggregateInputType
  }

  export type GetProject_usersAggregateType<T extends Project_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_users[P]>
      : GetScalarType<T[P], AggregateProject_users[P]>
  }




  export type Project_usersGroupByArgs = {
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithAggregationInput>
    by: Project_usersScalarFieldEnum[]
    having?: Project_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_usersCountAggregateInputType | true
    _min?: Project_usersMinAggregateInputType
    _max?: Project_usersMaxAggregateInputType
  }


  export type Project_usersGroupByOutputType = {
    project_user_id: string
    account_id: string | null
    project_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
    _count: Project_usersCountAggregateOutputType | null
    _min: Project_usersMinAggregateOutputType | null
    _max: Project_usersMaxAggregateOutputType | null
  }

  type GetProject_usersGroupByPayload<T extends Project_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Project_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Project_usersGroupByOutputType[P]>
        }
      >
    >


  export type Project_usersSelect = {
    project_user_id?: boolean
    account_id?: boolean
    project_id?: boolean
    user_id?: boolean
    role?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    users?: boolean | UsersArgs
  }


  export type Project_usersInclude = {
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    users?: boolean | UsersArgs
  }

  export type Project_usersGetPayload<S extends boolean | null | undefined | Project_usersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Project_users :
    S extends undefined ? never :
    S extends { include: any } & (Project_usersArgs | Project_usersFindManyArgs)
    ? Project_users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Project_usersArgs | Project_usersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :  P extends keyof Project_users ? Project_users[P] : never
  } 
      : Project_users


  type Project_usersCountArgs = 
    Omit<Project_usersFindManyArgs, 'select' | 'include'> & {
      select?: Project_usersCountAggregateInputType | true
    }

  export interface Project_usersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Project_users that matches the filter.
     * @param {Project_usersFindUniqueArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Project_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Project_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Project_users'> extends True ? Prisma__Project_usersClient<Project_usersGetPayload<T>> : Prisma__Project_usersClient<Project_usersGetPayload<T> | null, null>

    /**
     * Find one Project_users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Project_usersFindUniqueOrThrowArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Project_usersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Project_usersFindUniqueOrThrowArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Find the first Project_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersFindFirstArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Project_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Project_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Project_users'> extends True ? Prisma__Project_usersClient<Project_usersGetPayload<T>> : Prisma__Project_usersClient<Project_usersGetPayload<T> | null, null>

    /**
     * Find the first Project_users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersFindFirstOrThrowArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Project_usersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Project_usersFindFirstOrThrowArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Find zero or more Project_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_users
     * const project_users = await prisma.project_users.findMany()
     * 
     * // Get first 10 Project_users
     * const project_users = await prisma.project_users.findMany({ take: 10 })
     * 
     * // Only select the `project_user_id`
     * const project_usersWithProject_user_idOnly = await prisma.project_users.findMany({ select: { project_user_id: true } })
     * 
    **/
    findMany<T extends Project_usersFindManyArgs>(
      args?: SelectSubset<T, Project_usersFindManyArgs>
    ): Prisma.PrismaPromise<Array<Project_usersGetPayload<T>>>

    /**
     * Create a Project_users.
     * @param {Project_usersCreateArgs} args - Arguments to create a Project_users.
     * @example
     * // Create one Project_users
     * const Project_users = await prisma.project_users.create({
     *   data: {
     *     // ... data to create a Project_users
     *   }
     * })
     * 
    **/
    create<T extends Project_usersCreateArgs>(
      args: SelectSubset<T, Project_usersCreateArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Create many Project_users.
     *     @param {Project_usersCreateManyArgs} args - Arguments to create many Project_users.
     *     @example
     *     // Create many Project_users
     *     const project_users = await prisma.project_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Project_usersCreateManyArgs>(
      args?: SelectSubset<T, Project_usersCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Project_users.
     * @param {Project_usersDeleteArgs} args - Arguments to delete one Project_users.
     * @example
     * // Delete one Project_users
     * const Project_users = await prisma.project_users.delete({
     *   where: {
     *     // ... filter to delete one Project_users
     *   }
     * })
     * 
    **/
    delete<T extends Project_usersDeleteArgs>(
      args: SelectSubset<T, Project_usersDeleteArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Update one Project_users.
     * @param {Project_usersUpdateArgs} args - Arguments to update one Project_users.
     * @example
     * // Update one Project_users
     * const project_users = await prisma.project_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Project_usersUpdateArgs>(
      args: SelectSubset<T, Project_usersUpdateArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Delete zero or more Project_users.
     * @param {Project_usersDeleteManyArgs} args - Arguments to filter Project_users to delete.
     * @example
     * // Delete a few Project_users
     * const { count } = await prisma.project_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Project_usersDeleteManyArgs>(
      args?: SelectSubset<T, Project_usersDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_users
     * const project_users = await prisma.project_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Project_usersUpdateManyArgs>(
      args: SelectSubset<T, Project_usersUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Project_users.
     * @param {Project_usersUpsertArgs} args - Arguments to update or create a Project_users.
     * @example
     * // Update or create a Project_users
     * const project_users = await prisma.project_users.upsert({
     *   create: {
     *     // ... data to create a Project_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_users we want to update
     *   }
     * })
    **/
    upsert<T extends Project_usersUpsertArgs>(
      args: SelectSubset<T, Project_usersUpsertArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Count the number of Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersCountArgs} args - Arguments to filter Project_users to count.
     * @example
     * // Count the number of Project_users
     * const count = await prisma.project_users.count({
     *   where: {
     *     // ... the filter for the Project_users we want to count
     *   }
     * })
    **/
    count<T extends Project_usersCountArgs>(
      args?: Subset<T, Project_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_usersAggregateArgs>(args: Subset<T, Project_usersAggregateArgs>): Prisma.PrismaPromise<GetProject_usersAggregateType<T>>

    /**
     * Group by Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Project_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Project_usersGroupByArgs['orderBy'] }
        : { orderBy?: Project_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Project_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Project_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Project_usersClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    users<T extends UsersArgs= {}>(args?: Subset<T, UsersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Project_users base type for findUnique actions
   */
  export type Project_usersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     */
    where: Project_usersWhereUniqueInput
  }

  /**
   * Project_users findUnique
   */
  export interface Project_usersFindUniqueArgs extends Project_usersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project_users findUniqueOrThrow
   */
  export type Project_usersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     */
    where: Project_usersWhereUniqueInput
  }


  /**
   * Project_users base type for findFirst actions
   */
  export type Project_usersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     */
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     */
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Project_users.
     */
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Project_users.
     */
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }

  /**
   * Project_users findFirst
   */
  export interface Project_usersFindFirstArgs extends Project_usersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project_users findFirstOrThrow
   */
  export type Project_usersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     */
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     */
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Project_users.
     */
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Project_users.
     */
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Project_users findMany
   */
  export type Project_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     */
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     */
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Project_users.
     */
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     */
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Project_users create
   */
  export type Project_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * The data needed to create a Project_users.
     */
    data: XOR<Project_usersCreateInput, Project_usersUncheckedCreateInput>
  }


  /**
   * Project_users createMany
   */
  export type Project_usersCreateManyArgs = {
    /**
     * The data used to create many Project_users.
     */
    data: Enumerable<Project_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Project_users update
   */
  export type Project_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * The data needed to update a Project_users.
     */
    data: XOR<Project_usersUpdateInput, Project_usersUncheckedUpdateInput>
    /**
     * Choose, which Project_users to update.
     */
    where: Project_usersWhereUniqueInput
  }


  /**
   * Project_users updateMany
   */
  export type Project_usersUpdateManyArgs = {
    /**
     * The data used to update Project_users.
     */
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyInput>
    /**
     * Filter which Project_users to update
     */
    where?: Project_usersWhereInput
  }


  /**
   * Project_users upsert
   */
  export type Project_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * The filter to search for the Project_users to update in case it exists.
     */
    where: Project_usersWhereUniqueInput
    /**
     * In case the Project_users found by the `where` argument doesn't exist, create a new Project_users with this data.
     */
    create: XOR<Project_usersCreateInput, Project_usersUncheckedCreateInput>
    /**
     * In case the Project_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Project_usersUpdateInput, Project_usersUncheckedUpdateInput>
  }


  /**
   * Project_users delete
   */
  export type Project_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    /**
     * Filter which Project_users to delete.
     */
    where: Project_usersWhereUniqueInput
  }


  /**
   * Project_users deleteMany
   */
  export type Project_usersDeleteManyArgs = {
    /**
     * Filter which Project_users to delete
     */
    where?: Project_usersWhereInput
  }


  /**
   * Project_users without action
   */
  export type Project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
  }



  /**
   * Model Projects
   */


  export type AggregateProjects = {
    _count: ProjectsCountAggregateOutputType | null
    _min: ProjectsMinAggregateOutputType | null
    _max: ProjectsMaxAggregateOutputType | null
  }

  export type ProjectsMinAggregateOutputType = {
    project_id: string | null
    account_id: string | null
    name: string | null
    label: string | null
    type: string | null
    subproject_name_singular: string | null
    subproject_name_plural: string | null
    subproject_order_by: string | null
    places_label_by: string | null
    persons_label_by: string | null
    persons_order_by: string | null
    goal_reports_label_by: string | null
    goal_reports_order_by: string | null
    values_on_multiple_levels: string | null
    multiple_action_values_on_same_level: string | null
    multiple_check_values_on_same_level: string | null
    files_active_projects: boolean | null
    files_active_projects_reports: boolean | null
    files_active_subprojects: boolean | null
    files_active_subproject_reports: boolean | null
    files_active_places: boolean | null
    files_active_actions: boolean | null
    files_active_checks: boolean | null
    files_active_check_reports: boolean | null
    deleted: boolean | null
  }

  export type ProjectsMaxAggregateOutputType = {
    project_id: string | null
    account_id: string | null
    name: string | null
    label: string | null
    type: string | null
    subproject_name_singular: string | null
    subproject_name_plural: string | null
    subproject_order_by: string | null
    places_label_by: string | null
    persons_label_by: string | null
    persons_order_by: string | null
    goal_reports_label_by: string | null
    goal_reports_order_by: string | null
    values_on_multiple_levels: string | null
    multiple_action_values_on_same_level: string | null
    multiple_check_values_on_same_level: string | null
    files_active_projects: boolean | null
    files_active_projects_reports: boolean | null
    files_active_subprojects: boolean | null
    files_active_subproject_reports: boolean | null
    files_active_places: boolean | null
    files_active_actions: boolean | null
    files_active_checks: boolean | null
    files_active_check_reports: boolean | null
    deleted: boolean | null
  }

  export type ProjectsCountAggregateOutputType = {
    project_id: number
    account_id: number
    name: number
    label: number
    type: number
    subproject_name_singular: number
    subproject_name_plural: number
    subproject_order_by: number
    places_label_by: number
    places_order_by: number
    persons_label_by: number
    persons_order_by: number
    goal_reports_label_by: number
    goal_reports_order_by: number
    values_on_multiple_levels: number
    multiple_action_values_on_same_level: number
    multiple_check_values_on_same_level: number
    data: number
    files_active_projects: number
    files_active_projects_reports: number
    files_active_subprojects: number
    files_active_subproject_reports: number
    files_active_places: number
    files_active_actions: number
    files_active_checks: number
    files_active_check_reports: number
    deleted: number
    _all: number
  }


  export type ProjectsMinAggregateInputType = {
    project_id?: true
    account_id?: true
    name?: true
    label?: true
    type?: true
    subproject_name_singular?: true
    subproject_name_plural?: true
    subproject_order_by?: true
    places_label_by?: true
    persons_label_by?: true
    persons_order_by?: true
    goal_reports_label_by?: true
    goal_reports_order_by?: true
    values_on_multiple_levels?: true
    multiple_action_values_on_same_level?: true
    multiple_check_values_on_same_level?: true
    files_active_projects?: true
    files_active_projects_reports?: true
    files_active_subprojects?: true
    files_active_subproject_reports?: true
    files_active_places?: true
    files_active_actions?: true
    files_active_checks?: true
    files_active_check_reports?: true
    deleted?: true
  }

  export type ProjectsMaxAggregateInputType = {
    project_id?: true
    account_id?: true
    name?: true
    label?: true
    type?: true
    subproject_name_singular?: true
    subproject_name_plural?: true
    subproject_order_by?: true
    places_label_by?: true
    persons_label_by?: true
    persons_order_by?: true
    goal_reports_label_by?: true
    goal_reports_order_by?: true
    values_on_multiple_levels?: true
    multiple_action_values_on_same_level?: true
    multiple_check_values_on_same_level?: true
    files_active_projects?: true
    files_active_projects_reports?: true
    files_active_subprojects?: true
    files_active_subproject_reports?: true
    files_active_places?: true
    files_active_actions?: true
    files_active_checks?: true
    files_active_check_reports?: true
    deleted?: true
  }

  export type ProjectsCountAggregateInputType = {
    project_id?: true
    account_id?: true
    name?: true
    label?: true
    type?: true
    subproject_name_singular?: true
    subproject_name_plural?: true
    subproject_order_by?: true
    places_label_by?: true
    places_order_by?: true
    persons_label_by?: true
    persons_order_by?: true
    goal_reports_label_by?: true
    goal_reports_order_by?: true
    values_on_multiple_levels?: true
    multiple_action_values_on_same_level?: true
    multiple_check_values_on_same_level?: true
    data?: true
    files_active_projects?: true
    files_active_projects_reports?: true
    files_active_subprojects?: true
    files_active_subproject_reports?: true
    files_active_places?: true
    files_active_actions?: true
    files_active_checks?: true
    files_active_check_reports?: true
    deleted?: true
    _all?: true
  }

  export type ProjectsAggregateArgs = {
    /**
     * Filter which Projects to aggregate.
     */
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectsMaxAggregateInputType
  }

  export type GetProjectsAggregateType<T extends ProjectsAggregateArgs> = {
        [P in keyof T & keyof AggregateProjects]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjects[P]>
      : GetScalarType<T[P], AggregateProjects[P]>
  }




  export type ProjectsGroupByArgs = {
    where?: ProjectsWhereInput
    orderBy?: Enumerable<ProjectsOrderByWithAggregationInput>
    by: ProjectsScalarFieldEnum[]
    having?: ProjectsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectsCountAggregateInputType | true
    _min?: ProjectsMinAggregateInputType
    _max?: ProjectsMaxAggregateInputType
  }


  export type ProjectsGroupByOutputType = {
    project_id: string
    account_id: string | null
    name: string | null
    label: string | null
    type: string | null
    subproject_name_singular: string | null
    subproject_name_plural: string | null
    subproject_order_by: string | null
    places_label_by: string | null
    places_order_by: JsonValue | null
    persons_label_by: string | null
    persons_order_by: string | null
    goal_reports_label_by: string | null
    goal_reports_order_by: string | null
    values_on_multiple_levels: string | null
    multiple_action_values_on_same_level: string | null
    multiple_check_values_on_same_level: string | null
    data: JsonValue | null
    files_active_projects: boolean | null
    files_active_projects_reports: boolean | null
    files_active_subprojects: boolean | null
    files_active_subproject_reports: boolean | null
    files_active_places: boolean | null
    files_active_actions: boolean | null
    files_active_checks: boolean | null
    files_active_check_reports: boolean | null
    deleted: boolean | null
    _count: ProjectsCountAggregateOutputType | null
    _min: ProjectsMinAggregateOutputType | null
    _max: ProjectsMaxAggregateOutputType | null
  }

  type GetProjectsGroupByPayload<T extends ProjectsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<ProjectsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectsGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectsGroupByOutputType[P]>
        }
      >
    >


  export type ProjectsSelect = {
    project_id?: boolean
    account_id?: boolean
    name?: boolean
    label?: boolean
    type?: boolean
    subproject_name_singular?: boolean
    subproject_name_plural?: boolean
    subproject_order_by?: boolean
    places_label_by?: boolean
    places_order_by?: boolean
    persons_label_by?: boolean
    persons_order_by?: boolean
    goal_reports_label_by?: boolean
    goal_reports_order_by?: boolean
    values_on_multiple_levels?: boolean
    multiple_action_values_on_same_level?: boolean
    multiple_check_values_on_same_level?: boolean
    data?: boolean
    files_active_projects?: boolean
    files_active_projects_reports?: boolean
    files_active_subprojects?: boolean
    files_active_subproject_reports?: boolean
    files_active_places?: boolean
    files_active_actions?: boolean
    files_active_checks?: boolean
    files_active_check_reports?: boolean
    deleted?: boolean
    fields?: boolean | Projects$fieldsArgs
    files?: boolean | Projects$filesArgs
    lists?: boolean | Projects$listsArgs
    observation_sources?: boolean | Projects$observation_sourcesArgs
    persons?: boolean | Projects$personsArgs
    place_levels?: boolean | Projects$place_levelsArgs
    project_reports?: boolean | Projects$project_reportsArgs
    project_users?: boolean | Projects$project_usersArgs
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | Projects$subprojectsArgs
    taxonomies?: boolean | Projects$taxonomiesArgs
    units?: boolean | Projects$unitsArgs
    _count?: boolean | ProjectsCountOutputTypeArgs
  }


  export type ProjectsInclude = {
    fields?: boolean | Projects$fieldsArgs
    files?: boolean | Projects$filesArgs
    lists?: boolean | Projects$listsArgs
    observation_sources?: boolean | Projects$observation_sourcesArgs
    persons?: boolean | Projects$personsArgs
    place_levels?: boolean | Projects$place_levelsArgs
    project_reports?: boolean | Projects$project_reportsArgs
    project_users?: boolean | Projects$project_usersArgs
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | Projects$subprojectsArgs
    taxonomies?: boolean | Projects$taxonomiesArgs
    units?: boolean | Projects$unitsArgs
    _count?: boolean | ProjectsCountOutputTypeArgs
  }

  export type ProjectsGetPayload<S extends boolean | null | undefined | ProjectsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Projects :
    S extends undefined ? never :
    S extends { include: any } & (ProjectsArgs | ProjectsFindManyArgs)
    ? Projects  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['include'][P]>>  :
        P extends 'files' ? Array < FilesGetPayload<S['include'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['include'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['include'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['include'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['include'][P]>>  :
        P extends 'project_reports' ? Array < Project_reportsGetPayload<S['include'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['include'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['include'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['include'][P]>>  :
        P extends '_count' ? ProjectsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ProjectsArgs | ProjectsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['select'][P]>>  :
        P extends 'files' ? Array < FilesGetPayload<S['select'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['select'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['select'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['select'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['select'][P]>>  :
        P extends 'project_reports' ? Array < Project_reportsGetPayload<S['select'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['select'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['select'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['select'][P]>>  :
        P extends '_count' ? ProjectsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Projects ? Projects[P] : never
  } 
      : Projects


  type ProjectsCountArgs = 
    Omit<ProjectsFindManyArgs, 'select' | 'include'> & {
      select?: ProjectsCountAggregateInputType | true
    }

  export interface ProjectsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Projects that matches the filter.
     * @param {ProjectsFindUniqueArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProjectsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProjectsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Projects'> extends True ? Prisma__ProjectsClient<ProjectsGetPayload<T>> : Prisma__ProjectsClient<ProjectsGetPayload<T> | null, null>

    /**
     * Find one Projects that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ProjectsFindUniqueOrThrowArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ProjectsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ProjectsFindUniqueOrThrowArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Find the first Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsFindFirstArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProjectsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProjectsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Projects'> extends True ? Prisma__ProjectsClient<ProjectsGetPayload<T>> : Prisma__ProjectsClient<ProjectsGetPayload<T> | null, null>

    /**
     * Find the first Projects that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsFindFirstOrThrowArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ProjectsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ProjectsFindFirstOrThrowArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.projects.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.projects.findMany({ take: 10 })
     * 
     * // Only select the `project_id`
     * const projectsWithProject_idOnly = await prisma.projects.findMany({ select: { project_id: true } })
     * 
    **/
    findMany<T extends ProjectsFindManyArgs>(
      args?: SelectSubset<T, ProjectsFindManyArgs>
    ): Prisma.PrismaPromise<Array<ProjectsGetPayload<T>>>

    /**
     * Create a Projects.
     * @param {ProjectsCreateArgs} args - Arguments to create a Projects.
     * @example
     * // Create one Projects
     * const Projects = await prisma.projects.create({
     *   data: {
     *     // ... data to create a Projects
     *   }
     * })
     * 
    **/
    create<T extends ProjectsCreateArgs>(
      args: SelectSubset<T, ProjectsCreateArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Create many Projects.
     *     @param {ProjectsCreateManyArgs} args - Arguments to create many Projects.
     *     @example
     *     // Create many Projects
     *     const projects = await prisma.projects.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProjectsCreateManyArgs>(
      args?: SelectSubset<T, ProjectsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Projects.
     * @param {ProjectsDeleteArgs} args - Arguments to delete one Projects.
     * @example
     * // Delete one Projects
     * const Projects = await prisma.projects.delete({
     *   where: {
     *     // ... filter to delete one Projects
     *   }
     * })
     * 
    **/
    delete<T extends ProjectsDeleteArgs>(
      args: SelectSubset<T, ProjectsDeleteArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Update one Projects.
     * @param {ProjectsUpdateArgs} args - Arguments to update one Projects.
     * @example
     * // Update one Projects
     * const projects = await prisma.projects.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProjectsUpdateArgs>(
      args: SelectSubset<T, ProjectsUpdateArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Delete zero or more Projects.
     * @param {ProjectsDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.projects.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProjectsDeleteManyArgs>(
      args?: SelectSubset<T, ProjectsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const projects = await prisma.projects.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProjectsUpdateManyArgs>(
      args: SelectSubset<T, ProjectsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Projects.
     * @param {ProjectsUpsertArgs} args - Arguments to update or create a Projects.
     * @example
     * // Update or create a Projects
     * const projects = await prisma.projects.upsert({
     *   create: {
     *     // ... data to create a Projects
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Projects we want to update
     *   }
     * })
    **/
    upsert<T extends ProjectsUpsertArgs>(
      args: SelectSubset<T, ProjectsUpsertArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.projects.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectsCountArgs>(
      args?: Subset<T, ProjectsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectsAggregateArgs>(args: Subset<T, ProjectsAggregateArgs>): Prisma.PrismaPromise<GetProjectsAggregateType<T>>

    /**
     * Group by Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectsGroupByArgs['orderBy'] }
        : { orderBy?: ProjectsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Projects.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProjectsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    fields<T extends Projects$fieldsArgs= {}>(args?: Subset<T, Projects$fieldsArgs>): Prisma.PrismaPromise<Array<FieldsGetPayload<T>>| Null>;

    files<T extends Projects$filesArgs= {}>(args?: Subset<T, Projects$filesArgs>): Prisma.PrismaPromise<Array<FilesGetPayload<T>>| Null>;

    lists<T extends Projects$listsArgs= {}>(args?: Subset<T, Projects$listsArgs>): Prisma.PrismaPromise<Array<ListsGetPayload<T>>| Null>;

    observation_sources<T extends Projects$observation_sourcesArgs= {}>(args?: Subset<T, Projects$observation_sourcesArgs>): Prisma.PrismaPromise<Array<Observation_sourcesGetPayload<T>>| Null>;

    persons<T extends Projects$personsArgs= {}>(args?: Subset<T, Projects$personsArgs>): Prisma.PrismaPromise<Array<PersonsGetPayload<T>>| Null>;

    place_levels<T extends Projects$place_levelsArgs= {}>(args?: Subset<T, Projects$place_levelsArgs>): Prisma.PrismaPromise<Array<Place_levelsGetPayload<T>>| Null>;

    project_reports<T extends Projects$project_reportsArgs= {}>(args?: Subset<T, Projects$project_reportsArgs>): Prisma.PrismaPromise<Array<Project_reportsGetPayload<T>>| Null>;

    project_users<T extends Projects$project_usersArgs= {}>(args?: Subset<T, Projects$project_usersArgs>): Prisma.PrismaPromise<Array<Project_usersGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends Projects$subprojectsArgs= {}>(args?: Subset<T, Projects$subprojectsArgs>): Prisma.PrismaPromise<Array<SubprojectsGetPayload<T>>| Null>;

    taxonomies<T extends Projects$taxonomiesArgs= {}>(args?: Subset<T, Projects$taxonomiesArgs>): Prisma.PrismaPromise<Array<TaxonomiesGetPayload<T>>| Null>;

    units<T extends Projects$unitsArgs= {}>(args?: Subset<T, Projects$unitsArgs>): Prisma.PrismaPromise<Array<UnitsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Projects base type for findUnique actions
   */
  export type ProjectsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     */
    where: ProjectsWhereUniqueInput
  }

  /**
   * Projects findUnique
   */
  export interface ProjectsFindUniqueArgs extends ProjectsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Projects findUniqueOrThrow
   */
  export type ProjectsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     */
    where: ProjectsWhereUniqueInput
  }


  /**
   * Projects base type for findFirst actions
   */
  export type ProjectsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }

  /**
   * Projects findFirst
   */
  export interface ProjectsFindFirstArgs extends ProjectsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Projects findFirstOrThrow
   */
  export type ProjectsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     */
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     */
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }


  /**
   * Projects findMany
   */
  export type ProjectsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     */
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     */
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     */
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     */
    skip?: number
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }


  /**
   * Projects create
   */
  export type ProjectsCreateArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * The data needed to create a Projects.
     */
    data: XOR<ProjectsCreateInput, ProjectsUncheckedCreateInput>
  }


  /**
   * Projects createMany
   */
  export type ProjectsCreateManyArgs = {
    /**
     * The data used to create many Projects.
     */
    data: Enumerable<ProjectsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Projects update
   */
  export type ProjectsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * The data needed to update a Projects.
     */
    data: XOR<ProjectsUpdateInput, ProjectsUncheckedUpdateInput>
    /**
     * Choose, which Projects to update.
     */
    where: ProjectsWhereUniqueInput
  }


  /**
   * Projects updateMany
   */
  export type ProjectsUpdateManyArgs = {
    /**
     * The data used to update Projects.
     */
    data: XOR<ProjectsUpdateManyMutationInput, ProjectsUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     */
    where?: ProjectsWhereInput
  }


  /**
   * Projects upsert
   */
  export type ProjectsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * The filter to search for the Projects to update in case it exists.
     */
    where: ProjectsWhereUniqueInput
    /**
     * In case the Projects found by the `where` argument doesn't exist, create a new Projects with this data.
     */
    create: XOR<ProjectsCreateInput, ProjectsUncheckedCreateInput>
    /**
     * In case the Projects was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProjectsUpdateInput, ProjectsUncheckedUpdateInput>
  }


  /**
   * Projects delete
   */
  export type ProjectsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
    /**
     * Filter which Projects to delete.
     */
    where: ProjectsWhereUniqueInput
  }


  /**
   * Projects deleteMany
   */
  export type ProjectsDeleteManyArgs = {
    /**
     * Filter which Projects to delete
     */
    where?: ProjectsWhereInput
  }


  /**
   * Projects.fields
   */
  export type Projects$fieldsArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    where?: FieldsWhereInput
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    cursor?: FieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }


  /**
   * Projects.files
   */
  export type Projects$filesArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    where?: FilesWhereInput
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    cursor?: FilesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Projects.lists
   */
  export type Projects$listsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     */
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ListsInclude | null
    where?: ListsWhereInput
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    cursor?: ListsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Projects.observation_sources
   */
  export type Projects$observation_sourcesArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     */
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Observation_sourcesInclude | null
    where?: Observation_sourcesWhereInput
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    cursor?: Observation_sourcesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Projects.persons
   */
  export type Projects$personsArgs = {
    /**
     * Select specific fields to fetch from the Persons
     */
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PersonsInclude | null
    where?: PersonsWhereInput
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    cursor?: PersonsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Projects.place_levels
   */
  export type Projects$place_levelsArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     */
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_levelsInclude | null
    where?: Place_levelsWhereInput
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    cursor?: Place_levelsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Projects.project_reports
   */
  export type Projects$project_reportsArgs = {
    /**
     * Select specific fields to fetch from the Project_reports
     */
    select?: Project_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_reportsInclude | null
    where?: Project_reportsWhereInput
    orderBy?: Enumerable<Project_reportsOrderByWithRelationInput>
    cursor?: Project_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_reportsScalarFieldEnum>
  }


  /**
   * Projects.project_users
   */
  export type Projects$project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    cursor?: Project_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Projects.subprojects
   */
  export type Projects$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    cursor?: SubprojectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Projects.taxonomies
   */
  export type Projects$taxonomiesArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    where?: TaxonomiesWhereInput
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    cursor?: TaxonomiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Projects.units
   */
  export type Projects$unitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    cursor?: UnitsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Projects without action
   */
  export type ProjectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     */
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ProjectsInclude | null
  }



  /**
   * Model Subproject_reports
   */


  export type AggregateSubproject_reports = {
    _count: Subproject_reportsCountAggregateOutputType | null
    _avg: Subproject_reportsAvgAggregateOutputType | null
    _sum: Subproject_reportsSumAggregateOutputType | null
    _min: Subproject_reportsMinAggregateOutputType | null
    _max: Subproject_reportsMaxAggregateOutputType | null
  }

  export type Subproject_reportsAvgAggregateOutputType = {
    year: number | null
  }

  export type Subproject_reportsSumAggregateOutputType = {
    year: number | null
  }

  export type Subproject_reportsMinAggregateOutputType = {
    subproject_report_id: string | null
    account_id: string | null
    subproject_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_reportsMaxAggregateOutputType = {
    subproject_report_id: string | null
    account_id: string | null
    subproject_id: string | null
    year: number | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_reportsCountAggregateOutputType = {
    subproject_report_id: number
    account_id: number
    subproject_id: number
    year: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type Subproject_reportsAvgAggregateInputType = {
    year?: true
  }

  export type Subproject_reportsSumAggregateInputType = {
    year?: true
  }

  export type Subproject_reportsMinAggregateInputType = {
    subproject_report_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Subproject_reportsMaxAggregateInputType = {
    subproject_report_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    label?: true
    deleted?: true
  }

  export type Subproject_reportsCountAggregateInputType = {
    subproject_report_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Subproject_reportsAggregateArgs = {
    /**
     * Filter which Subproject_reports to aggregate.
     */
    where?: Subproject_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_reports to fetch.
     */
    orderBy?: Enumerable<Subproject_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Subproject_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subproject_reports
    **/
    _count?: true | Subproject_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Subproject_reportsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Subproject_reportsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subproject_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subproject_reportsMaxAggregateInputType
  }

  export type GetSubproject_reportsAggregateType<T extends Subproject_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubproject_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubproject_reports[P]>
      : GetScalarType<T[P], AggregateSubproject_reports[P]>
  }




  export type Subproject_reportsGroupByArgs = {
    where?: Subproject_reportsWhereInput
    orderBy?: Enumerable<Subproject_reportsOrderByWithAggregationInput>
    by: Subproject_reportsScalarFieldEnum[]
    having?: Subproject_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subproject_reportsCountAggregateInputType | true
    _avg?: Subproject_reportsAvgAggregateInputType
    _sum?: Subproject_reportsSumAggregateInputType
    _min?: Subproject_reportsMinAggregateInputType
    _max?: Subproject_reportsMaxAggregateInputType
  }


  export type Subproject_reportsGroupByOutputType = {
    subproject_report_id: string
    account_id: string | null
    subproject_id: string | null
    year: number | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: Subproject_reportsCountAggregateOutputType | null
    _avg: Subproject_reportsAvgAggregateOutputType | null
    _sum: Subproject_reportsSumAggregateOutputType | null
    _min: Subproject_reportsMinAggregateOutputType | null
    _max: Subproject_reportsMaxAggregateOutputType | null
  }

  type GetSubproject_reportsGroupByPayload<T extends Subproject_reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Subproject_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subproject_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subproject_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Subproject_reportsGroupByOutputType[P]>
        }
      >
    >


  export type Subproject_reportsSelect = {
    subproject_report_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    year?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
  }


  export type Subproject_reportsInclude = {
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
  }

  export type Subproject_reportsGetPayload<S extends boolean | null | undefined | Subproject_reportsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Subproject_reports :
    S extends undefined ? never :
    S extends { include: any } & (Subproject_reportsArgs | Subproject_reportsFindManyArgs)
    ? Subproject_reports  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Subproject_reportsArgs | Subproject_reportsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :  P extends keyof Subproject_reports ? Subproject_reports[P] : never
  } 
      : Subproject_reports


  type Subproject_reportsCountArgs = 
    Omit<Subproject_reportsFindManyArgs, 'select' | 'include'> & {
      select?: Subproject_reportsCountAggregateInputType | true
    }

  export interface Subproject_reportsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Subproject_reports that matches the filter.
     * @param {Subproject_reportsFindUniqueArgs} args - Arguments to find a Subproject_reports
     * @example
     * // Get one Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Subproject_reportsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Subproject_reportsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Subproject_reports'> extends True ? Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>> : Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T> | null, null>

    /**
     * Find one Subproject_reports that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Subproject_reportsFindUniqueOrThrowArgs} args - Arguments to find a Subproject_reports
     * @example
     * // Get one Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Subproject_reportsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Subproject_reportsFindUniqueOrThrowArgs>
    ): Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>>

    /**
     * Find the first Subproject_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_reportsFindFirstArgs} args - Arguments to find a Subproject_reports
     * @example
     * // Get one Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Subproject_reportsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Subproject_reportsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Subproject_reports'> extends True ? Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>> : Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T> | null, null>

    /**
     * Find the first Subproject_reports that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_reportsFindFirstOrThrowArgs} args - Arguments to find a Subproject_reports
     * @example
     * // Get one Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Subproject_reportsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Subproject_reportsFindFirstOrThrowArgs>
    ): Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>>

    /**
     * Find zero or more Subproject_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_reportsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.findMany()
     * 
     * // Get first 10 Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.findMany({ take: 10 })
     * 
     * // Only select the `subproject_report_id`
     * const subproject_reportsWithSubproject_report_idOnly = await prisma.subproject_reports.findMany({ select: { subproject_report_id: true } })
     * 
    **/
    findMany<T extends Subproject_reportsFindManyArgs>(
      args?: SelectSubset<T, Subproject_reportsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Subproject_reportsGetPayload<T>>>

    /**
     * Create a Subproject_reports.
     * @param {Subproject_reportsCreateArgs} args - Arguments to create a Subproject_reports.
     * @example
     * // Create one Subproject_reports
     * const Subproject_reports = await prisma.subproject_reports.create({
     *   data: {
     *     // ... data to create a Subproject_reports
     *   }
     * })
     * 
    **/
    create<T extends Subproject_reportsCreateArgs>(
      args: SelectSubset<T, Subproject_reportsCreateArgs>
    ): Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>>

    /**
     * Create many Subproject_reports.
     *     @param {Subproject_reportsCreateManyArgs} args - Arguments to create many Subproject_reports.
     *     @example
     *     // Create many Subproject_reports
     *     const subproject_reports = await prisma.subproject_reports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Subproject_reportsCreateManyArgs>(
      args?: SelectSubset<T, Subproject_reportsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Subproject_reports.
     * @param {Subproject_reportsDeleteArgs} args - Arguments to delete one Subproject_reports.
     * @example
     * // Delete one Subproject_reports
     * const Subproject_reports = await prisma.subproject_reports.delete({
     *   where: {
     *     // ... filter to delete one Subproject_reports
     *   }
     * })
     * 
    **/
    delete<T extends Subproject_reportsDeleteArgs>(
      args: SelectSubset<T, Subproject_reportsDeleteArgs>
    ): Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>>

    /**
     * Update one Subproject_reports.
     * @param {Subproject_reportsUpdateArgs} args - Arguments to update one Subproject_reports.
     * @example
     * // Update one Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Subproject_reportsUpdateArgs>(
      args: SelectSubset<T, Subproject_reportsUpdateArgs>
    ): Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>>

    /**
     * Delete zero or more Subproject_reports.
     * @param {Subproject_reportsDeleteManyArgs} args - Arguments to filter Subproject_reports to delete.
     * @example
     * // Delete a few Subproject_reports
     * const { count } = await prisma.subproject_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Subproject_reportsDeleteManyArgs>(
      args?: SelectSubset<T, Subproject_reportsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subproject_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Subproject_reportsUpdateManyArgs>(
      args: SelectSubset<T, Subproject_reportsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subproject_reports.
     * @param {Subproject_reportsUpsertArgs} args - Arguments to update or create a Subproject_reports.
     * @example
     * // Update or create a Subproject_reports
     * const subproject_reports = await prisma.subproject_reports.upsert({
     *   create: {
     *     // ... data to create a Subproject_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subproject_reports we want to update
     *   }
     * })
    **/
    upsert<T extends Subproject_reportsUpsertArgs>(
      args: SelectSubset<T, Subproject_reportsUpsertArgs>
    ): Prisma__Subproject_reportsClient<Subproject_reportsGetPayload<T>>

    /**
     * Count the number of Subproject_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_reportsCountArgs} args - Arguments to filter Subproject_reports to count.
     * @example
     * // Count the number of Subproject_reports
     * const count = await prisma.subproject_reports.count({
     *   where: {
     *     // ... the filter for the Subproject_reports we want to count
     *   }
     * })
    **/
    count<T extends Subproject_reportsCountArgs>(
      args?: Subset<T, Subproject_reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subproject_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subproject_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subproject_reportsAggregateArgs>(args: Subset<T, Subproject_reportsAggregateArgs>): Prisma.PrismaPromise<GetSubproject_reportsAggregateType<T>>

    /**
     * Group by Subproject_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Subproject_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Subproject_reportsGroupByArgs['orderBy'] }
        : { orderBy?: Subproject_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Subproject_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubproject_reportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Subproject_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Subproject_reportsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends SubprojectsArgs= {}>(args?: Subset<T, SubprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Subproject_reports base type for findUnique actions
   */
  export type Subproject_reportsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * Filter, which Subproject_reports to fetch.
     */
    where: Subproject_reportsWhereUniqueInput
  }

  /**
   * Subproject_reports findUnique
   */
  export interface Subproject_reportsFindUniqueArgs extends Subproject_reportsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_reports findUniqueOrThrow
   */
  export type Subproject_reportsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * Filter, which Subproject_reports to fetch.
     */
    where: Subproject_reportsWhereUniqueInput
  }


  /**
   * Subproject_reports base type for findFirst actions
   */
  export type Subproject_reportsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * Filter, which Subproject_reports to fetch.
     */
    where?: Subproject_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_reports to fetch.
     */
    orderBy?: Enumerable<Subproject_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_reports.
     */
    cursor?: Subproject_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_reports.
     */
    distinct?: Enumerable<Subproject_reportsScalarFieldEnum>
  }

  /**
   * Subproject_reports findFirst
   */
  export interface Subproject_reportsFindFirstArgs extends Subproject_reportsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_reports findFirstOrThrow
   */
  export type Subproject_reportsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * Filter, which Subproject_reports to fetch.
     */
    where?: Subproject_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_reports to fetch.
     */
    orderBy?: Enumerable<Subproject_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_reports.
     */
    cursor?: Subproject_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_reports.
     */
    distinct?: Enumerable<Subproject_reportsScalarFieldEnum>
  }


  /**
   * Subproject_reports findMany
   */
  export type Subproject_reportsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * Filter, which Subproject_reports to fetch.
     */
    where?: Subproject_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_reports to fetch.
     */
    orderBy?: Enumerable<Subproject_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subproject_reports.
     */
    cursor?: Subproject_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_reports.
     */
    skip?: number
    distinct?: Enumerable<Subproject_reportsScalarFieldEnum>
  }


  /**
   * Subproject_reports create
   */
  export type Subproject_reportsCreateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * The data needed to create a Subproject_reports.
     */
    data: XOR<Subproject_reportsCreateInput, Subproject_reportsUncheckedCreateInput>
  }


  /**
   * Subproject_reports createMany
   */
  export type Subproject_reportsCreateManyArgs = {
    /**
     * The data used to create many Subproject_reports.
     */
    data: Enumerable<Subproject_reportsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Subproject_reports update
   */
  export type Subproject_reportsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * The data needed to update a Subproject_reports.
     */
    data: XOR<Subproject_reportsUpdateInput, Subproject_reportsUncheckedUpdateInput>
    /**
     * Choose, which Subproject_reports to update.
     */
    where: Subproject_reportsWhereUniqueInput
  }


  /**
   * Subproject_reports updateMany
   */
  export type Subproject_reportsUpdateManyArgs = {
    /**
     * The data used to update Subproject_reports.
     */
    data: XOR<Subproject_reportsUpdateManyMutationInput, Subproject_reportsUncheckedUpdateManyInput>
    /**
     * Filter which Subproject_reports to update
     */
    where?: Subproject_reportsWhereInput
  }


  /**
   * Subproject_reports upsert
   */
  export type Subproject_reportsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * The filter to search for the Subproject_reports to update in case it exists.
     */
    where: Subproject_reportsWhereUniqueInput
    /**
     * In case the Subproject_reports found by the `where` argument doesn't exist, create a new Subproject_reports with this data.
     */
    create: XOR<Subproject_reportsCreateInput, Subproject_reportsUncheckedCreateInput>
    /**
     * In case the Subproject_reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Subproject_reportsUpdateInput, Subproject_reportsUncheckedUpdateInput>
  }


  /**
   * Subproject_reports delete
   */
  export type Subproject_reportsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    /**
     * Filter which Subproject_reports to delete.
     */
    where: Subproject_reportsWhereUniqueInput
  }


  /**
   * Subproject_reports deleteMany
   */
  export type Subproject_reportsDeleteManyArgs = {
    /**
     * Filter which Subproject_reports to delete
     */
    where?: Subproject_reportsWhereInput
  }


  /**
   * Subproject_reports without action
   */
  export type Subproject_reportsArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
  }



  /**
   * Model Subproject_taxa
   */


  export type AggregateSubproject_taxa = {
    _count: Subproject_taxaCountAggregateOutputType | null
    _min: Subproject_taxaMinAggregateOutputType | null
    _max: Subproject_taxaMaxAggregateOutputType | null
  }

  export type Subproject_taxaMinAggregateOutputType = {
    subproject_taxon_id: string | null
    account_id: string | null
    subproject_id: string | null
    taxon_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_taxaMaxAggregateOutputType = {
    subproject_taxon_id: string | null
    account_id: string | null
    subproject_id: string | null
    taxon_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_taxaCountAggregateOutputType = {
    subproject_taxon_id: number
    account_id: number
    subproject_id: number
    taxon_id: number
    label: number
    deleted: number
    _all: number
  }


  export type Subproject_taxaMinAggregateInputType = {
    subproject_taxon_id?: true
    account_id?: true
    subproject_id?: true
    taxon_id?: true
    label?: true
    deleted?: true
  }

  export type Subproject_taxaMaxAggregateInputType = {
    subproject_taxon_id?: true
    account_id?: true
    subproject_id?: true
    taxon_id?: true
    label?: true
    deleted?: true
  }

  export type Subproject_taxaCountAggregateInputType = {
    subproject_taxon_id?: true
    account_id?: true
    subproject_id?: true
    taxon_id?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Subproject_taxaAggregateArgs = {
    /**
     * Filter which Subproject_taxa to aggregate.
     */
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     */
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subproject_taxas
    **/
    _count?: true | Subproject_taxaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subproject_taxaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subproject_taxaMaxAggregateInputType
  }

  export type GetSubproject_taxaAggregateType<T extends Subproject_taxaAggregateArgs> = {
        [P in keyof T & keyof AggregateSubproject_taxa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubproject_taxa[P]>
      : GetScalarType<T[P], AggregateSubproject_taxa[P]>
  }




  export type Subproject_taxaGroupByArgs = {
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithAggregationInput>
    by: Subproject_taxaScalarFieldEnum[]
    having?: Subproject_taxaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subproject_taxaCountAggregateInputType | true
    _min?: Subproject_taxaMinAggregateInputType
    _max?: Subproject_taxaMaxAggregateInputType
  }


  export type Subproject_taxaGroupByOutputType = {
    subproject_taxon_id: string
    account_id: string | null
    subproject_id: string | null
    taxon_id: string | null
    label: string | null
    deleted: boolean | null
    _count: Subproject_taxaCountAggregateOutputType | null
    _min: Subproject_taxaMinAggregateOutputType | null
    _max: Subproject_taxaMaxAggregateOutputType | null
  }

  type GetSubproject_taxaGroupByPayload<T extends Subproject_taxaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Subproject_taxaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subproject_taxaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subproject_taxaGroupByOutputType[P]>
            : GetScalarType<T[P], Subproject_taxaGroupByOutputType[P]>
        }
      >
    >


  export type Subproject_taxaSelect = {
    subproject_taxon_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    taxon_id?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
    taxa?: boolean | TaxaArgs
  }


  export type Subproject_taxaInclude = {
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
    taxa?: boolean | TaxaArgs
  }

  export type Subproject_taxaGetPayload<S extends boolean | null | undefined | Subproject_taxaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Subproject_taxa :
    S extends undefined ? never :
    S extends { include: any } & (Subproject_taxaArgs | Subproject_taxaFindManyArgs)
    ? Subproject_taxa  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :
        P extends 'taxa' ? TaxaGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Subproject_taxaArgs | Subproject_taxaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :
        P extends 'taxa' ? TaxaGetPayload<S['select'][P]> | null :  P extends keyof Subproject_taxa ? Subproject_taxa[P] : never
  } 
      : Subproject_taxa


  type Subproject_taxaCountArgs = 
    Omit<Subproject_taxaFindManyArgs, 'select' | 'include'> & {
      select?: Subproject_taxaCountAggregateInputType | true
    }

  export interface Subproject_taxaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Subproject_taxa that matches the filter.
     * @param {Subproject_taxaFindUniqueArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Subproject_taxaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Subproject_taxaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Subproject_taxa'> extends True ? Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>> : Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T> | null, null>

    /**
     * Find one Subproject_taxa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Subproject_taxaFindUniqueOrThrowArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Subproject_taxaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Subproject_taxaFindUniqueOrThrowArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Find the first Subproject_taxa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaFindFirstArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Subproject_taxaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Subproject_taxaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Subproject_taxa'> extends True ? Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>> : Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T> | null, null>

    /**
     * Find the first Subproject_taxa that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaFindFirstOrThrowArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Subproject_taxaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Subproject_taxaFindFirstOrThrowArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Find zero or more Subproject_taxas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subproject_taxas
     * const subproject_taxas = await prisma.subproject_taxa.findMany()
     * 
     * // Get first 10 Subproject_taxas
     * const subproject_taxas = await prisma.subproject_taxa.findMany({ take: 10 })
     * 
     * // Only select the `subproject_taxon_id`
     * const subproject_taxaWithSubproject_taxon_idOnly = await prisma.subproject_taxa.findMany({ select: { subproject_taxon_id: true } })
     * 
    **/
    findMany<T extends Subproject_taxaFindManyArgs>(
      args?: SelectSubset<T, Subproject_taxaFindManyArgs>
    ): Prisma.PrismaPromise<Array<Subproject_taxaGetPayload<T>>>

    /**
     * Create a Subproject_taxa.
     * @param {Subproject_taxaCreateArgs} args - Arguments to create a Subproject_taxa.
     * @example
     * // Create one Subproject_taxa
     * const Subproject_taxa = await prisma.subproject_taxa.create({
     *   data: {
     *     // ... data to create a Subproject_taxa
     *   }
     * })
     * 
    **/
    create<T extends Subproject_taxaCreateArgs>(
      args: SelectSubset<T, Subproject_taxaCreateArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Create many Subproject_taxas.
     *     @param {Subproject_taxaCreateManyArgs} args - Arguments to create many Subproject_taxas.
     *     @example
     *     // Create many Subproject_taxas
     *     const subproject_taxa = await prisma.subproject_taxa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Subproject_taxaCreateManyArgs>(
      args?: SelectSubset<T, Subproject_taxaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Subproject_taxa.
     * @param {Subproject_taxaDeleteArgs} args - Arguments to delete one Subproject_taxa.
     * @example
     * // Delete one Subproject_taxa
     * const Subproject_taxa = await prisma.subproject_taxa.delete({
     *   where: {
     *     // ... filter to delete one Subproject_taxa
     *   }
     * })
     * 
    **/
    delete<T extends Subproject_taxaDeleteArgs>(
      args: SelectSubset<T, Subproject_taxaDeleteArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Update one Subproject_taxa.
     * @param {Subproject_taxaUpdateArgs} args - Arguments to update one Subproject_taxa.
     * @example
     * // Update one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Subproject_taxaUpdateArgs>(
      args: SelectSubset<T, Subproject_taxaUpdateArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Delete zero or more Subproject_taxas.
     * @param {Subproject_taxaDeleteManyArgs} args - Arguments to filter Subproject_taxas to delete.
     * @example
     * // Delete a few Subproject_taxas
     * const { count } = await prisma.subproject_taxa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Subproject_taxaDeleteManyArgs>(
      args?: SelectSubset<T, Subproject_taxaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subproject_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subproject_taxas
     * const subproject_taxa = await prisma.subproject_taxa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Subproject_taxaUpdateManyArgs>(
      args: SelectSubset<T, Subproject_taxaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subproject_taxa.
     * @param {Subproject_taxaUpsertArgs} args - Arguments to update or create a Subproject_taxa.
     * @example
     * // Update or create a Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.upsert({
     *   create: {
     *     // ... data to create a Subproject_taxa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subproject_taxa we want to update
     *   }
     * })
    **/
    upsert<T extends Subproject_taxaUpsertArgs>(
      args: SelectSubset<T, Subproject_taxaUpsertArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Count the number of Subproject_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaCountArgs} args - Arguments to filter Subproject_taxas to count.
     * @example
     * // Count the number of Subproject_taxas
     * const count = await prisma.subproject_taxa.count({
     *   where: {
     *     // ... the filter for the Subproject_taxas we want to count
     *   }
     * })
    **/
    count<T extends Subproject_taxaCountArgs>(
      args?: Subset<T, Subproject_taxaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subproject_taxaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subproject_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subproject_taxaAggregateArgs>(args: Subset<T, Subproject_taxaAggregateArgs>): Prisma.PrismaPromise<GetSubproject_taxaAggregateType<T>>

    /**
     * Group by Subproject_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Subproject_taxaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Subproject_taxaGroupByArgs['orderBy'] }
        : { orderBy?: Subproject_taxaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Subproject_taxaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubproject_taxaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Subproject_taxa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Subproject_taxaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends SubprojectsArgs= {}>(args?: Subset<T, SubprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    taxa<T extends TaxaArgs= {}>(args?: Subset<T, TaxaArgs>): Prisma__TaxaClient<TaxaGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Subproject_taxa base type for findUnique actions
   */
  export type Subproject_taxaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     */
    where: Subproject_taxaWhereUniqueInput
  }

  /**
   * Subproject_taxa findUnique
   */
  export interface Subproject_taxaFindUniqueArgs extends Subproject_taxaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_taxa findUniqueOrThrow
   */
  export type Subproject_taxaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     */
    where: Subproject_taxaWhereUniqueInput
  }


  /**
   * Subproject_taxa base type for findFirst actions
   */
  export type Subproject_taxaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     */
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     */
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_taxas.
     */
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_taxas.
     */
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }

  /**
   * Subproject_taxa findFirst
   */
  export interface Subproject_taxaFindFirstArgs extends Subproject_taxaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_taxa findFirstOrThrow
   */
  export type Subproject_taxaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     */
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     */
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_taxas.
     */
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_taxas.
     */
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Subproject_taxa findMany
   */
  export type Subproject_taxaFindManyArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxas to fetch.
     */
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     */
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subproject_taxas.
     */
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     */
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Subproject_taxa create
   */
  export type Subproject_taxaCreateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * The data needed to create a Subproject_taxa.
     */
    data: XOR<Subproject_taxaCreateInput, Subproject_taxaUncheckedCreateInput>
  }


  /**
   * Subproject_taxa createMany
   */
  export type Subproject_taxaCreateManyArgs = {
    /**
     * The data used to create many Subproject_taxas.
     */
    data: Enumerable<Subproject_taxaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Subproject_taxa update
   */
  export type Subproject_taxaUpdateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * The data needed to update a Subproject_taxa.
     */
    data: XOR<Subproject_taxaUpdateInput, Subproject_taxaUncheckedUpdateInput>
    /**
     * Choose, which Subproject_taxa to update.
     */
    where: Subproject_taxaWhereUniqueInput
  }


  /**
   * Subproject_taxa updateMany
   */
  export type Subproject_taxaUpdateManyArgs = {
    /**
     * The data used to update Subproject_taxas.
     */
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyInput>
    /**
     * Filter which Subproject_taxas to update
     */
    where?: Subproject_taxaWhereInput
  }


  /**
   * Subproject_taxa upsert
   */
  export type Subproject_taxaUpsertArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * The filter to search for the Subproject_taxa to update in case it exists.
     */
    where: Subproject_taxaWhereUniqueInput
    /**
     * In case the Subproject_taxa found by the `where` argument doesn't exist, create a new Subproject_taxa with this data.
     */
    create: XOR<Subproject_taxaCreateInput, Subproject_taxaUncheckedCreateInput>
    /**
     * In case the Subproject_taxa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Subproject_taxaUpdateInput, Subproject_taxaUncheckedUpdateInput>
  }


  /**
   * Subproject_taxa delete
   */
  export type Subproject_taxaDeleteArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    /**
     * Filter which Subproject_taxa to delete.
     */
    where: Subproject_taxaWhereUniqueInput
  }


  /**
   * Subproject_taxa deleteMany
   */
  export type Subproject_taxaDeleteManyArgs = {
    /**
     * Filter which Subproject_taxas to delete
     */
    where?: Subproject_taxaWhereInput
  }


  /**
   * Subproject_taxa without action
   */
  export type Subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
  }



  /**
   * Model Subproject_users
   */


  export type AggregateSubproject_users = {
    _count: Subproject_usersCountAggregateOutputType | null
    _min: Subproject_usersMinAggregateOutputType | null
    _max: Subproject_usersMaxAggregateOutputType | null
  }

  export type Subproject_usersMinAggregateOutputType = {
    subproject_user_id: string | null
    account_id: string | null
    subproject_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_usersMaxAggregateOutputType = {
    subproject_user_id: string | null
    account_id: string | null
    subproject_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_usersCountAggregateOutputType = {
    subproject_user_id: number
    account_id: number
    subproject_id: number
    user_id: number
    role: number
    label: number
    deleted: number
    _all: number
  }


  export type Subproject_usersMinAggregateInputType = {
    subproject_user_id?: true
    account_id?: true
    subproject_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Subproject_usersMaxAggregateInputType = {
    subproject_user_id?: true
    account_id?: true
    subproject_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Subproject_usersCountAggregateInputType = {
    subproject_user_id?: true
    account_id?: true
    subproject_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Subproject_usersAggregateArgs = {
    /**
     * Filter which Subproject_users to aggregate.
     */
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     */
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subproject_users
    **/
    _count?: true | Subproject_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subproject_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subproject_usersMaxAggregateInputType
  }

  export type GetSubproject_usersAggregateType<T extends Subproject_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateSubproject_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubproject_users[P]>
      : GetScalarType<T[P], AggregateSubproject_users[P]>
  }




  export type Subproject_usersGroupByArgs = {
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithAggregationInput>
    by: Subproject_usersScalarFieldEnum[]
    having?: Subproject_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subproject_usersCountAggregateInputType | true
    _min?: Subproject_usersMinAggregateInputType
    _max?: Subproject_usersMaxAggregateInputType
  }


  export type Subproject_usersGroupByOutputType = {
    subproject_user_id: string
    account_id: string | null
    subproject_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
    _count: Subproject_usersCountAggregateOutputType | null
    _min: Subproject_usersMinAggregateOutputType | null
    _max: Subproject_usersMaxAggregateOutputType | null
  }

  type GetSubproject_usersGroupByPayload<T extends Subproject_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Subproject_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subproject_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subproject_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Subproject_usersGroupByOutputType[P]>
        }
      >
    >


  export type Subproject_usersSelect = {
    subproject_user_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    user_id?: boolean
    role?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
    users?: boolean | UsersArgs
  }


  export type Subproject_usersInclude = {
    accounts?: boolean | AccountsArgs
    subprojects?: boolean | SubprojectsArgs
    users?: boolean | UsersArgs
  }

  export type Subproject_usersGetPayload<S extends boolean | null | undefined | Subproject_usersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Subproject_users :
    S extends undefined ? never :
    S extends { include: any } & (Subproject_usersArgs | Subproject_usersFindManyArgs)
    ? Subproject_users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Subproject_usersArgs | Subproject_usersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :  P extends keyof Subproject_users ? Subproject_users[P] : never
  } 
      : Subproject_users


  type Subproject_usersCountArgs = 
    Omit<Subproject_usersFindManyArgs, 'select' | 'include'> & {
      select?: Subproject_usersCountAggregateInputType | true
    }

  export interface Subproject_usersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Subproject_users that matches the filter.
     * @param {Subproject_usersFindUniqueArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Subproject_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Subproject_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Subproject_users'> extends True ? Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>> : Prisma__Subproject_usersClient<Subproject_usersGetPayload<T> | null, null>

    /**
     * Find one Subproject_users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Subproject_usersFindUniqueOrThrowArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Subproject_usersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Subproject_usersFindUniqueOrThrowArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Find the first Subproject_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersFindFirstArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Subproject_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Subproject_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Subproject_users'> extends True ? Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>> : Prisma__Subproject_usersClient<Subproject_usersGetPayload<T> | null, null>

    /**
     * Find the first Subproject_users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersFindFirstOrThrowArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Subproject_usersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Subproject_usersFindFirstOrThrowArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Find zero or more Subproject_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subproject_users
     * const subproject_users = await prisma.subproject_users.findMany()
     * 
     * // Get first 10 Subproject_users
     * const subproject_users = await prisma.subproject_users.findMany({ take: 10 })
     * 
     * // Only select the `subproject_user_id`
     * const subproject_usersWithSubproject_user_idOnly = await prisma.subproject_users.findMany({ select: { subproject_user_id: true } })
     * 
    **/
    findMany<T extends Subproject_usersFindManyArgs>(
      args?: SelectSubset<T, Subproject_usersFindManyArgs>
    ): Prisma.PrismaPromise<Array<Subproject_usersGetPayload<T>>>

    /**
     * Create a Subproject_users.
     * @param {Subproject_usersCreateArgs} args - Arguments to create a Subproject_users.
     * @example
     * // Create one Subproject_users
     * const Subproject_users = await prisma.subproject_users.create({
     *   data: {
     *     // ... data to create a Subproject_users
     *   }
     * })
     * 
    **/
    create<T extends Subproject_usersCreateArgs>(
      args: SelectSubset<T, Subproject_usersCreateArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Create many Subproject_users.
     *     @param {Subproject_usersCreateManyArgs} args - Arguments to create many Subproject_users.
     *     @example
     *     // Create many Subproject_users
     *     const subproject_users = await prisma.subproject_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Subproject_usersCreateManyArgs>(
      args?: SelectSubset<T, Subproject_usersCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Subproject_users.
     * @param {Subproject_usersDeleteArgs} args - Arguments to delete one Subproject_users.
     * @example
     * // Delete one Subproject_users
     * const Subproject_users = await prisma.subproject_users.delete({
     *   where: {
     *     // ... filter to delete one Subproject_users
     *   }
     * })
     * 
    **/
    delete<T extends Subproject_usersDeleteArgs>(
      args: SelectSubset<T, Subproject_usersDeleteArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Update one Subproject_users.
     * @param {Subproject_usersUpdateArgs} args - Arguments to update one Subproject_users.
     * @example
     * // Update one Subproject_users
     * const subproject_users = await prisma.subproject_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Subproject_usersUpdateArgs>(
      args: SelectSubset<T, Subproject_usersUpdateArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Delete zero or more Subproject_users.
     * @param {Subproject_usersDeleteManyArgs} args - Arguments to filter Subproject_users to delete.
     * @example
     * // Delete a few Subproject_users
     * const { count } = await prisma.subproject_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Subproject_usersDeleteManyArgs>(
      args?: SelectSubset<T, Subproject_usersDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subproject_users
     * const subproject_users = await prisma.subproject_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Subproject_usersUpdateManyArgs>(
      args: SelectSubset<T, Subproject_usersUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subproject_users.
     * @param {Subproject_usersUpsertArgs} args - Arguments to update or create a Subproject_users.
     * @example
     * // Update or create a Subproject_users
     * const subproject_users = await prisma.subproject_users.upsert({
     *   create: {
     *     // ... data to create a Subproject_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subproject_users we want to update
     *   }
     * })
    **/
    upsert<T extends Subproject_usersUpsertArgs>(
      args: SelectSubset<T, Subproject_usersUpsertArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Count the number of Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersCountArgs} args - Arguments to filter Subproject_users to count.
     * @example
     * // Count the number of Subproject_users
     * const count = await prisma.subproject_users.count({
     *   where: {
     *     // ... the filter for the Subproject_users we want to count
     *   }
     * })
    **/
    count<T extends Subproject_usersCountArgs>(
      args?: Subset<T, Subproject_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subproject_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subproject_usersAggregateArgs>(args: Subset<T, Subproject_usersAggregateArgs>): Prisma.PrismaPromise<GetSubproject_usersAggregateType<T>>

    /**
     * Group by Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Subproject_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Subproject_usersGroupByArgs['orderBy'] }
        : { orderBy?: Subproject_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Subproject_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubproject_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Subproject_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Subproject_usersClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends SubprojectsArgs= {}>(args?: Subset<T, SubprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    users<T extends UsersArgs= {}>(args?: Subset<T, UsersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Subproject_users base type for findUnique actions
   */
  export type Subproject_usersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     */
    where: Subproject_usersWhereUniqueInput
  }

  /**
   * Subproject_users findUnique
   */
  export interface Subproject_usersFindUniqueArgs extends Subproject_usersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_users findUniqueOrThrow
   */
  export type Subproject_usersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     */
    where: Subproject_usersWhereUniqueInput
  }


  /**
   * Subproject_users base type for findFirst actions
   */
  export type Subproject_usersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     */
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     */
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_users.
     */
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_users.
     */
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }

  /**
   * Subproject_users findFirst
   */
  export interface Subproject_usersFindFirstArgs extends Subproject_usersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_users findFirstOrThrow
   */
  export type Subproject_usersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     */
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     */
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_users.
     */
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_users.
     */
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Subproject_users findMany
   */
  export type Subproject_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     */
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     */
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subproject_users.
     */
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     */
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Subproject_users create
   */
  export type Subproject_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * The data needed to create a Subproject_users.
     */
    data: XOR<Subproject_usersCreateInput, Subproject_usersUncheckedCreateInput>
  }


  /**
   * Subproject_users createMany
   */
  export type Subproject_usersCreateManyArgs = {
    /**
     * The data used to create many Subproject_users.
     */
    data: Enumerable<Subproject_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Subproject_users update
   */
  export type Subproject_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * The data needed to update a Subproject_users.
     */
    data: XOR<Subproject_usersUpdateInput, Subproject_usersUncheckedUpdateInput>
    /**
     * Choose, which Subproject_users to update.
     */
    where: Subproject_usersWhereUniqueInput
  }


  /**
   * Subproject_users updateMany
   */
  export type Subproject_usersUpdateManyArgs = {
    /**
     * The data used to update Subproject_users.
     */
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyInput>
    /**
     * Filter which Subproject_users to update
     */
    where?: Subproject_usersWhereInput
  }


  /**
   * Subproject_users upsert
   */
  export type Subproject_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * The filter to search for the Subproject_users to update in case it exists.
     */
    where: Subproject_usersWhereUniqueInput
    /**
     * In case the Subproject_users found by the `where` argument doesn't exist, create a new Subproject_users with this data.
     */
    create: XOR<Subproject_usersCreateInput, Subproject_usersUncheckedCreateInput>
    /**
     * In case the Subproject_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Subproject_usersUpdateInput, Subproject_usersUncheckedUpdateInput>
  }


  /**
   * Subproject_users delete
   */
  export type Subproject_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    /**
     * Filter which Subproject_users to delete.
     */
    where: Subproject_usersWhereUniqueInput
  }


  /**
   * Subproject_users deleteMany
   */
  export type Subproject_usersDeleteManyArgs = {
    /**
     * Filter which Subproject_users to delete
     */
    where?: Subproject_usersWhereInput
  }


  /**
   * Subproject_users without action
   */
  export type Subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
  }



  /**
   * Model Subprojects
   */


  export type AggregateSubprojects = {
    _count: SubprojectsCountAggregateOutputType | null
    _avg: SubprojectsAvgAggregateOutputType | null
    _sum: SubprojectsSumAggregateOutputType | null
    _min: SubprojectsMinAggregateOutputType | null
    _max: SubprojectsMaxAggregateOutputType | null
  }

  export type SubprojectsAvgAggregateOutputType = {
    since_year: number | null
  }

  export type SubprojectsSumAggregateOutputType = {
    since_year: number | null
  }

  export type SubprojectsMinAggregateOutputType = {
    subproject_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    label: string | null
    since_year: number | null
    deleted: boolean | null
  }

  export type SubprojectsMaxAggregateOutputType = {
    subproject_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    label: string | null
    since_year: number | null
    deleted: boolean | null
  }

  export type SubprojectsCountAggregateOutputType = {
    subproject_id: number
    account_id: number
    project_id: number
    name: number
    label: number
    since_year: number
    data: number
    deleted: number
    _all: number
  }


  export type SubprojectsAvgAggregateInputType = {
    since_year?: true
  }

  export type SubprojectsSumAggregateInputType = {
    since_year?: true
  }

  export type SubprojectsMinAggregateInputType = {
    subproject_id?: true
    account_id?: true
    project_id?: true
    name?: true
    label?: true
    since_year?: true
    deleted?: true
  }

  export type SubprojectsMaxAggregateInputType = {
    subproject_id?: true
    account_id?: true
    project_id?: true
    name?: true
    label?: true
    since_year?: true
    deleted?: true
  }

  export type SubprojectsCountAggregateInputType = {
    subproject_id?: true
    account_id?: true
    project_id?: true
    name?: true
    label?: true
    since_year?: true
    data?: true
    deleted?: true
    _all?: true
  }

  export type SubprojectsAggregateArgs = {
    /**
     * Filter which Subprojects to aggregate.
     */
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     */
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subprojects
    **/
    _count?: true | SubprojectsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubprojectsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubprojectsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubprojectsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubprojectsMaxAggregateInputType
  }

  export type GetSubprojectsAggregateType<T extends SubprojectsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubprojects]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubprojects[P]>
      : GetScalarType<T[P], AggregateSubprojects[P]>
  }




  export type SubprojectsGroupByArgs = {
    where?: SubprojectsWhereInput
    orderBy?: Enumerable<SubprojectsOrderByWithAggregationInput>
    by: SubprojectsScalarFieldEnum[]
    having?: SubprojectsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubprojectsCountAggregateInputType | true
    _avg?: SubprojectsAvgAggregateInputType
    _sum?: SubprojectsSumAggregateInputType
    _min?: SubprojectsMinAggregateInputType
    _max?: SubprojectsMaxAggregateInputType
  }


  export type SubprojectsGroupByOutputType = {
    subproject_id: string
    account_id: string | null
    project_id: string | null
    name: string | null
    label: string | null
    since_year: number | null
    data: JsonValue | null
    deleted: boolean | null
    _count: SubprojectsCountAggregateOutputType | null
    _avg: SubprojectsAvgAggregateOutputType | null
    _sum: SubprojectsSumAggregateOutputType | null
    _min: SubprojectsMinAggregateOutputType | null
    _max: SubprojectsMaxAggregateOutputType | null
  }

  type GetSubprojectsGroupByPayload<T extends SubprojectsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<SubprojectsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubprojectsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubprojectsGroupByOutputType[P]>
            : GetScalarType<T[P], SubprojectsGroupByOutputType[P]>
        }
      >
    >


  export type SubprojectsSelect = {
    subproject_id?: boolean
    account_id?: boolean
    project_id?: boolean
    name?: boolean
    label?: boolean
    since_year?: boolean
    data?: boolean
    deleted?: boolean
    files?: boolean | Subprojects$filesArgs
    goals?: boolean | Subprojects$goalsArgs
    places?: boolean | Subprojects$placesArgs
    subproject_reports?: boolean | Subprojects$subproject_reportsArgs
    subproject_taxa?: boolean | Subprojects$subproject_taxaArgs
    subproject_users?: boolean | Subprojects$subproject_usersArgs
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    _count?: boolean | SubprojectsCountOutputTypeArgs
  }


  export type SubprojectsInclude = {
    files?: boolean | Subprojects$filesArgs
    goals?: boolean | Subprojects$goalsArgs
    places?: boolean | Subprojects$placesArgs
    subproject_reports?: boolean | Subprojects$subproject_reportsArgs
    subproject_taxa?: boolean | Subprojects$subproject_taxaArgs
    subproject_users?: boolean | Subprojects$subproject_usersArgs
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    _count?: boolean | SubprojectsCountOutputTypeArgs
  }

  export type SubprojectsGetPayload<S extends boolean | null | undefined | SubprojectsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Subprojects :
    S extends undefined ? never :
    S extends { include: any } & (SubprojectsArgs | SubprojectsFindManyArgs)
    ? Subprojects  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'files' ? Array < FilesGetPayload<S['include'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['include'][P]>>  :
        P extends 'places' ? Array < PlacesGetPayload<S['include'][P]>>  :
        P extends 'subproject_reports' ? Array < Subproject_reportsGetPayload<S['include'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['include'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? SubprojectsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (SubprojectsArgs | SubprojectsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'files' ? Array < FilesGetPayload<S['select'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['select'][P]>>  :
        P extends 'places' ? Array < PlacesGetPayload<S['select'][P]>>  :
        P extends 'subproject_reports' ? Array < Subproject_reportsGetPayload<S['select'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['select'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? SubprojectsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Subprojects ? Subprojects[P] : never
  } 
      : Subprojects


  type SubprojectsCountArgs = 
    Omit<SubprojectsFindManyArgs, 'select' | 'include'> & {
      select?: SubprojectsCountAggregateInputType | true
    }

  export interface SubprojectsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Subprojects that matches the filter.
     * @param {SubprojectsFindUniqueArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SubprojectsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, SubprojectsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Subprojects'> extends True ? Prisma__SubprojectsClient<SubprojectsGetPayload<T>> : Prisma__SubprojectsClient<SubprojectsGetPayload<T> | null, null>

    /**
     * Find one Subprojects that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {SubprojectsFindUniqueOrThrowArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SubprojectsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, SubprojectsFindUniqueOrThrowArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Find the first Subprojects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsFindFirstArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SubprojectsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, SubprojectsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Subprojects'> extends True ? Prisma__SubprojectsClient<SubprojectsGetPayload<T>> : Prisma__SubprojectsClient<SubprojectsGetPayload<T> | null, null>

    /**
     * Find the first Subprojects that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsFindFirstOrThrowArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SubprojectsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, SubprojectsFindFirstOrThrowArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Find zero or more Subprojects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subprojects
     * const subprojects = await prisma.subprojects.findMany()
     * 
     * // Get first 10 Subprojects
     * const subprojects = await prisma.subprojects.findMany({ take: 10 })
     * 
     * // Only select the `subproject_id`
     * const subprojectsWithSubproject_idOnly = await prisma.subprojects.findMany({ select: { subproject_id: true } })
     * 
    **/
    findMany<T extends SubprojectsFindManyArgs>(
      args?: SelectSubset<T, SubprojectsFindManyArgs>
    ): Prisma.PrismaPromise<Array<SubprojectsGetPayload<T>>>

    /**
     * Create a Subprojects.
     * @param {SubprojectsCreateArgs} args - Arguments to create a Subprojects.
     * @example
     * // Create one Subprojects
     * const Subprojects = await prisma.subprojects.create({
     *   data: {
     *     // ... data to create a Subprojects
     *   }
     * })
     * 
    **/
    create<T extends SubprojectsCreateArgs>(
      args: SelectSubset<T, SubprojectsCreateArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Create many Subprojects.
     *     @param {SubprojectsCreateManyArgs} args - Arguments to create many Subprojects.
     *     @example
     *     // Create many Subprojects
     *     const subprojects = await prisma.subprojects.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SubprojectsCreateManyArgs>(
      args?: SelectSubset<T, SubprojectsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Subprojects.
     * @param {SubprojectsDeleteArgs} args - Arguments to delete one Subprojects.
     * @example
     * // Delete one Subprojects
     * const Subprojects = await prisma.subprojects.delete({
     *   where: {
     *     // ... filter to delete one Subprojects
     *   }
     * })
     * 
    **/
    delete<T extends SubprojectsDeleteArgs>(
      args: SelectSubset<T, SubprojectsDeleteArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Update one Subprojects.
     * @param {SubprojectsUpdateArgs} args - Arguments to update one Subprojects.
     * @example
     * // Update one Subprojects
     * const subprojects = await prisma.subprojects.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SubprojectsUpdateArgs>(
      args: SelectSubset<T, SubprojectsUpdateArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Delete zero or more Subprojects.
     * @param {SubprojectsDeleteManyArgs} args - Arguments to filter Subprojects to delete.
     * @example
     * // Delete a few Subprojects
     * const { count } = await prisma.subprojects.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SubprojectsDeleteManyArgs>(
      args?: SelectSubset<T, SubprojectsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subprojects
     * const subprojects = await prisma.subprojects.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SubprojectsUpdateManyArgs>(
      args: SelectSubset<T, SubprojectsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subprojects.
     * @param {SubprojectsUpsertArgs} args - Arguments to update or create a Subprojects.
     * @example
     * // Update or create a Subprojects
     * const subprojects = await prisma.subprojects.upsert({
     *   create: {
     *     // ... data to create a Subprojects
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subprojects we want to update
     *   }
     * })
    **/
    upsert<T extends SubprojectsUpsertArgs>(
      args: SelectSubset<T, SubprojectsUpsertArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Count the number of Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsCountArgs} args - Arguments to filter Subprojects to count.
     * @example
     * // Count the number of Subprojects
     * const count = await prisma.subprojects.count({
     *   where: {
     *     // ... the filter for the Subprojects we want to count
     *   }
     * })
    **/
    count<T extends SubprojectsCountArgs>(
      args?: Subset<T, SubprojectsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubprojectsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubprojectsAggregateArgs>(args: Subset<T, SubprojectsAggregateArgs>): Prisma.PrismaPromise<GetSubprojectsAggregateType<T>>

    /**
     * Group by Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubprojectsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubprojectsGroupByArgs['orderBy'] }
        : { orderBy?: SubprojectsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubprojectsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubprojectsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Subprojects.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__SubprojectsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    files<T extends Subprojects$filesArgs= {}>(args?: Subset<T, Subprojects$filesArgs>): Prisma.PrismaPromise<Array<FilesGetPayload<T>>| Null>;

    goals<T extends Subprojects$goalsArgs= {}>(args?: Subset<T, Subprojects$goalsArgs>): Prisma.PrismaPromise<Array<GoalsGetPayload<T>>| Null>;

    places<T extends Subprojects$placesArgs= {}>(args?: Subset<T, Subprojects$placesArgs>): Prisma.PrismaPromise<Array<PlacesGetPayload<T>>| Null>;

    subproject_reports<T extends Subprojects$subproject_reportsArgs= {}>(args?: Subset<T, Subprojects$subproject_reportsArgs>): Prisma.PrismaPromise<Array<Subproject_reportsGetPayload<T>>| Null>;

    subproject_taxa<T extends Subprojects$subproject_taxaArgs= {}>(args?: Subset<T, Subprojects$subproject_taxaArgs>): Prisma.PrismaPromise<Array<Subproject_taxaGetPayload<T>>| Null>;

    subproject_users<T extends Subprojects$subproject_usersArgs= {}>(args?: Subset<T, Subprojects$subproject_usersArgs>): Prisma.PrismaPromise<Array<Subproject_usersGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Subprojects base type for findUnique actions
   */
  export type SubprojectsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     */
    where: SubprojectsWhereUniqueInput
  }

  /**
   * Subprojects findUnique
   */
  export interface SubprojectsFindUniqueArgs extends SubprojectsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subprojects findUniqueOrThrow
   */
  export type SubprojectsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     */
    where: SubprojectsWhereUniqueInput
  }


  /**
   * Subprojects base type for findFirst actions
   */
  export type SubprojectsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     */
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     */
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subprojects.
     */
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subprojects.
     */
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }

  /**
   * Subprojects findFirst
   */
  export interface SubprojectsFindFirstArgs extends SubprojectsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subprojects findFirstOrThrow
   */
  export type SubprojectsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     */
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     */
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subprojects.
     */
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subprojects.
     */
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Subprojects findMany
   */
  export type SubprojectsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     */
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     */
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subprojects.
     */
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     */
    skip?: number
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Subprojects create
   */
  export type SubprojectsCreateArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * The data needed to create a Subprojects.
     */
    data: XOR<SubprojectsCreateInput, SubprojectsUncheckedCreateInput>
  }


  /**
   * Subprojects createMany
   */
  export type SubprojectsCreateManyArgs = {
    /**
     * The data used to create many Subprojects.
     */
    data: Enumerable<SubprojectsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Subprojects update
   */
  export type SubprojectsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * The data needed to update a Subprojects.
     */
    data: XOR<SubprojectsUpdateInput, SubprojectsUncheckedUpdateInput>
    /**
     * Choose, which Subprojects to update.
     */
    where: SubprojectsWhereUniqueInput
  }


  /**
   * Subprojects updateMany
   */
  export type SubprojectsUpdateManyArgs = {
    /**
     * The data used to update Subprojects.
     */
    data: XOR<SubprojectsUpdateManyMutationInput, SubprojectsUncheckedUpdateManyInput>
    /**
     * Filter which Subprojects to update
     */
    where?: SubprojectsWhereInput
  }


  /**
   * Subprojects upsert
   */
  export type SubprojectsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * The filter to search for the Subprojects to update in case it exists.
     */
    where: SubprojectsWhereUniqueInput
    /**
     * In case the Subprojects found by the `where` argument doesn't exist, create a new Subprojects with this data.
     */
    create: XOR<SubprojectsCreateInput, SubprojectsUncheckedCreateInput>
    /**
     * In case the Subprojects was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubprojectsUpdateInput, SubprojectsUncheckedUpdateInput>
  }


  /**
   * Subprojects delete
   */
  export type SubprojectsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
    /**
     * Filter which Subprojects to delete.
     */
    where: SubprojectsWhereUniqueInput
  }


  /**
   * Subprojects deleteMany
   */
  export type SubprojectsDeleteManyArgs = {
    /**
     * Filter which Subprojects to delete
     */
    where?: SubprojectsWhereInput
  }


  /**
   * Subprojects.files
   */
  export type Subprojects$filesArgs = {
    /**
     * Select specific fields to fetch from the Files
     */
    select?: FilesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FilesInclude | null
    where?: FilesWhereInput
    orderBy?: Enumerable<FilesOrderByWithRelationInput>
    cursor?: FilesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilesScalarFieldEnum>
  }


  /**
   * Subprojects.goals
   */
  export type Subprojects$goalsArgs = {
    /**
     * Select specific fields to fetch from the Goals
     */
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: GoalsInclude | null
    where?: GoalsWhereInput
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    cursor?: GoalsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Subprojects.places
   */
  export type Subprojects$placesArgs = {
    /**
     * Select specific fields to fetch from the Places
     */
    select?: PlacesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: PlacesInclude | null
    where?: PlacesWhereInput
    orderBy?: Enumerable<PlacesOrderByWithRelationInput>
    cursor?: PlacesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PlacesScalarFieldEnum>
  }


  /**
   * Subprojects.subproject_reports
   */
  export type Subprojects$subproject_reportsArgs = {
    /**
     * Select specific fields to fetch from the Subproject_reports
     */
    select?: Subproject_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_reportsInclude | null
    where?: Subproject_reportsWhereInput
    orderBy?: Enumerable<Subproject_reportsOrderByWithRelationInput>
    cursor?: Subproject_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_reportsScalarFieldEnum>
  }


  /**
   * Subprojects.subproject_taxa
   */
  export type Subprojects$subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    cursor?: Subproject_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Subprojects.subproject_users
   */
  export type Subprojects$subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    cursor?: Subproject_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Subprojects without action
   */
  export type SubprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     */
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: SubprojectsInclude | null
  }



  /**
   * Model Taxa
   */


  export type AggregateTaxa = {
    _count: TaxaCountAggregateOutputType | null
    _min: TaxaMinAggregateOutputType | null
    _max: TaxaMaxAggregateOutputType | null
  }

  export type TaxaMinAggregateOutputType = {
    taxon_id: string | null
    account_id: string | null
    taxonomy_id: string | null
    name: string | null
    id_in_source: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
  }

  export type TaxaMaxAggregateOutputType = {
    taxon_id: string | null
    account_id: string | null
    taxonomy_id: string | null
    name: string | null
    id_in_source: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
  }

  export type TaxaCountAggregateOutputType = {
    taxon_id: number
    account_id: number
    taxonomy_id: number
    name: number
    id_in_source: number
    url: number
    label: number
    deleted: number
    _all: number
  }


  export type TaxaMinAggregateInputType = {
    taxon_id?: true
    account_id?: true
    taxonomy_id?: true
    name?: true
    id_in_source?: true
    url?: true
    label?: true
    deleted?: true
  }

  export type TaxaMaxAggregateInputType = {
    taxon_id?: true
    account_id?: true
    taxonomy_id?: true
    name?: true
    id_in_source?: true
    url?: true
    label?: true
    deleted?: true
  }

  export type TaxaCountAggregateInputType = {
    taxon_id?: true
    account_id?: true
    taxonomy_id?: true
    name?: true
    id_in_source?: true
    url?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type TaxaAggregateArgs = {
    /**
     * Filter which Taxa to aggregate.
     */
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     */
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Taxas
    **/
    _count?: true | TaxaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaxaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaxaMaxAggregateInputType
  }

  export type GetTaxaAggregateType<T extends TaxaAggregateArgs> = {
        [P in keyof T & keyof AggregateTaxa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaxa[P]>
      : GetScalarType<T[P], AggregateTaxa[P]>
  }




  export type TaxaGroupByArgs = {
    where?: TaxaWhereInput
    orderBy?: Enumerable<TaxaOrderByWithAggregationInput>
    by: TaxaScalarFieldEnum[]
    having?: TaxaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaxaCountAggregateInputType | true
    _min?: TaxaMinAggregateInputType
    _max?: TaxaMaxAggregateInputType
  }


  export type TaxaGroupByOutputType = {
    taxon_id: string
    account_id: string | null
    taxonomy_id: string | null
    name: string | null
    id_in_source: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
    _count: TaxaCountAggregateOutputType | null
    _min: TaxaMinAggregateOutputType | null
    _max: TaxaMaxAggregateOutputType | null
  }

  type GetTaxaGroupByPayload<T extends TaxaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TaxaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaxaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaxaGroupByOutputType[P]>
            : GetScalarType<T[P], TaxaGroupByOutputType[P]>
        }
      >
    >


  export type TaxaSelect = {
    taxon_id?: boolean
    account_id?: boolean
    taxonomy_id?: boolean
    name?: boolean
    id_in_source?: boolean
    url?: boolean
    label?: boolean
    deleted?: boolean
    check_taxa?: boolean | Taxa$check_taxaArgs
    subproject_taxa?: boolean | Taxa$subproject_taxaArgs
    accounts?: boolean | AccountsArgs
    taxonomies?: boolean | TaxonomiesArgs
    _count?: boolean | TaxaCountOutputTypeArgs
  }


  export type TaxaInclude = {
    check_taxa?: boolean | Taxa$check_taxaArgs
    subproject_taxa?: boolean | Taxa$subproject_taxaArgs
    accounts?: boolean | AccountsArgs
    taxonomies?: boolean | TaxonomiesArgs
    _count?: boolean | TaxaCountOutputTypeArgs
  }

  export type TaxaGetPayload<S extends boolean | null | undefined | TaxaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Taxa :
    S extends undefined ? never :
    S extends { include: any } & (TaxaArgs | TaxaFindManyArgs)
    ? Taxa  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['include'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'taxonomies' ? TaxonomiesGetPayload<S['include'][P]> | null :
        P extends '_count' ? TaxaCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaxaArgs | TaxaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['select'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'taxonomies' ? TaxonomiesGetPayload<S['select'][P]> | null :
        P extends '_count' ? TaxaCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Taxa ? Taxa[P] : never
  } 
      : Taxa


  type TaxaCountArgs = 
    Omit<TaxaFindManyArgs, 'select' | 'include'> & {
      select?: TaxaCountAggregateInputType | true
    }

  export interface TaxaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Taxa that matches the filter.
     * @param {TaxaFindUniqueArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaxaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaxaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Taxa'> extends True ? Prisma__TaxaClient<TaxaGetPayload<T>> : Prisma__TaxaClient<TaxaGetPayload<T> | null, null>

    /**
     * Find one Taxa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaxaFindUniqueOrThrowArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaxaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaxaFindUniqueOrThrowArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Find the first Taxa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaFindFirstArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaxaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaxaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Taxa'> extends True ? Prisma__TaxaClient<TaxaGetPayload<T>> : Prisma__TaxaClient<TaxaGetPayload<T> | null, null>

    /**
     * Find the first Taxa that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaFindFirstOrThrowArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaxaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaxaFindFirstOrThrowArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Find zero or more Taxas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Taxas
     * const taxas = await prisma.taxa.findMany()
     * 
     * // Get first 10 Taxas
     * const taxas = await prisma.taxa.findMany({ take: 10 })
     * 
     * // Only select the `taxon_id`
     * const taxaWithTaxon_idOnly = await prisma.taxa.findMany({ select: { taxon_id: true } })
     * 
    **/
    findMany<T extends TaxaFindManyArgs>(
      args?: SelectSubset<T, TaxaFindManyArgs>
    ): Prisma.PrismaPromise<Array<TaxaGetPayload<T>>>

    /**
     * Create a Taxa.
     * @param {TaxaCreateArgs} args - Arguments to create a Taxa.
     * @example
     * // Create one Taxa
     * const Taxa = await prisma.taxa.create({
     *   data: {
     *     // ... data to create a Taxa
     *   }
     * })
     * 
    **/
    create<T extends TaxaCreateArgs>(
      args: SelectSubset<T, TaxaCreateArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Create many Taxas.
     *     @param {TaxaCreateManyArgs} args - Arguments to create many Taxas.
     *     @example
     *     // Create many Taxas
     *     const taxa = await prisma.taxa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaxaCreateManyArgs>(
      args?: SelectSubset<T, TaxaCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Taxa.
     * @param {TaxaDeleteArgs} args - Arguments to delete one Taxa.
     * @example
     * // Delete one Taxa
     * const Taxa = await prisma.taxa.delete({
     *   where: {
     *     // ... filter to delete one Taxa
     *   }
     * })
     * 
    **/
    delete<T extends TaxaDeleteArgs>(
      args: SelectSubset<T, TaxaDeleteArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Update one Taxa.
     * @param {TaxaUpdateArgs} args - Arguments to update one Taxa.
     * @example
     * // Update one Taxa
     * const taxa = await prisma.taxa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaxaUpdateArgs>(
      args: SelectSubset<T, TaxaUpdateArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Delete zero or more Taxas.
     * @param {TaxaDeleteManyArgs} args - Arguments to filter Taxas to delete.
     * @example
     * // Delete a few Taxas
     * const { count } = await prisma.taxa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaxaDeleteManyArgs>(
      args?: SelectSubset<T, TaxaDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Taxas
     * const taxa = await prisma.taxa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaxaUpdateManyArgs>(
      args: SelectSubset<T, TaxaUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Taxa.
     * @param {TaxaUpsertArgs} args - Arguments to update or create a Taxa.
     * @example
     * // Update or create a Taxa
     * const taxa = await prisma.taxa.upsert({
     *   create: {
     *     // ... data to create a Taxa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Taxa we want to update
     *   }
     * })
    **/
    upsert<T extends TaxaUpsertArgs>(
      args: SelectSubset<T, TaxaUpsertArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Count the number of Taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaCountArgs} args - Arguments to filter Taxas to count.
     * @example
     * // Count the number of Taxas
     * const count = await prisma.taxa.count({
     *   where: {
     *     // ... the filter for the Taxas we want to count
     *   }
     * })
    **/
    count<T extends TaxaCountArgs>(
      args?: Subset<T, TaxaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaxaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaxaAggregateArgs>(args: Subset<T, TaxaAggregateArgs>): Prisma.PrismaPromise<GetTaxaAggregateType<T>>

    /**
     * Group by Taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaxaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaxaGroupByArgs['orderBy'] }
        : { orderBy?: TaxaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaxaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaxaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Taxa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaxaClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    check_taxa<T extends Taxa$check_taxaArgs= {}>(args?: Subset<T, Taxa$check_taxaArgs>): Prisma.PrismaPromise<Array<Check_taxaGetPayload<T>>| Null>;

    subproject_taxa<T extends Taxa$subproject_taxaArgs= {}>(args?: Subset<T, Taxa$subproject_taxaArgs>): Prisma.PrismaPromise<Array<Subproject_taxaGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    taxonomies<T extends TaxonomiesArgs= {}>(args?: Subset<T, TaxonomiesArgs>): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Taxa base type for findUnique actions
   */
  export type TaxaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     */
    where: TaxaWhereUniqueInput
  }

  /**
   * Taxa findUnique
   */
  export interface TaxaFindUniqueArgs extends TaxaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxa findUniqueOrThrow
   */
  export type TaxaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     */
    where: TaxaWhereUniqueInput
  }


  /**
   * Taxa base type for findFirst actions
   */
  export type TaxaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     */
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     */
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxas.
     */
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxas.
     */
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }

  /**
   * Taxa findFirst
   */
  export interface TaxaFindFirstArgs extends TaxaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxa findFirstOrThrow
   */
  export type TaxaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     */
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     */
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxas.
     */
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxas.
     */
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Taxa findMany
   */
  export type TaxaFindManyArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * Filter, which Taxas to fetch.
     */
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     */
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Taxas.
     */
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     */
    skip?: number
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Taxa create
   */
  export type TaxaCreateArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * The data needed to create a Taxa.
     */
    data: XOR<TaxaCreateInput, TaxaUncheckedCreateInput>
  }


  /**
   * Taxa createMany
   */
  export type TaxaCreateManyArgs = {
    /**
     * The data used to create many Taxas.
     */
    data: Enumerable<TaxaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Taxa update
   */
  export type TaxaUpdateArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * The data needed to update a Taxa.
     */
    data: XOR<TaxaUpdateInput, TaxaUncheckedUpdateInput>
    /**
     * Choose, which Taxa to update.
     */
    where: TaxaWhereUniqueInput
  }


  /**
   * Taxa updateMany
   */
  export type TaxaUpdateManyArgs = {
    /**
     * The data used to update Taxas.
     */
    data: XOR<TaxaUpdateManyMutationInput, TaxaUncheckedUpdateManyInput>
    /**
     * Filter which Taxas to update
     */
    where?: TaxaWhereInput
  }


  /**
   * Taxa upsert
   */
  export type TaxaUpsertArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * The filter to search for the Taxa to update in case it exists.
     */
    where: TaxaWhereUniqueInput
    /**
     * In case the Taxa found by the `where` argument doesn't exist, create a new Taxa with this data.
     */
    create: XOR<TaxaCreateInput, TaxaUncheckedCreateInput>
    /**
     * In case the Taxa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TaxaUpdateInput, TaxaUncheckedUpdateInput>
  }


  /**
   * Taxa delete
   */
  export type TaxaDeleteArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    /**
     * Filter which Taxa to delete.
     */
    where: TaxaWhereUniqueInput
  }


  /**
   * Taxa deleteMany
   */
  export type TaxaDeleteManyArgs = {
    /**
     * Filter which Taxas to delete
     */
    where?: TaxaWhereInput
  }


  /**
   * Taxa.check_taxa
   */
  export type Taxa$check_taxaArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    where?: Check_taxaWhereInput
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    cursor?: Check_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Check_taxaScalarFieldEnum>
  }


  /**
   * Taxa.subproject_taxa
   */
  export type Taxa$subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     */
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_taxaInclude | null
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    cursor?: Subproject_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Taxa without action
   */
  export type TaxaArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
  }



  /**
   * Model Taxonomies
   */


  export type AggregateTaxonomies = {
    _count: TaxonomiesCountAggregateOutputType | null
    _min: TaxonomiesMinAggregateOutputType | null
    _max: TaxonomiesMaxAggregateOutputType | null
  }

  export type TaxonomiesMinAggregateOutputType = {
    taxonomy_id: string | null
    account_id: string | null
    project_id: string | null
    type: string | null
    name: string | null
    url: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type TaxonomiesMaxAggregateOutputType = {
    taxonomy_id: string | null
    account_id: string | null
    project_id: string | null
    type: string | null
    name: string | null
    url: string | null
    obsolete: boolean | null
    label: string | null
    deleted: boolean | null
  }

  export type TaxonomiesCountAggregateOutputType = {
    taxonomy_id: number
    account_id: number
    project_id: number
    type: number
    name: number
    url: number
    obsolete: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type TaxonomiesMinAggregateInputType = {
    taxonomy_id?: true
    account_id?: true
    project_id?: true
    type?: true
    name?: true
    url?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type TaxonomiesMaxAggregateInputType = {
    taxonomy_id?: true
    account_id?: true
    project_id?: true
    type?: true
    name?: true
    url?: true
    obsolete?: true
    label?: true
    deleted?: true
  }

  export type TaxonomiesCountAggregateInputType = {
    taxonomy_id?: true
    account_id?: true
    project_id?: true
    type?: true
    name?: true
    url?: true
    obsolete?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type TaxonomiesAggregateArgs = {
    /**
     * Filter which Taxonomies to aggregate.
     */
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     */
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Taxonomies
    **/
    _count?: true | TaxonomiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaxonomiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaxonomiesMaxAggregateInputType
  }

  export type GetTaxonomiesAggregateType<T extends TaxonomiesAggregateArgs> = {
        [P in keyof T & keyof AggregateTaxonomies]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaxonomies[P]>
      : GetScalarType<T[P], AggregateTaxonomies[P]>
  }




  export type TaxonomiesGroupByArgs = {
    where?: TaxonomiesWhereInput
    orderBy?: Enumerable<TaxonomiesOrderByWithAggregationInput>
    by: TaxonomiesScalarFieldEnum[]
    having?: TaxonomiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaxonomiesCountAggregateInputType | true
    _min?: TaxonomiesMinAggregateInputType
    _max?: TaxonomiesMaxAggregateInputType
  }


  export type TaxonomiesGroupByOutputType = {
    taxonomy_id: string
    account_id: string | null
    project_id: string | null
    type: string | null
    name: string | null
    url: string | null
    obsolete: boolean | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: TaxonomiesCountAggregateOutputType | null
    _min: TaxonomiesMinAggregateOutputType | null
    _max: TaxonomiesMaxAggregateOutputType | null
  }

  type GetTaxonomiesGroupByPayload<T extends TaxonomiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TaxonomiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaxonomiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaxonomiesGroupByOutputType[P]>
            : GetScalarType<T[P], TaxonomiesGroupByOutputType[P]>
        }
      >
    >


  export type TaxonomiesSelect = {
    taxonomy_id?: boolean
    account_id?: boolean
    project_id?: boolean
    type?: boolean
    name?: boolean
    url?: boolean
    obsolete?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    taxa?: boolean | Taxonomies$taxaArgs
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    _count?: boolean | TaxonomiesCountOutputTypeArgs
  }


  export type TaxonomiesInclude = {
    taxa?: boolean | Taxonomies$taxaArgs
    accounts?: boolean | AccountsArgs
    projects?: boolean | ProjectsArgs
    _count?: boolean | TaxonomiesCountOutputTypeArgs
  }

  export type TaxonomiesGetPayload<S extends boolean | null | undefined | TaxonomiesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Taxonomies :
    S extends undefined ? never :
    S extends { include: any } & (TaxonomiesArgs | TaxonomiesFindManyArgs)
    ? Taxonomies  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'taxa' ? Array < TaxaGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? TaxonomiesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaxonomiesArgs | TaxonomiesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'taxa' ? Array < TaxaGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? TaxonomiesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Taxonomies ? Taxonomies[P] : never
  } 
      : Taxonomies


  type TaxonomiesCountArgs = 
    Omit<TaxonomiesFindManyArgs, 'select' | 'include'> & {
      select?: TaxonomiesCountAggregateInputType | true
    }

  export interface TaxonomiesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Taxonomies that matches the filter.
     * @param {TaxonomiesFindUniqueArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaxonomiesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaxonomiesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Taxonomies'> extends True ? Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>> : Prisma__TaxonomiesClient<TaxonomiesGetPayload<T> | null, null>

    /**
     * Find one Taxonomies that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaxonomiesFindUniqueOrThrowArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaxonomiesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaxonomiesFindUniqueOrThrowArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Find the first Taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesFindFirstArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaxonomiesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaxonomiesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Taxonomies'> extends True ? Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>> : Prisma__TaxonomiesClient<TaxonomiesGetPayload<T> | null, null>

    /**
     * Find the first Taxonomies that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesFindFirstOrThrowArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaxonomiesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaxonomiesFindFirstOrThrowArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Find zero or more Taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Taxonomies
     * const taxonomies = await prisma.taxonomies.findMany()
     * 
     * // Get first 10 Taxonomies
     * const taxonomies = await prisma.taxonomies.findMany({ take: 10 })
     * 
     * // Only select the `taxonomy_id`
     * const taxonomiesWithTaxonomy_idOnly = await prisma.taxonomies.findMany({ select: { taxonomy_id: true } })
     * 
    **/
    findMany<T extends TaxonomiesFindManyArgs>(
      args?: SelectSubset<T, TaxonomiesFindManyArgs>
    ): Prisma.PrismaPromise<Array<TaxonomiesGetPayload<T>>>

    /**
     * Create a Taxonomies.
     * @param {TaxonomiesCreateArgs} args - Arguments to create a Taxonomies.
     * @example
     * // Create one Taxonomies
     * const Taxonomies = await prisma.taxonomies.create({
     *   data: {
     *     // ... data to create a Taxonomies
     *   }
     * })
     * 
    **/
    create<T extends TaxonomiesCreateArgs>(
      args: SelectSubset<T, TaxonomiesCreateArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Create many Taxonomies.
     *     @param {TaxonomiesCreateManyArgs} args - Arguments to create many Taxonomies.
     *     @example
     *     // Create many Taxonomies
     *     const taxonomies = await prisma.taxonomies.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaxonomiesCreateManyArgs>(
      args?: SelectSubset<T, TaxonomiesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Taxonomies.
     * @param {TaxonomiesDeleteArgs} args - Arguments to delete one Taxonomies.
     * @example
     * // Delete one Taxonomies
     * const Taxonomies = await prisma.taxonomies.delete({
     *   where: {
     *     // ... filter to delete one Taxonomies
     *   }
     * })
     * 
    **/
    delete<T extends TaxonomiesDeleteArgs>(
      args: SelectSubset<T, TaxonomiesDeleteArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Update one Taxonomies.
     * @param {TaxonomiesUpdateArgs} args - Arguments to update one Taxonomies.
     * @example
     * // Update one Taxonomies
     * const taxonomies = await prisma.taxonomies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaxonomiesUpdateArgs>(
      args: SelectSubset<T, TaxonomiesUpdateArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Delete zero or more Taxonomies.
     * @param {TaxonomiesDeleteManyArgs} args - Arguments to filter Taxonomies to delete.
     * @example
     * // Delete a few Taxonomies
     * const { count } = await prisma.taxonomies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaxonomiesDeleteManyArgs>(
      args?: SelectSubset<T, TaxonomiesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Taxonomies
     * const taxonomies = await prisma.taxonomies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaxonomiesUpdateManyArgs>(
      args: SelectSubset<T, TaxonomiesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Taxonomies.
     * @param {TaxonomiesUpsertArgs} args - Arguments to update or create a Taxonomies.
     * @example
     * // Update or create a Taxonomies
     * const taxonomies = await prisma.taxonomies.upsert({
     *   create: {
     *     // ... data to create a Taxonomies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Taxonomies we want to update
     *   }
     * })
    **/
    upsert<T extends TaxonomiesUpsertArgs>(
      args: SelectSubset<T, TaxonomiesUpsertArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Count the number of Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesCountArgs} args - Arguments to filter Taxonomies to count.
     * @example
     * // Count the number of Taxonomies
     * const count = await prisma.taxonomies.count({
     *   where: {
     *     // ... the filter for the Taxonomies we want to count
     *   }
     * })
    **/
    count<T extends TaxonomiesCountArgs>(
      args?: Subset<T, TaxonomiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaxonomiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaxonomiesAggregateArgs>(args: Subset<T, TaxonomiesAggregateArgs>): Prisma.PrismaPromise<GetTaxonomiesAggregateType<T>>

    /**
     * Group by Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaxonomiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaxonomiesGroupByArgs['orderBy'] }
        : { orderBy?: TaxonomiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaxonomiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaxonomiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Taxonomies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaxonomiesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    taxa<T extends Taxonomies$taxaArgs= {}>(args?: Subset<T, Taxonomies$taxaArgs>): Prisma.PrismaPromise<Array<TaxaGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Taxonomies base type for findUnique actions
   */
  export type TaxonomiesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     */
    where: TaxonomiesWhereUniqueInput
  }

  /**
   * Taxonomies findUnique
   */
  export interface TaxonomiesFindUniqueArgs extends TaxonomiesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxonomies findUniqueOrThrow
   */
  export type TaxonomiesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     */
    where: TaxonomiesWhereUniqueInput
  }


  /**
   * Taxonomies base type for findFirst actions
   */
  export type TaxonomiesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     */
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     */
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxonomies.
     */
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxonomies.
     */
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }

  /**
   * Taxonomies findFirst
   */
  export interface TaxonomiesFindFirstArgs extends TaxonomiesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxonomies findFirstOrThrow
   */
  export type TaxonomiesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     */
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     */
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxonomies.
     */
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxonomies.
     */
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Taxonomies findMany
   */
  export type TaxonomiesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     */
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     */
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Taxonomies.
     */
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     */
    skip?: number
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Taxonomies create
   */
  export type TaxonomiesCreateArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * The data needed to create a Taxonomies.
     */
    data: XOR<TaxonomiesCreateInput, TaxonomiesUncheckedCreateInput>
  }


  /**
   * Taxonomies createMany
   */
  export type TaxonomiesCreateManyArgs = {
    /**
     * The data used to create many Taxonomies.
     */
    data: Enumerable<TaxonomiesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Taxonomies update
   */
  export type TaxonomiesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * The data needed to update a Taxonomies.
     */
    data: XOR<TaxonomiesUpdateInput, TaxonomiesUncheckedUpdateInput>
    /**
     * Choose, which Taxonomies to update.
     */
    where: TaxonomiesWhereUniqueInput
  }


  /**
   * Taxonomies updateMany
   */
  export type TaxonomiesUpdateManyArgs = {
    /**
     * The data used to update Taxonomies.
     */
    data: XOR<TaxonomiesUpdateManyMutationInput, TaxonomiesUncheckedUpdateManyInput>
    /**
     * Filter which Taxonomies to update
     */
    where?: TaxonomiesWhereInput
  }


  /**
   * Taxonomies upsert
   */
  export type TaxonomiesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * The filter to search for the Taxonomies to update in case it exists.
     */
    where: TaxonomiesWhereUniqueInput
    /**
     * In case the Taxonomies found by the `where` argument doesn't exist, create a new Taxonomies with this data.
     */
    create: XOR<TaxonomiesCreateInput, TaxonomiesUncheckedCreateInput>
    /**
     * In case the Taxonomies was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TaxonomiesUpdateInput, TaxonomiesUncheckedUpdateInput>
  }


  /**
   * Taxonomies delete
   */
  export type TaxonomiesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
    /**
     * Filter which Taxonomies to delete.
     */
    where: TaxonomiesWhereUniqueInput
  }


  /**
   * Taxonomies deleteMany
   */
  export type TaxonomiesDeleteManyArgs = {
    /**
     * Filter which Taxonomies to delete
     */
    where?: TaxonomiesWhereInput
  }


  /**
   * Taxonomies.taxa
   */
  export type Taxonomies$taxaArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     */
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxaInclude | null
    where?: TaxaWhereInput
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    cursor?: TaxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Taxonomies without action
   */
  export type TaxonomiesArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     */
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: TaxonomiesInclude | null
  }



  /**
   * Model Ui_options
   */


  export type AggregateUi_options = {
    _count: Ui_optionsCountAggregateOutputType | null
    _min: Ui_optionsMinAggregateOutputType | null
    _max: Ui_optionsMaxAggregateOutputType | null
  }

  export type Ui_optionsMinAggregateOutputType = {
    user_id: string | null
    designing: boolean | null
    breadcrumbs_overflowing: boolean | null
    navs_overflowing: boolean | null
    label: string | null
  }

  export type Ui_optionsMaxAggregateOutputType = {
    user_id: string | null
    designing: boolean | null
    breadcrumbs_overflowing: boolean | null
    navs_overflowing: boolean | null
    label: string | null
  }

  export type Ui_optionsCountAggregateOutputType = {
    user_id: number
    designing: number
    breadcrumbs_overflowing: number
    navs_overflowing: number
    tabs: number
    label: number
    _all: number
  }


  export type Ui_optionsMinAggregateInputType = {
    user_id?: true
    designing?: true
    breadcrumbs_overflowing?: true
    navs_overflowing?: true
    label?: true
  }

  export type Ui_optionsMaxAggregateInputType = {
    user_id?: true
    designing?: true
    breadcrumbs_overflowing?: true
    navs_overflowing?: true
    label?: true
  }

  export type Ui_optionsCountAggregateInputType = {
    user_id?: true
    designing?: true
    breadcrumbs_overflowing?: true
    navs_overflowing?: true
    tabs?: true
    label?: true
    _all?: true
  }

  export type Ui_optionsAggregateArgs = {
    /**
     * Filter which Ui_options to aggregate.
     */
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     */
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ui_options
    **/
    _count?: true | Ui_optionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ui_optionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ui_optionsMaxAggregateInputType
  }

  export type GetUi_optionsAggregateType<T extends Ui_optionsAggregateArgs> = {
        [P in keyof T & keyof AggregateUi_options]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUi_options[P]>
      : GetScalarType<T[P], AggregateUi_options[P]>
  }




  export type Ui_optionsGroupByArgs = {
    where?: Ui_optionsWhereInput
    orderBy?: Enumerable<Ui_optionsOrderByWithAggregationInput>
    by: Ui_optionsScalarFieldEnum[]
    having?: Ui_optionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ui_optionsCountAggregateInputType | true
    _min?: Ui_optionsMinAggregateInputType
    _max?: Ui_optionsMaxAggregateInputType
  }


  export type Ui_optionsGroupByOutputType = {
    user_id: string
    designing: boolean | null
    breadcrumbs_overflowing: boolean | null
    navs_overflowing: boolean | null
    tabs: JsonValue | null
    label: string | null
    _count: Ui_optionsCountAggregateOutputType | null
    _min: Ui_optionsMinAggregateOutputType | null
    _max: Ui_optionsMaxAggregateOutputType | null
  }

  type GetUi_optionsGroupByPayload<T extends Ui_optionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Ui_optionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ui_optionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ui_optionsGroupByOutputType[P]>
            : GetScalarType<T[P], Ui_optionsGroupByOutputType[P]>
        }
      >
    >


  export type Ui_optionsSelect = {
    user_id?: boolean
    designing?: boolean
    breadcrumbs_overflowing?: boolean
    navs_overflowing?: boolean
    tabs?: boolean
    label?: boolean
  }


  export type Ui_optionsGetPayload<S extends boolean | null | undefined | Ui_optionsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Ui_options :
    S extends undefined ? never :
    S extends { include: any } & (Ui_optionsArgs | Ui_optionsFindManyArgs)
    ? Ui_options 
    : S extends { select: any } & (Ui_optionsArgs | Ui_optionsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Ui_options ? Ui_options[P] : never
  } 
      : Ui_options


  type Ui_optionsCountArgs = 
    Omit<Ui_optionsFindManyArgs, 'select' | 'include'> & {
      select?: Ui_optionsCountAggregateInputType | true
    }

  export interface Ui_optionsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Ui_options that matches the filter.
     * @param {Ui_optionsFindUniqueArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Ui_optionsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Ui_optionsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Ui_options'> extends True ? Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>> : Prisma__Ui_optionsClient<Ui_optionsGetPayload<T> | null, null>

    /**
     * Find one Ui_options that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Ui_optionsFindUniqueOrThrowArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Ui_optionsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Ui_optionsFindUniqueOrThrowArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Find the first Ui_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsFindFirstArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Ui_optionsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Ui_optionsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Ui_options'> extends True ? Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>> : Prisma__Ui_optionsClient<Ui_optionsGetPayload<T> | null, null>

    /**
     * Find the first Ui_options that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsFindFirstOrThrowArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Ui_optionsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Ui_optionsFindFirstOrThrowArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Find zero or more Ui_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ui_options
     * const ui_options = await prisma.ui_options.findMany()
     * 
     * // Get first 10 Ui_options
     * const ui_options = await prisma.ui_options.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const ui_optionsWithUser_idOnly = await prisma.ui_options.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends Ui_optionsFindManyArgs>(
      args?: SelectSubset<T, Ui_optionsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Ui_optionsGetPayload<T>>>

    /**
     * Create a Ui_options.
     * @param {Ui_optionsCreateArgs} args - Arguments to create a Ui_options.
     * @example
     * // Create one Ui_options
     * const Ui_options = await prisma.ui_options.create({
     *   data: {
     *     // ... data to create a Ui_options
     *   }
     * })
     * 
    **/
    create<T extends Ui_optionsCreateArgs>(
      args: SelectSubset<T, Ui_optionsCreateArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Create many Ui_options.
     *     @param {Ui_optionsCreateManyArgs} args - Arguments to create many Ui_options.
     *     @example
     *     // Create many Ui_options
     *     const ui_options = await prisma.ui_options.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Ui_optionsCreateManyArgs>(
      args?: SelectSubset<T, Ui_optionsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ui_options.
     * @param {Ui_optionsDeleteArgs} args - Arguments to delete one Ui_options.
     * @example
     * // Delete one Ui_options
     * const Ui_options = await prisma.ui_options.delete({
     *   where: {
     *     // ... filter to delete one Ui_options
     *   }
     * })
     * 
    **/
    delete<T extends Ui_optionsDeleteArgs>(
      args: SelectSubset<T, Ui_optionsDeleteArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Update one Ui_options.
     * @param {Ui_optionsUpdateArgs} args - Arguments to update one Ui_options.
     * @example
     * // Update one Ui_options
     * const ui_options = await prisma.ui_options.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Ui_optionsUpdateArgs>(
      args: SelectSubset<T, Ui_optionsUpdateArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Delete zero or more Ui_options.
     * @param {Ui_optionsDeleteManyArgs} args - Arguments to filter Ui_options to delete.
     * @example
     * // Delete a few Ui_options
     * const { count } = await prisma.ui_options.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Ui_optionsDeleteManyArgs>(
      args?: SelectSubset<T, Ui_optionsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ui_options
     * const ui_options = await prisma.ui_options.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Ui_optionsUpdateManyArgs>(
      args: SelectSubset<T, Ui_optionsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ui_options.
     * @param {Ui_optionsUpsertArgs} args - Arguments to update or create a Ui_options.
     * @example
     * // Update or create a Ui_options
     * const ui_options = await prisma.ui_options.upsert({
     *   create: {
     *     // ... data to create a Ui_options
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ui_options we want to update
     *   }
     * })
    **/
    upsert<T extends Ui_optionsUpsertArgs>(
      args: SelectSubset<T, Ui_optionsUpsertArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Count the number of Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsCountArgs} args - Arguments to filter Ui_options to count.
     * @example
     * // Count the number of Ui_options
     * const count = await prisma.ui_options.count({
     *   where: {
     *     // ... the filter for the Ui_options we want to count
     *   }
     * })
    **/
    count<T extends Ui_optionsCountArgs>(
      args?: Subset<T, Ui_optionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ui_optionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ui_optionsAggregateArgs>(args: Subset<T, Ui_optionsAggregateArgs>): Prisma.PrismaPromise<GetUi_optionsAggregateType<T>>

    /**
     * Group by Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Ui_optionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Ui_optionsGroupByArgs['orderBy'] }
        : { orderBy?: Ui_optionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Ui_optionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUi_optionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Ui_options.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Ui_optionsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Ui_options base type for findUnique actions
   */
  export type Ui_optionsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * Filter, which Ui_options to fetch.
     */
    where: Ui_optionsWhereUniqueInput
  }

  /**
   * Ui_options findUnique
   */
  export interface Ui_optionsFindUniqueArgs extends Ui_optionsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Ui_options findUniqueOrThrow
   */
  export type Ui_optionsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * Filter, which Ui_options to fetch.
     */
    where: Ui_optionsWhereUniqueInput
  }


  /**
   * Ui_options base type for findFirst actions
   */
  export type Ui_optionsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * Filter, which Ui_options to fetch.
     */
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     */
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ui_options.
     */
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ui_options.
     */
    distinct?: Enumerable<Ui_optionsScalarFieldEnum>
  }

  /**
   * Ui_options findFirst
   */
  export interface Ui_optionsFindFirstArgs extends Ui_optionsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Ui_options findFirstOrThrow
   */
  export type Ui_optionsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * Filter, which Ui_options to fetch.
     */
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     */
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ui_options.
     */
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ui_options.
     */
    distinct?: Enumerable<Ui_optionsScalarFieldEnum>
  }


  /**
   * Ui_options findMany
   */
  export type Ui_optionsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * Filter, which Ui_options to fetch.
     */
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     */
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ui_options.
     */
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     */
    skip?: number
    distinct?: Enumerable<Ui_optionsScalarFieldEnum>
  }


  /**
   * Ui_options create
   */
  export type Ui_optionsCreateArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * The data needed to create a Ui_options.
     */
    data: XOR<Ui_optionsCreateInput, Ui_optionsUncheckedCreateInput>
  }


  /**
   * Ui_options createMany
   */
  export type Ui_optionsCreateManyArgs = {
    /**
     * The data used to create many Ui_options.
     */
    data: Enumerable<Ui_optionsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Ui_options update
   */
  export type Ui_optionsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * The data needed to update a Ui_options.
     */
    data: XOR<Ui_optionsUpdateInput, Ui_optionsUncheckedUpdateInput>
    /**
     * Choose, which Ui_options to update.
     */
    where: Ui_optionsWhereUniqueInput
  }


  /**
   * Ui_options updateMany
   */
  export type Ui_optionsUpdateManyArgs = {
    /**
     * The data used to update Ui_options.
     */
    data: XOR<Ui_optionsUpdateManyMutationInput, Ui_optionsUncheckedUpdateManyInput>
    /**
     * Filter which Ui_options to update
     */
    where?: Ui_optionsWhereInput
  }


  /**
   * Ui_options upsert
   */
  export type Ui_optionsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * The filter to search for the Ui_options to update in case it exists.
     */
    where: Ui_optionsWhereUniqueInput
    /**
     * In case the Ui_options found by the `where` argument doesn't exist, create a new Ui_options with this data.
     */
    create: XOR<Ui_optionsCreateInput, Ui_optionsUncheckedCreateInput>
    /**
     * In case the Ui_options was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Ui_optionsUpdateInput, Ui_optionsUncheckedUpdateInput>
  }


  /**
   * Ui_options delete
   */
  export type Ui_optionsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
    /**
     * Filter which Ui_options to delete.
     */
    where: Ui_optionsWhereUniqueInput
  }


  /**
   * Ui_options deleteMany
   */
  export type Ui_optionsDeleteManyArgs = {
    /**
     * Filter which Ui_options to delete
     */
    where?: Ui_optionsWhereInput
  }


  /**
   * Ui_options without action
   */
  export type Ui_optionsArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     */
    select?: Ui_optionsSelect | null
  }



  /**
   * Model Units
   */


  export type AggregateUnits = {
    _count: UnitsCountAggregateOutputType | null
    _avg: UnitsAvgAggregateOutputType | null
    _sum: UnitsSumAggregateOutputType | null
    _min: UnitsMinAggregateOutputType | null
    _max: UnitsMaxAggregateOutputType | null
  }

  export type UnitsAvgAggregateOutputType = {
    sort: number | null
  }

  export type UnitsSumAggregateOutputType = {
    sort: number | null
  }

  export type UnitsMinAggregateOutputType = {
    unit_id: string | null
    account_id: string | null
    project_id: string | null
    use_for_action_values: boolean | null
    use_for_action_report_values: boolean | null
    use_for_check_values: boolean | null
    use_for_place_report_values: boolean | null
    use_for_goal_report_values: boolean | null
    use_for_subproject_taxa: boolean | null
    use_for_check_taxa: boolean | null
    name: string | null
    summable: boolean | null
    sort: number | null
    type: string | null
    list_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type UnitsMaxAggregateOutputType = {
    unit_id: string | null
    account_id: string | null
    project_id: string | null
    use_for_action_values: boolean | null
    use_for_action_report_values: boolean | null
    use_for_check_values: boolean | null
    use_for_place_report_values: boolean | null
    use_for_goal_report_values: boolean | null
    use_for_subproject_taxa: boolean | null
    use_for_check_taxa: boolean | null
    name: string | null
    summable: boolean | null
    sort: number | null
    type: string | null
    list_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type UnitsCountAggregateOutputType = {
    unit_id: number
    account_id: number
    project_id: number
    use_for_action_values: number
    use_for_action_report_values: number
    use_for_check_values: number
    use_for_place_report_values: number
    use_for_goal_report_values: number
    use_for_subproject_taxa: number
    use_for_check_taxa: number
    name: number
    summable: number
    sort: number
    type: number
    list_id: number
    label: number
    deleted: number
    _all: number
  }


  export type UnitsAvgAggregateInputType = {
    sort?: true
  }

  export type UnitsSumAggregateInputType = {
    sort?: true
  }

  export type UnitsMinAggregateInputType = {
    unit_id?: true
    account_id?: true
    project_id?: true
    use_for_action_values?: true
    use_for_action_report_values?: true
    use_for_check_values?: true
    use_for_place_report_values?: true
    use_for_goal_report_values?: true
    use_for_subproject_taxa?: true
    use_for_check_taxa?: true
    name?: true
    summable?: true
    sort?: true
    type?: true
    list_id?: true
    label?: true
    deleted?: true
  }

  export type UnitsMaxAggregateInputType = {
    unit_id?: true
    account_id?: true
    project_id?: true
    use_for_action_values?: true
    use_for_action_report_values?: true
    use_for_check_values?: true
    use_for_place_report_values?: true
    use_for_goal_report_values?: true
    use_for_subproject_taxa?: true
    use_for_check_taxa?: true
    name?: true
    summable?: true
    sort?: true
    type?: true
    list_id?: true
    label?: true
    deleted?: true
  }

  export type UnitsCountAggregateInputType = {
    unit_id?: true
    account_id?: true
    project_id?: true
    use_for_action_values?: true
    use_for_action_report_values?: true
    use_for_check_values?: true
    use_for_place_report_values?: true
    use_for_goal_report_values?: true
    use_for_subproject_taxa?: true
    use_for_check_taxa?: true
    name?: true
    summable?: true
    sort?: true
    type?: true
    list_id?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type UnitsAggregateArgs = {
    /**
     * Filter which Units to aggregate.
     */
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Units
    **/
    _count?: true | UnitsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UnitsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UnitsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UnitsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UnitsMaxAggregateInputType
  }

  export type GetUnitsAggregateType<T extends UnitsAggregateArgs> = {
        [P in keyof T & keyof AggregateUnits]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUnits[P]>
      : GetScalarType<T[P], AggregateUnits[P]>
  }




  export type UnitsGroupByArgs = {
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithAggregationInput>
    by: UnitsScalarFieldEnum[]
    having?: UnitsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UnitsCountAggregateInputType | true
    _avg?: UnitsAvgAggregateInputType
    _sum?: UnitsSumAggregateInputType
    _min?: UnitsMinAggregateInputType
    _max?: UnitsMaxAggregateInputType
  }


  export type UnitsGroupByOutputType = {
    unit_id: string
    account_id: string | null
    project_id: string | null
    use_for_action_values: boolean | null
    use_for_action_report_values: boolean | null
    use_for_check_values: boolean | null
    use_for_place_report_values: boolean | null
    use_for_goal_report_values: boolean | null
    use_for_subproject_taxa: boolean | null
    use_for_check_taxa: boolean | null
    name: string | null
    summable: boolean | null
    sort: number | null
    type: string | null
    list_id: string | null
    label: string | null
    deleted: boolean | null
    _count: UnitsCountAggregateOutputType | null
    _avg: UnitsAvgAggregateOutputType | null
    _sum: UnitsSumAggregateOutputType | null
    _min: UnitsMinAggregateOutputType | null
    _max: UnitsMaxAggregateOutputType | null
  }

  type GetUnitsGroupByPayload<T extends UnitsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<UnitsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UnitsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UnitsGroupByOutputType[P]>
            : GetScalarType<T[P], UnitsGroupByOutputType[P]>
        }
      >
    >


  export type UnitsSelect = {
    unit_id?: boolean
    account_id?: boolean
    project_id?: boolean
    use_for_action_values?: boolean
    use_for_action_report_values?: boolean
    use_for_check_values?: boolean
    use_for_place_report_values?: boolean
    use_for_goal_report_values?: boolean
    use_for_subproject_taxa?: boolean
    use_for_check_taxa?: boolean
    name?: boolean
    summable?: boolean
    sort?: boolean
    type?: boolean
    list_id?: boolean
    label?: boolean
    deleted?: boolean
    action_report_values?: boolean | Units$action_report_valuesArgs
    action_values?: boolean | Units$action_valuesArgs
    check_taxa?: boolean | Units$check_taxaArgs
    check_values?: boolean | Units$check_valuesArgs
    goal_report_values?: boolean | Units$goal_report_valuesArgs
    place_report_values?: boolean | Units$place_report_valuesArgs
    accounts?: boolean | AccountsArgs
    lists?: boolean | ListsArgs
    projects?: boolean | ProjectsArgs
    _count?: boolean | UnitsCountOutputTypeArgs
  }


  export type UnitsInclude = {
    action_report_values?: boolean | Units$action_report_valuesArgs
    action_values?: boolean | Units$action_valuesArgs
    check_taxa?: boolean | Units$check_taxaArgs
    check_values?: boolean | Units$check_valuesArgs
    goal_report_values?: boolean | Units$goal_report_valuesArgs
    place_report_values?: boolean | Units$place_report_valuesArgs
    accounts?: boolean | AccountsArgs
    lists?: boolean | ListsArgs
    projects?: boolean | ProjectsArgs
    _count?: boolean | UnitsCountOutputTypeArgs
  }

  export type UnitsGetPayload<S extends boolean | null | undefined | UnitsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Units :
    S extends undefined ? never :
    S extends { include: any } & (UnitsArgs | UnitsFindManyArgs)
    ? Units  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'action_report_values' ? Array < Action_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'action_values' ? Array < Action_valuesGetPayload<S['include'][P]>>  :
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['include'][P]>>  :
        P extends 'check_values' ? Array < Check_valuesGetPayload<S['include'][P]>>  :
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'place_report_values' ? Array < Place_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? UnitsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (UnitsArgs | UnitsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'action_report_values' ? Array < Action_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'action_values' ? Array < Action_valuesGetPayload<S['select'][P]>>  :
        P extends 'check_taxa' ? Array < Check_taxaGetPayload<S['select'][P]>>  :
        P extends 'check_values' ? Array < Check_valuesGetPayload<S['select'][P]>>  :
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'place_report_values' ? Array < Place_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? UnitsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Units ? Units[P] : never
  } 
      : Units


  type UnitsCountArgs = 
    Omit<UnitsFindManyArgs, 'select' | 'include'> & {
      select?: UnitsCountAggregateInputType | true
    }

  export interface UnitsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Units that matches the filter.
     * @param {UnitsFindUniqueArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UnitsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UnitsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Units'> extends True ? Prisma__UnitsClient<UnitsGetPayload<T>> : Prisma__UnitsClient<UnitsGetPayload<T> | null, null>

    /**
     * Find one Units that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UnitsFindUniqueOrThrowArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UnitsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UnitsFindUniqueOrThrowArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Find the first Units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsFindFirstArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UnitsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UnitsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Units'> extends True ? Prisma__UnitsClient<UnitsGetPayload<T>> : Prisma__UnitsClient<UnitsGetPayload<T> | null, null>

    /**
     * Find the first Units that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsFindFirstOrThrowArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UnitsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UnitsFindFirstOrThrowArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Find zero or more Units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Units
     * const units = await prisma.units.findMany()
     * 
     * // Get first 10 Units
     * const units = await prisma.units.findMany({ take: 10 })
     * 
     * // Only select the `unit_id`
     * const unitsWithUnit_idOnly = await prisma.units.findMany({ select: { unit_id: true } })
     * 
    **/
    findMany<T extends UnitsFindManyArgs>(
      args?: SelectSubset<T, UnitsFindManyArgs>
    ): Prisma.PrismaPromise<Array<UnitsGetPayload<T>>>

    /**
     * Create a Units.
     * @param {UnitsCreateArgs} args - Arguments to create a Units.
     * @example
     * // Create one Units
     * const Units = await prisma.units.create({
     *   data: {
     *     // ... data to create a Units
     *   }
     * })
     * 
    **/
    create<T extends UnitsCreateArgs>(
      args: SelectSubset<T, UnitsCreateArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Create many Units.
     *     @param {UnitsCreateManyArgs} args - Arguments to create many Units.
     *     @example
     *     // Create many Units
     *     const units = await prisma.units.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UnitsCreateManyArgs>(
      args?: SelectSubset<T, UnitsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Units.
     * @param {UnitsDeleteArgs} args - Arguments to delete one Units.
     * @example
     * // Delete one Units
     * const Units = await prisma.units.delete({
     *   where: {
     *     // ... filter to delete one Units
     *   }
     * })
     * 
    **/
    delete<T extends UnitsDeleteArgs>(
      args: SelectSubset<T, UnitsDeleteArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Update one Units.
     * @param {UnitsUpdateArgs} args - Arguments to update one Units.
     * @example
     * // Update one Units
     * const units = await prisma.units.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UnitsUpdateArgs>(
      args: SelectSubset<T, UnitsUpdateArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Delete zero or more Units.
     * @param {UnitsDeleteManyArgs} args - Arguments to filter Units to delete.
     * @example
     * // Delete a few Units
     * const { count } = await prisma.units.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UnitsDeleteManyArgs>(
      args?: SelectSubset<T, UnitsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Units
     * const units = await prisma.units.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UnitsUpdateManyArgs>(
      args: SelectSubset<T, UnitsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Units.
     * @param {UnitsUpsertArgs} args - Arguments to update or create a Units.
     * @example
     * // Update or create a Units
     * const units = await prisma.units.upsert({
     *   create: {
     *     // ... data to create a Units
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Units we want to update
     *   }
     * })
    **/
    upsert<T extends UnitsUpsertArgs>(
      args: SelectSubset<T, UnitsUpsertArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Count the number of Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsCountArgs} args - Arguments to filter Units to count.
     * @example
     * // Count the number of Units
     * const count = await prisma.units.count({
     *   where: {
     *     // ... the filter for the Units we want to count
     *   }
     * })
    **/
    count<T extends UnitsCountArgs>(
      args?: Subset<T, UnitsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UnitsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UnitsAggregateArgs>(args: Subset<T, UnitsAggregateArgs>): Prisma.PrismaPromise<GetUnitsAggregateType<T>>

    /**
     * Group by Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UnitsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UnitsGroupByArgs['orderBy'] }
        : { orderBy?: UnitsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UnitsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUnitsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Units.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UnitsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    action_report_values<T extends Units$action_report_valuesArgs= {}>(args?: Subset<T, Units$action_report_valuesArgs>): Prisma.PrismaPromise<Array<Action_report_valuesGetPayload<T>>| Null>;

    action_values<T extends Units$action_valuesArgs= {}>(args?: Subset<T, Units$action_valuesArgs>): Prisma.PrismaPromise<Array<Action_valuesGetPayload<T>>| Null>;

    check_taxa<T extends Units$check_taxaArgs= {}>(args?: Subset<T, Units$check_taxaArgs>): Prisma.PrismaPromise<Array<Check_taxaGetPayload<T>>| Null>;

    check_values<T extends Units$check_valuesArgs= {}>(args?: Subset<T, Units$check_valuesArgs>): Prisma.PrismaPromise<Array<Check_valuesGetPayload<T>>| Null>;

    goal_report_values<T extends Units$goal_report_valuesArgs= {}>(args?: Subset<T, Units$goal_report_valuesArgs>): Prisma.PrismaPromise<Array<Goal_report_valuesGetPayload<T>>| Null>;

    place_report_values<T extends Units$place_report_valuesArgs= {}>(args?: Subset<T, Units$place_report_valuesArgs>): Prisma.PrismaPromise<Array<Place_report_valuesGetPayload<T>>| Null>;

    accounts<T extends AccountsArgs= {}>(args?: Subset<T, AccountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    lists<T extends ListsArgs= {}>(args?: Subset<T, ListsArgs>): Prisma__ListsClient<ListsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Units base type for findUnique actions
   */
  export type UnitsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     */
    where: UnitsWhereUniqueInput
  }

  /**
   * Units findUnique
   */
  export interface UnitsFindUniqueArgs extends UnitsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Units findUniqueOrThrow
   */
  export type UnitsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     */
    where: UnitsWhereUniqueInput
  }


  /**
   * Units base type for findFirst actions
   */
  export type UnitsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     */
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     */
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     */
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }

  /**
   * Units findFirst
   */
  export interface UnitsFindFirstArgs extends UnitsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Units findFirstOrThrow
   */
  export type UnitsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     */
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     */
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     */
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Units findMany
   */
  export type UnitsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     */
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Units.
     */
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Units create
   */
  export type UnitsCreateArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * The data needed to create a Units.
     */
    data: XOR<UnitsCreateInput, UnitsUncheckedCreateInput>
  }


  /**
   * Units createMany
   */
  export type UnitsCreateManyArgs = {
    /**
     * The data used to create many Units.
     */
    data: Enumerable<UnitsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Units update
   */
  export type UnitsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * The data needed to update a Units.
     */
    data: XOR<UnitsUpdateInput, UnitsUncheckedUpdateInput>
    /**
     * Choose, which Units to update.
     */
    where: UnitsWhereUniqueInput
  }


  /**
   * Units updateMany
   */
  export type UnitsUpdateManyArgs = {
    /**
     * The data used to update Units.
     */
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyInput>
    /**
     * Filter which Units to update
     */
    where?: UnitsWhereInput
  }


  /**
   * Units upsert
   */
  export type UnitsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * The filter to search for the Units to update in case it exists.
     */
    where: UnitsWhereUniqueInput
    /**
     * In case the Units found by the `where` argument doesn't exist, create a new Units with this data.
     */
    create: XOR<UnitsCreateInput, UnitsUncheckedCreateInput>
    /**
     * In case the Units was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UnitsUpdateInput, UnitsUncheckedUpdateInput>
  }


  /**
   * Units delete
   */
  export type UnitsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
    /**
     * Filter which Units to delete.
     */
    where: UnitsWhereUniqueInput
  }


  /**
   * Units deleteMany
   */
  export type UnitsDeleteManyArgs = {
    /**
     * Filter which Units to delete
     */
    where?: UnitsWhereInput
  }


  /**
   * Units.action_report_values
   */
  export type Units$action_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_report_values
     */
    select?: Action_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_report_valuesInclude | null
    where?: Action_report_valuesWhereInput
    orderBy?: Enumerable<Action_report_valuesOrderByWithRelationInput>
    cursor?: Action_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_report_valuesScalarFieldEnum>
  }


  /**
   * Units.action_values
   */
  export type Units$action_valuesArgs = {
    /**
     * Select specific fields to fetch from the Action_values
     */
    select?: Action_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Action_valuesInclude | null
    where?: Action_valuesWhereInput
    orderBy?: Enumerable<Action_valuesOrderByWithRelationInput>
    cursor?: Action_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Action_valuesScalarFieldEnum>
  }


  /**
   * Units.check_taxa
   */
  export type Units$check_taxaArgs = {
    /**
     * Select specific fields to fetch from the Check_taxa
     */
    select?: Check_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_taxaInclude | null
    where?: Check_taxaWhereInput
    orderBy?: Enumerable<Check_taxaOrderByWithRelationInput>
    cursor?: Check_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Check_taxaScalarFieldEnum>
  }


  /**
   * Units.check_values
   */
  export type Units$check_valuesArgs = {
    /**
     * Select specific fields to fetch from the Check_values
     */
    select?: Check_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Check_valuesInclude | null
    where?: Check_valuesWhereInput
    orderBy?: Enumerable<Check_valuesOrderByWithRelationInput>
    cursor?: Check_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Check_valuesScalarFieldEnum>
  }


  /**
   * Units.goal_report_values
   */
  export type Units$goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     */
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Goal_report_valuesInclude | null
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    cursor?: Goal_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Units.place_report_values
   */
  export type Units$place_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Place_report_values
     */
    select?: Place_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_report_valuesInclude | null
    where?: Place_report_valuesWhereInput
    orderBy?: Enumerable<Place_report_valuesOrderByWithRelationInput>
    cursor?: Place_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_report_valuesScalarFieldEnum>
  }


  /**
   * Units without action
   */
  export type UnitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     */
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UnitsInclude | null
  }



  /**
   * Model User_messages
   */


  export type AggregateUser_messages = {
    _count: User_messagesCountAggregateOutputType | null
    _min: User_messagesMinAggregateOutputType | null
    _max: User_messagesMaxAggregateOutputType | null
  }

  export type User_messagesMinAggregateOutputType = {
    user_message_id: string | null
    user_id: string | null
    message_id: string | null
    label: string | null
    read: boolean | null
  }

  export type User_messagesMaxAggregateOutputType = {
    user_message_id: string | null
    user_id: string | null
    message_id: string | null
    label: string | null
    read: boolean | null
  }

  export type User_messagesCountAggregateOutputType = {
    user_message_id: number
    user_id: number
    message_id: number
    label: number
    read: number
    _all: number
  }


  export type User_messagesMinAggregateInputType = {
    user_message_id?: true
    user_id?: true
    message_id?: true
    label?: true
    read?: true
  }

  export type User_messagesMaxAggregateInputType = {
    user_message_id?: true
    user_id?: true
    message_id?: true
    label?: true
    read?: true
  }

  export type User_messagesCountAggregateInputType = {
    user_message_id?: true
    user_id?: true
    message_id?: true
    label?: true
    read?: true
    _all?: true
  }

  export type User_messagesAggregateArgs = {
    /**
     * Filter which User_messages to aggregate.
     */
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     */
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned User_messages
    **/
    _count?: true | User_messagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_messagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_messagesMaxAggregateInputType
  }

  export type GetUser_messagesAggregateType<T extends User_messagesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_messages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_messages[P]>
      : GetScalarType<T[P], AggregateUser_messages[P]>
  }




  export type User_messagesGroupByArgs = {
    where?: User_messagesWhereInput
    orderBy?: Enumerable<User_messagesOrderByWithAggregationInput>
    by: User_messagesScalarFieldEnum[]
    having?: User_messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_messagesCountAggregateInputType | true
    _min?: User_messagesMinAggregateInputType
    _max?: User_messagesMaxAggregateInputType
  }


  export type User_messagesGroupByOutputType = {
    user_message_id: string
    user_id: string | null
    message_id: string | null
    label: string | null
    read: boolean | null
    _count: User_messagesCountAggregateOutputType | null
    _min: User_messagesMinAggregateOutputType | null
    _max: User_messagesMaxAggregateOutputType | null
  }

  type GetUser_messagesGroupByPayload<T extends User_messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<User_messagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_messagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_messagesGroupByOutputType[P]>
            : GetScalarType<T[P], User_messagesGroupByOutputType[P]>
        }
      >
    >


  export type User_messagesSelect = {
    user_message_id?: boolean
    user_id?: boolean
    message_id?: boolean
    label?: boolean
    read?: boolean
    messages?: boolean | MessagesArgs
    users?: boolean | UsersArgs
  }


  export type User_messagesInclude = {
    messages?: boolean | MessagesArgs
    users?: boolean | UsersArgs
  }

  export type User_messagesGetPayload<S extends boolean | null | undefined | User_messagesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? User_messages :
    S extends undefined ? never :
    S extends { include: any } & (User_messagesArgs | User_messagesFindManyArgs)
    ? User_messages  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'messages' ? MessagesGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (User_messagesArgs | User_messagesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'messages' ? MessagesGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :  P extends keyof User_messages ? User_messages[P] : never
  } 
      : User_messages


  type User_messagesCountArgs = 
    Omit<User_messagesFindManyArgs, 'select' | 'include'> & {
      select?: User_messagesCountAggregateInputType | true
    }

  export interface User_messagesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one User_messages that matches the filter.
     * @param {User_messagesFindUniqueArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends User_messagesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, User_messagesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'User_messages'> extends True ? Prisma__User_messagesClient<User_messagesGetPayload<T>> : Prisma__User_messagesClient<User_messagesGetPayload<T> | null, null>

    /**
     * Find one User_messages that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {User_messagesFindUniqueOrThrowArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends User_messagesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, User_messagesFindUniqueOrThrowArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Find the first User_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesFindFirstArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends User_messagesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, User_messagesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'User_messages'> extends True ? Prisma__User_messagesClient<User_messagesGetPayload<T>> : Prisma__User_messagesClient<User_messagesGetPayload<T> | null, null>

    /**
     * Find the first User_messages that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesFindFirstOrThrowArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends User_messagesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, User_messagesFindFirstOrThrowArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Find zero or more User_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_messages
     * const user_messages = await prisma.user_messages.findMany()
     * 
     * // Get first 10 User_messages
     * const user_messages = await prisma.user_messages.findMany({ take: 10 })
     * 
     * // Only select the `user_message_id`
     * const user_messagesWithUser_message_idOnly = await prisma.user_messages.findMany({ select: { user_message_id: true } })
     * 
    **/
    findMany<T extends User_messagesFindManyArgs>(
      args?: SelectSubset<T, User_messagesFindManyArgs>
    ): Prisma.PrismaPromise<Array<User_messagesGetPayload<T>>>

    /**
     * Create a User_messages.
     * @param {User_messagesCreateArgs} args - Arguments to create a User_messages.
     * @example
     * // Create one User_messages
     * const User_messages = await prisma.user_messages.create({
     *   data: {
     *     // ... data to create a User_messages
     *   }
     * })
     * 
    **/
    create<T extends User_messagesCreateArgs>(
      args: SelectSubset<T, User_messagesCreateArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Create many User_messages.
     *     @param {User_messagesCreateManyArgs} args - Arguments to create many User_messages.
     *     @example
     *     // Create many User_messages
     *     const user_messages = await prisma.user_messages.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends User_messagesCreateManyArgs>(
      args?: SelectSubset<T, User_messagesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_messages.
     * @param {User_messagesDeleteArgs} args - Arguments to delete one User_messages.
     * @example
     * // Delete one User_messages
     * const User_messages = await prisma.user_messages.delete({
     *   where: {
     *     // ... filter to delete one User_messages
     *   }
     * })
     * 
    **/
    delete<T extends User_messagesDeleteArgs>(
      args: SelectSubset<T, User_messagesDeleteArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Update one User_messages.
     * @param {User_messagesUpdateArgs} args - Arguments to update one User_messages.
     * @example
     * // Update one User_messages
     * const user_messages = await prisma.user_messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends User_messagesUpdateArgs>(
      args: SelectSubset<T, User_messagesUpdateArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Delete zero or more User_messages.
     * @param {User_messagesDeleteManyArgs} args - Arguments to filter User_messages to delete.
     * @example
     * // Delete a few User_messages
     * const { count } = await prisma.user_messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends User_messagesDeleteManyArgs>(
      args?: SelectSubset<T, User_messagesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_messages
     * const user_messages = await prisma.user_messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends User_messagesUpdateManyArgs>(
      args: SelectSubset<T, User_messagesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_messages.
     * @param {User_messagesUpsertArgs} args - Arguments to update or create a User_messages.
     * @example
     * // Update or create a User_messages
     * const user_messages = await prisma.user_messages.upsert({
     *   create: {
     *     // ... data to create a User_messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_messages we want to update
     *   }
     * })
    **/
    upsert<T extends User_messagesUpsertArgs>(
      args: SelectSubset<T, User_messagesUpsertArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Count the number of User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesCountArgs} args - Arguments to filter User_messages to count.
     * @example
     * // Count the number of User_messages
     * const count = await prisma.user_messages.count({
     *   where: {
     *     // ... the filter for the User_messages we want to count
     *   }
     * })
    **/
    count<T extends User_messagesCountArgs>(
      args?: Subset<T, User_messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_messagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_messagesAggregateArgs>(args: Subset<T, User_messagesAggregateArgs>): Prisma.PrismaPromise<GetUser_messagesAggregateType<T>>

    /**
     * Group by User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_messagesGroupByArgs['orderBy'] }
        : { orderBy?: User_messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_messagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for User_messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__User_messagesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    messages<T extends MessagesArgs= {}>(args?: Subset<T, MessagesArgs>): Prisma__MessagesClient<MessagesGetPayload<T> | Null>;

    users<T extends UsersArgs= {}>(args?: Subset<T, UsersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * User_messages base type for findUnique actions
   */
  export type User_messagesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     */
    where: User_messagesWhereUniqueInput
  }

  /**
   * User_messages findUnique
   */
  export interface User_messagesFindUniqueArgs extends User_messagesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User_messages findUniqueOrThrow
   */
  export type User_messagesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     */
    where: User_messagesWhereUniqueInput
  }


  /**
   * User_messages base type for findFirst actions
   */
  export type User_messagesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     */
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     */
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_messages.
     */
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_messages.
     */
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }

  /**
   * User_messages findFirst
   */
  export interface User_messagesFindFirstArgs extends User_messagesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User_messages findFirstOrThrow
   */
  export type User_messagesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     */
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     */
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_messages.
     */
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_messages.
     */
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * User_messages findMany
   */
  export type User_messagesFindManyArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     */
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     */
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing User_messages.
     */
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     */
    skip?: number
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * User_messages create
   */
  export type User_messagesCreateArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * The data needed to create a User_messages.
     */
    data: XOR<User_messagesCreateInput, User_messagesUncheckedCreateInput>
  }


  /**
   * User_messages createMany
   */
  export type User_messagesCreateManyArgs = {
    /**
     * The data used to create many User_messages.
     */
    data: Enumerable<User_messagesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * User_messages update
   */
  export type User_messagesUpdateArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * The data needed to update a User_messages.
     */
    data: XOR<User_messagesUpdateInput, User_messagesUncheckedUpdateInput>
    /**
     * Choose, which User_messages to update.
     */
    where: User_messagesWhereUniqueInput
  }


  /**
   * User_messages updateMany
   */
  export type User_messagesUpdateManyArgs = {
    /**
     * The data used to update User_messages.
     */
    data: XOR<User_messagesUpdateManyMutationInput, User_messagesUncheckedUpdateManyInput>
    /**
     * Filter which User_messages to update
     */
    where?: User_messagesWhereInput
  }


  /**
   * User_messages upsert
   */
  export type User_messagesUpsertArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * The filter to search for the User_messages to update in case it exists.
     */
    where: User_messagesWhereUniqueInput
    /**
     * In case the User_messages found by the `where` argument doesn't exist, create a new User_messages with this data.
     */
    create: XOR<User_messagesCreateInput, User_messagesUncheckedCreateInput>
    /**
     * In case the User_messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<User_messagesUpdateInput, User_messagesUncheckedUpdateInput>
  }


  /**
   * User_messages delete
   */
  export type User_messagesDeleteArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    /**
     * Filter which User_messages to delete.
     */
    where: User_messagesWhereUniqueInput
  }


  /**
   * User_messages deleteMany
   */
  export type User_messagesDeleteManyArgs = {
    /**
     * Filter which User_messages to delete
     */
    where?: User_messagesWhereInput
  }


  /**
   * User_messages without action
   */
  export type User_messagesArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
  }



  /**
   * Model Users
   */


  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    user_id: string | null
    email: string | null
    auth_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type UsersMaxAggregateOutputType = {
    user_id: string | null
    email: string | null
    auth_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type UsersCountAggregateOutputType = {
    user_id: number
    email: number
    auth_id: number
    label: number
    deleted: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    user_id?: true
    email?: true
    auth_id?: true
    label?: true
    deleted?: true
  }

  export type UsersMaxAggregateInputType = {
    user_id?: true
    email?: true
    auth_id?: true
    label?: true
    deleted?: true
  }

  export type UsersCountAggregateInputType = {
    user_id?: true
    email?: true
    auth_id?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type UsersAggregateArgs = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs = {
    where?: UsersWhereInput
    orderBy?: Enumerable<UsersOrderByWithAggregationInput>
    by: UsersScalarFieldEnum[]
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }


  export type UsersGroupByOutputType = {
    user_id: string
    email: string | null
    auth_id: string | null
    label: string | null
    deleted: boolean | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect = {
    user_id?: boolean
    email?: boolean
    auth_id?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | Users$accountsArgs
    place_users?: boolean | Users$place_usersArgs
    project_users?: boolean | Users$project_usersArgs
    subproject_users?: boolean | Users$subproject_usersArgs
    user_messages?: boolean | Users$user_messagesArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }


  export type UsersInclude = {
    accounts?: boolean | Users$accountsArgs
    place_users?: boolean | Users$place_usersArgs
    project_users?: boolean | Users$project_usersArgs
    subproject_users?: boolean | Users$subproject_usersArgs
    user_messages?: boolean | Users$user_messagesArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }

  export type UsersGetPayload<S extends boolean | null | undefined | UsersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Users :
    S extends undefined ? never :
    S extends { include: any } & (UsersArgs | UsersFindManyArgs)
    ? Users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? Array < AccountsGetPayload<S['include'][P]>>  :
        P extends 'place_users' ? Array < Place_usersGetPayload<S['include'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['include'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['include'][P]>>  :
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['include'][P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (UsersArgs | UsersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? Array < AccountsGetPayload<S['select'][P]>>  :
        P extends 'place_users' ? Array < Place_usersGetPayload<S['select'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['select'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['select'][P]>>  :
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['select'][P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Users ? Users[P] : never
  } 
      : Users


  type UsersCountArgs = 
    Omit<UsersFindManyArgs, 'select' | 'include'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UsersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Users'> extends True ? Prisma__UsersClient<UsersGetPayload<T>> : Prisma__UsersClient<UsersGetPayload<T> | null, null>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UsersFindUniqueOrThrowArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UsersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Users'> extends True ? Prisma__UsersClient<UsersGetPayload<T>> : Prisma__UsersClient<UsersGetPayload<T> | null, null>

    /**
     * Find the first Users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UsersFindFirstOrThrowArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const usersWithUser_idOnly = await prisma.users.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends UsersFindManyArgs>(
      args?: SelectSubset<T, UsersFindManyArgs>
    ): Prisma.PrismaPromise<Array<UsersGetPayload<T>>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends UsersCreateArgs>(
      args: SelectSubset<T, UsersCreateArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Create many Users.
     *     @param {UsersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UsersCreateManyArgs>(
      args?: SelectSubset<T, UsersCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends UsersDeleteArgs>(
      args: SelectSubset<T, UsersDeleteArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsersUpdateArgs>(
      args: SelectSubset<T, UsersUpdateArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsersDeleteManyArgs>(
      args?: SelectSubset<T, UsersDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsersUpdateManyArgs>(
      args: SelectSubset<T, UsersUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends UsersUpsertArgs>(
      args: SelectSubset<T, UsersUpsertArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UsersClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    accounts<T extends Users$accountsArgs= {}>(args?: Subset<T, Users$accountsArgs>): Prisma.PrismaPromise<Array<AccountsGetPayload<T>>| Null>;

    place_users<T extends Users$place_usersArgs= {}>(args?: Subset<T, Users$place_usersArgs>): Prisma.PrismaPromise<Array<Place_usersGetPayload<T>>| Null>;

    project_users<T extends Users$project_usersArgs= {}>(args?: Subset<T, Users$project_usersArgs>): Prisma.PrismaPromise<Array<Project_usersGetPayload<T>>| Null>;

    subproject_users<T extends Users$subproject_usersArgs= {}>(args?: Subset<T, Users$subproject_usersArgs>): Prisma.PrismaPromise<Array<Subproject_usersGetPayload<T>>| Null>;

    user_messages<T extends Users$user_messagesArgs= {}>(args?: Subset<T, Users$user_messagesArgs>): Prisma.PrismaPromise<Array<User_messagesGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Users base type for findUnique actions
   */
  export type UsersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUnique
   */
  export interface UsersFindUniqueArgs extends UsersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }


  /**
   * Users base type for findFirst actions
   */
  export type UsersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: Enumerable<UsersScalarFieldEnum>
  }

  /**
   * Users findFirst
   */
  export interface UsersFindFirstArgs extends UsersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * Users findMany
   */
  export type UsersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * Users create
   */
  export type UsersCreateArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }


  /**
   * Users createMany
   */
  export type UsersCreateManyArgs = {
    /**
     * The data used to create many Users.
     */
    data: Enumerable<UsersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Users update
   */
  export type UsersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }


  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
  }


  /**
   * Users upsert
   */
  export type UsersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }


  /**
   * Users delete
   */
  export type UsersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }


  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
  }


  /**
   * Users.accounts
   */
  export type Users$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     */
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: AccountsInclude | null
    where?: AccountsWhereInput
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    cursor?: AccountsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }


  /**
   * Users.place_users
   */
  export type Users$place_usersArgs = {
    /**
     * Select specific fields to fetch from the Place_users
     */
    select?: Place_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Place_usersInclude | null
    where?: Place_usersWhereInput
    orderBy?: Enumerable<Place_usersOrderByWithRelationInput>
    cursor?: Place_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_usersScalarFieldEnum>
  }


  /**
   * Users.project_users
   */
  export type Users$project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     */
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Project_usersInclude | null
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    cursor?: Project_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Users.subproject_users
   */
  export type Users$subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     */
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Subproject_usersInclude | null
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    cursor?: Subproject_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Users.user_messages
   */
  export type Users$user_messagesArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     */
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: User_messagesInclude | null
    where?: User_messagesWhereInput
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    cursor?: User_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * Users without action
   */
  export type UsersArgs = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersInclude | null
  }



  /**
   * Model Widget_types
   */


  export type AggregateWidget_types = {
    _count: Widget_typesCountAggregateOutputType | null
    _avg: Widget_typesAvgAggregateOutputType | null
    _sum: Widget_typesSumAggregateOutputType | null
    _min: Widget_typesMinAggregateOutputType | null
    _max: Widget_typesMaxAggregateOutputType | null
  }

  export type Widget_typesAvgAggregateOutputType = {
    sort: number | null
  }

  export type Widget_typesSumAggregateOutputType = {
    sort: number | null
  }

  export type Widget_typesMinAggregateOutputType = {
    widget_type_id: string | null
    name: string | null
    needs_list: boolean | null
    sort: number | null
    comment: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Widget_typesMaxAggregateOutputType = {
    widget_type_id: string | null
    name: string | null
    needs_list: boolean | null
    sort: number | null
    comment: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Widget_typesCountAggregateOutputType = {
    widget_type_id: number
    name: number
    needs_list: number
    sort: number
    comment: number
    label: number
    deleted: number
    _all: number
  }


  export type Widget_typesAvgAggregateInputType = {
    sort?: true
  }

  export type Widget_typesSumAggregateInputType = {
    sort?: true
  }

  export type Widget_typesMinAggregateInputType = {
    widget_type_id?: true
    name?: true
    needs_list?: true
    sort?: true
    comment?: true
    label?: true
    deleted?: true
  }

  export type Widget_typesMaxAggregateInputType = {
    widget_type_id?: true
    name?: true
    needs_list?: true
    sort?: true
    comment?: true
    label?: true
    deleted?: true
  }

  export type Widget_typesCountAggregateInputType = {
    widget_type_id?: true
    name?: true
    needs_list?: true
    sort?: true
    comment?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Widget_typesAggregateArgs = {
    /**
     * Filter which Widget_types to aggregate.
     */
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     */
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Widget_types
    **/
    _count?: true | Widget_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Widget_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Widget_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Widget_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Widget_typesMaxAggregateInputType
  }

  export type GetWidget_typesAggregateType<T extends Widget_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateWidget_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWidget_types[P]>
      : GetScalarType<T[P], AggregateWidget_types[P]>
  }




  export type Widget_typesGroupByArgs = {
    where?: Widget_typesWhereInput
    orderBy?: Enumerable<Widget_typesOrderByWithAggregationInput>
    by: Widget_typesScalarFieldEnum[]
    having?: Widget_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Widget_typesCountAggregateInputType | true
    _avg?: Widget_typesAvgAggregateInputType
    _sum?: Widget_typesSumAggregateInputType
    _min?: Widget_typesMinAggregateInputType
    _max?: Widget_typesMaxAggregateInputType
  }


  export type Widget_typesGroupByOutputType = {
    widget_type_id: string
    name: string | null
    needs_list: boolean | null
    sort: number | null
    comment: string | null
    label: string | null
    deleted: boolean | null
    _count: Widget_typesCountAggregateOutputType | null
    _avg: Widget_typesAvgAggregateOutputType | null
    _sum: Widget_typesSumAggregateOutputType | null
    _min: Widget_typesMinAggregateOutputType | null
    _max: Widget_typesMaxAggregateOutputType | null
  }

  type GetWidget_typesGroupByPayload<T extends Widget_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Widget_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Widget_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Widget_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Widget_typesGroupByOutputType[P]>
        }
      >
    >


  export type Widget_typesSelect = {
    widget_type_id?: boolean
    name?: boolean
    needs_list?: boolean
    sort?: boolean
    comment?: boolean
    label?: boolean
    deleted?: boolean
    fields?: boolean | Widget_types$fieldsArgs
    widgets_for_fields?: boolean | Widget_types$widgets_for_fieldsArgs
    _count?: boolean | Widget_typesCountOutputTypeArgs
  }


  export type Widget_typesInclude = {
    fields?: boolean | Widget_types$fieldsArgs
    widgets_for_fields?: boolean | Widget_types$widgets_for_fieldsArgs
    _count?: boolean | Widget_typesCountOutputTypeArgs
  }

  export type Widget_typesGetPayload<S extends boolean | null | undefined | Widget_typesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Widget_types :
    S extends undefined ? never :
    S extends { include: any } & (Widget_typesArgs | Widget_typesFindManyArgs)
    ? Widget_types  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['include'][P]>>  :
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['include'][P]>>  :
        P extends '_count' ? Widget_typesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Widget_typesArgs | Widget_typesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'fields' ? Array < FieldsGetPayload<S['select'][P]>>  :
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['select'][P]>>  :
        P extends '_count' ? Widget_typesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Widget_types ? Widget_types[P] : never
  } 
      : Widget_types


  type Widget_typesCountArgs = 
    Omit<Widget_typesFindManyArgs, 'select' | 'include'> & {
      select?: Widget_typesCountAggregateInputType | true
    }

  export interface Widget_typesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Widget_types that matches the filter.
     * @param {Widget_typesFindUniqueArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Widget_typesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Widget_typesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Widget_types'> extends True ? Prisma__Widget_typesClient<Widget_typesGetPayload<T>> : Prisma__Widget_typesClient<Widget_typesGetPayload<T> | null, null>

    /**
     * Find one Widget_types that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Widget_typesFindUniqueOrThrowArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Widget_typesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Widget_typesFindUniqueOrThrowArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Find the first Widget_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesFindFirstArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Widget_typesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Widget_typesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Widget_types'> extends True ? Prisma__Widget_typesClient<Widget_typesGetPayload<T>> : Prisma__Widget_typesClient<Widget_typesGetPayload<T> | null, null>

    /**
     * Find the first Widget_types that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesFindFirstOrThrowArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Widget_typesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Widget_typesFindFirstOrThrowArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Find zero or more Widget_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Widget_types
     * const widget_types = await prisma.widget_types.findMany()
     * 
     * // Get first 10 Widget_types
     * const widget_types = await prisma.widget_types.findMany({ take: 10 })
     * 
     * // Only select the `widget_type_id`
     * const widget_typesWithWidget_type_idOnly = await prisma.widget_types.findMany({ select: { widget_type_id: true } })
     * 
    **/
    findMany<T extends Widget_typesFindManyArgs>(
      args?: SelectSubset<T, Widget_typesFindManyArgs>
    ): Prisma.PrismaPromise<Array<Widget_typesGetPayload<T>>>

    /**
     * Create a Widget_types.
     * @param {Widget_typesCreateArgs} args - Arguments to create a Widget_types.
     * @example
     * // Create one Widget_types
     * const Widget_types = await prisma.widget_types.create({
     *   data: {
     *     // ... data to create a Widget_types
     *   }
     * })
     * 
    **/
    create<T extends Widget_typesCreateArgs>(
      args: SelectSubset<T, Widget_typesCreateArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Create many Widget_types.
     *     @param {Widget_typesCreateManyArgs} args - Arguments to create many Widget_types.
     *     @example
     *     // Create many Widget_types
     *     const widget_types = await prisma.widget_types.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Widget_typesCreateManyArgs>(
      args?: SelectSubset<T, Widget_typesCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Widget_types.
     * @param {Widget_typesDeleteArgs} args - Arguments to delete one Widget_types.
     * @example
     * // Delete one Widget_types
     * const Widget_types = await prisma.widget_types.delete({
     *   where: {
     *     // ... filter to delete one Widget_types
     *   }
     * })
     * 
    **/
    delete<T extends Widget_typesDeleteArgs>(
      args: SelectSubset<T, Widget_typesDeleteArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Update one Widget_types.
     * @param {Widget_typesUpdateArgs} args - Arguments to update one Widget_types.
     * @example
     * // Update one Widget_types
     * const widget_types = await prisma.widget_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Widget_typesUpdateArgs>(
      args: SelectSubset<T, Widget_typesUpdateArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Delete zero or more Widget_types.
     * @param {Widget_typesDeleteManyArgs} args - Arguments to filter Widget_types to delete.
     * @example
     * // Delete a few Widget_types
     * const { count } = await prisma.widget_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Widget_typesDeleteManyArgs>(
      args?: SelectSubset<T, Widget_typesDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Widget_types
     * const widget_types = await prisma.widget_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Widget_typesUpdateManyArgs>(
      args: SelectSubset<T, Widget_typesUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Widget_types.
     * @param {Widget_typesUpsertArgs} args - Arguments to update or create a Widget_types.
     * @example
     * // Update or create a Widget_types
     * const widget_types = await prisma.widget_types.upsert({
     *   create: {
     *     // ... data to create a Widget_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Widget_types we want to update
     *   }
     * })
    **/
    upsert<T extends Widget_typesUpsertArgs>(
      args: SelectSubset<T, Widget_typesUpsertArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Count the number of Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesCountArgs} args - Arguments to filter Widget_types to count.
     * @example
     * // Count the number of Widget_types
     * const count = await prisma.widget_types.count({
     *   where: {
     *     // ... the filter for the Widget_types we want to count
     *   }
     * })
    **/
    count<T extends Widget_typesCountArgs>(
      args?: Subset<T, Widget_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Widget_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Widget_typesAggregateArgs>(args: Subset<T, Widget_typesAggregateArgs>): Prisma.PrismaPromise<GetWidget_typesAggregateType<T>>

    /**
     * Group by Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Widget_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Widget_typesGroupByArgs['orderBy'] }
        : { orderBy?: Widget_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Widget_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWidget_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Widget_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Widget_typesClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    fields<T extends Widget_types$fieldsArgs= {}>(args?: Subset<T, Widget_types$fieldsArgs>): Prisma.PrismaPromise<Array<FieldsGetPayload<T>>| Null>;

    widgets_for_fields<T extends Widget_types$widgets_for_fieldsArgs= {}>(args?: Subset<T, Widget_types$widgets_for_fieldsArgs>): Prisma.PrismaPromise<Array<Widgets_for_fieldsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Widget_types base type for findUnique actions
   */
  export type Widget_typesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     */
    where: Widget_typesWhereUniqueInput
  }

  /**
   * Widget_types findUnique
   */
  export interface Widget_typesFindUniqueArgs extends Widget_typesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widget_types findUniqueOrThrow
   */
  export type Widget_typesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     */
    where: Widget_typesWhereUniqueInput
  }


  /**
   * Widget_types base type for findFirst actions
   */
  export type Widget_typesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     */
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     */
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widget_types.
     */
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widget_types.
     */
    distinct?: Enumerable<Widget_typesScalarFieldEnum>
  }

  /**
   * Widget_types findFirst
   */
  export interface Widget_typesFindFirstArgs extends Widget_typesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widget_types findFirstOrThrow
   */
  export type Widget_typesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     */
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     */
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widget_types.
     */
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widget_types.
     */
    distinct?: Enumerable<Widget_typesScalarFieldEnum>
  }


  /**
   * Widget_types findMany
   */
  export type Widget_typesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     */
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     */
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Widget_types.
     */
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     */
    skip?: number
    distinct?: Enumerable<Widget_typesScalarFieldEnum>
  }


  /**
   * Widget_types create
   */
  export type Widget_typesCreateArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * The data needed to create a Widget_types.
     */
    data: XOR<Widget_typesCreateInput, Widget_typesUncheckedCreateInput>
  }


  /**
   * Widget_types createMany
   */
  export type Widget_typesCreateManyArgs = {
    /**
     * The data used to create many Widget_types.
     */
    data: Enumerable<Widget_typesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Widget_types update
   */
  export type Widget_typesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * The data needed to update a Widget_types.
     */
    data: XOR<Widget_typesUpdateInput, Widget_typesUncheckedUpdateInput>
    /**
     * Choose, which Widget_types to update.
     */
    where: Widget_typesWhereUniqueInput
  }


  /**
   * Widget_types updateMany
   */
  export type Widget_typesUpdateManyArgs = {
    /**
     * The data used to update Widget_types.
     */
    data: XOR<Widget_typesUpdateManyMutationInput, Widget_typesUncheckedUpdateManyInput>
    /**
     * Filter which Widget_types to update
     */
    where?: Widget_typesWhereInput
  }


  /**
   * Widget_types upsert
   */
  export type Widget_typesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * The filter to search for the Widget_types to update in case it exists.
     */
    where: Widget_typesWhereUniqueInput
    /**
     * In case the Widget_types found by the `where` argument doesn't exist, create a new Widget_types with this data.
     */
    create: XOR<Widget_typesCreateInput, Widget_typesUncheckedCreateInput>
    /**
     * In case the Widget_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Widget_typesUpdateInput, Widget_typesUncheckedUpdateInput>
  }


  /**
   * Widget_types delete
   */
  export type Widget_typesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
    /**
     * Filter which Widget_types to delete.
     */
    where: Widget_typesWhereUniqueInput
  }


  /**
   * Widget_types deleteMany
   */
  export type Widget_typesDeleteManyArgs = {
    /**
     * Filter which Widget_types to delete
     */
    where?: Widget_typesWhereInput
  }


  /**
   * Widget_types.fields
   */
  export type Widget_types$fieldsArgs = {
    /**
     * Select specific fields to fetch from the Fields
     */
    select?: FieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: FieldsInclude | null
    where?: FieldsWhereInput
    orderBy?: Enumerable<FieldsOrderByWithRelationInput>
    cursor?: FieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FieldsScalarFieldEnum>
  }


  /**
   * Widget_types.widgets_for_fields
   */
  export type Widget_types$widgets_for_fieldsArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    where?: Widgets_for_fieldsWhereInput
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    cursor?: Widgets_for_fieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Widget_types without action
   */
  export type Widget_typesArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     */
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widget_typesInclude | null
  }



  /**
   * Model Widgets_for_fields
   */


  export type AggregateWidgets_for_fields = {
    _count: Widgets_for_fieldsCountAggregateOutputType | null
    _min: Widgets_for_fieldsMinAggregateOutputType | null
    _max: Widgets_for_fieldsMaxAggregateOutputType | null
  }

  export type Widgets_for_fieldsMinAggregateOutputType = {
    widget_for_field_id: string | null
    field_type_id: string | null
    widget_type_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Widgets_for_fieldsMaxAggregateOutputType = {
    widget_for_field_id: string | null
    field_type_id: string | null
    widget_type_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Widgets_for_fieldsCountAggregateOutputType = {
    widget_for_field_id: number
    field_type_id: number
    widget_type_id: number
    label: number
    deleted: number
    _all: number
  }


  export type Widgets_for_fieldsMinAggregateInputType = {
    widget_for_field_id?: true
    field_type_id?: true
    widget_type_id?: true
    label?: true
    deleted?: true
  }

  export type Widgets_for_fieldsMaxAggregateInputType = {
    widget_for_field_id?: true
    field_type_id?: true
    widget_type_id?: true
    label?: true
    deleted?: true
  }

  export type Widgets_for_fieldsCountAggregateInputType = {
    widget_for_field_id?: true
    field_type_id?: true
    widget_type_id?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Widgets_for_fieldsAggregateArgs = {
    /**
     * Filter which Widgets_for_fields to aggregate.
     */
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     */
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Widgets_for_fields
    **/
    _count?: true | Widgets_for_fieldsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Widgets_for_fieldsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Widgets_for_fieldsMaxAggregateInputType
  }

  export type GetWidgets_for_fieldsAggregateType<T extends Widgets_for_fieldsAggregateArgs> = {
        [P in keyof T & keyof AggregateWidgets_for_fields]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWidgets_for_fields[P]>
      : GetScalarType<T[P], AggregateWidgets_for_fields[P]>
  }




  export type Widgets_for_fieldsGroupByArgs = {
    where?: Widgets_for_fieldsWhereInput
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithAggregationInput>
    by: Widgets_for_fieldsScalarFieldEnum[]
    having?: Widgets_for_fieldsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Widgets_for_fieldsCountAggregateInputType | true
    _min?: Widgets_for_fieldsMinAggregateInputType
    _max?: Widgets_for_fieldsMaxAggregateInputType
  }


  export type Widgets_for_fieldsGroupByOutputType = {
    widget_for_field_id: string
    field_type_id: string | null
    widget_type_id: string | null
    label: string | null
    deleted: boolean | null
    _count: Widgets_for_fieldsCountAggregateOutputType | null
    _min: Widgets_for_fieldsMinAggregateOutputType | null
    _max: Widgets_for_fieldsMaxAggregateOutputType | null
  }

  type GetWidgets_for_fieldsGroupByPayload<T extends Widgets_for_fieldsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<Widgets_for_fieldsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Widgets_for_fieldsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Widgets_for_fieldsGroupByOutputType[P]>
            : GetScalarType<T[P], Widgets_for_fieldsGroupByOutputType[P]>
        }
      >
    >


  export type Widgets_for_fieldsSelect = {
    widget_for_field_id?: boolean
    field_type_id?: boolean
    widget_type_id?: boolean
    label?: boolean
    deleted?: boolean
    field_types?: boolean | Field_typesArgs
    widget_types?: boolean | Widget_typesArgs
  }


  export type Widgets_for_fieldsInclude = {
    field_types?: boolean | Field_typesArgs
    widget_types?: boolean | Widget_typesArgs
  }

  export type Widgets_for_fieldsGetPayload<S extends boolean | null | undefined | Widgets_for_fieldsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Widgets_for_fields :
    S extends undefined ? never :
    S extends { include: any } & (Widgets_for_fieldsArgs | Widgets_for_fieldsFindManyArgs)
    ? Widgets_for_fields  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'field_types' ? Field_typesGetPayload<S['include'][P]> | null :
        P extends 'widget_types' ? Widget_typesGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Widgets_for_fieldsArgs | Widgets_for_fieldsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'field_types' ? Field_typesGetPayload<S['select'][P]> | null :
        P extends 'widget_types' ? Widget_typesGetPayload<S['select'][P]> | null :  P extends keyof Widgets_for_fields ? Widgets_for_fields[P] : never
  } 
      : Widgets_for_fields


  type Widgets_for_fieldsCountArgs = 
    Omit<Widgets_for_fieldsFindManyArgs, 'select' | 'include'> & {
      select?: Widgets_for_fieldsCountAggregateInputType | true
    }

  export interface Widgets_for_fieldsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {

    /**
     * Find zero or one Widgets_for_fields that matches the filter.
     * @param {Widgets_for_fieldsFindUniqueArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Widgets_for_fieldsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Widgets_for_fieldsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Widgets_for_fields'> extends True ? Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>> : Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T> | null, null>

    /**
     * Find one Widgets_for_fields that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Widgets_for_fieldsFindUniqueOrThrowArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Widgets_for_fieldsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsFindUniqueOrThrowArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Find the first Widgets_for_fields that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsFindFirstArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Widgets_for_fieldsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Widgets_for_fieldsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Widgets_for_fields'> extends True ? Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>> : Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T> | null, null>

    /**
     * Find the first Widgets_for_fields that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsFindFirstOrThrowArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Widgets_for_fieldsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsFindFirstOrThrowArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Find zero or more Widgets_for_fields that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findMany()
     * 
     * // Get first 10 Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findMany({ take: 10 })
     * 
     * // Only select the `widget_for_field_id`
     * const widgets_for_fieldsWithWidget_for_field_idOnly = await prisma.widgets_for_fields.findMany({ select: { widget_for_field_id: true } })
     * 
    **/
    findMany<T extends Widgets_for_fieldsFindManyArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsFindManyArgs>
    ): Prisma.PrismaPromise<Array<Widgets_for_fieldsGetPayload<T>>>

    /**
     * Create a Widgets_for_fields.
     * @param {Widgets_for_fieldsCreateArgs} args - Arguments to create a Widgets_for_fields.
     * @example
     * // Create one Widgets_for_fields
     * const Widgets_for_fields = await prisma.widgets_for_fields.create({
     *   data: {
     *     // ... data to create a Widgets_for_fields
     *   }
     * })
     * 
    **/
    create<T extends Widgets_for_fieldsCreateArgs>(
      args: SelectSubset<T, Widgets_for_fieldsCreateArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Create many Widgets_for_fields.
     *     @param {Widgets_for_fieldsCreateManyArgs} args - Arguments to create many Widgets_for_fields.
     *     @example
     *     // Create many Widgets_for_fields
     *     const widgets_for_fields = await prisma.widgets_for_fields.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Widgets_for_fieldsCreateManyArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsCreateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Widgets_for_fields.
     * @param {Widgets_for_fieldsDeleteArgs} args - Arguments to delete one Widgets_for_fields.
     * @example
     * // Delete one Widgets_for_fields
     * const Widgets_for_fields = await prisma.widgets_for_fields.delete({
     *   where: {
     *     // ... filter to delete one Widgets_for_fields
     *   }
     * })
     * 
    **/
    delete<T extends Widgets_for_fieldsDeleteArgs>(
      args: SelectSubset<T, Widgets_for_fieldsDeleteArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Update one Widgets_for_fields.
     * @param {Widgets_for_fieldsUpdateArgs} args - Arguments to update one Widgets_for_fields.
     * @example
     * // Update one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Widgets_for_fieldsUpdateArgs>(
      args: SelectSubset<T, Widgets_for_fieldsUpdateArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Delete zero or more Widgets_for_fields.
     * @param {Widgets_for_fieldsDeleteManyArgs} args - Arguments to filter Widgets_for_fields to delete.
     * @example
     * // Delete a few Widgets_for_fields
     * const { count } = await prisma.widgets_for_fields.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Widgets_for_fieldsDeleteManyArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsDeleteManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Widgets_for_fieldsUpdateManyArgs>(
      args: SelectSubset<T, Widgets_for_fieldsUpdateManyArgs>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Widgets_for_fields.
     * @param {Widgets_for_fieldsUpsertArgs} args - Arguments to update or create a Widgets_for_fields.
     * @example
     * // Update or create a Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.upsert({
     *   create: {
     *     // ... data to create a Widgets_for_fields
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Widgets_for_fields we want to update
     *   }
     * })
    **/
    upsert<T extends Widgets_for_fieldsUpsertArgs>(
      args: SelectSubset<T, Widgets_for_fieldsUpsertArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Count the number of Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsCountArgs} args - Arguments to filter Widgets_for_fields to count.
     * @example
     * // Count the number of Widgets_for_fields
     * const count = await prisma.widgets_for_fields.count({
     *   where: {
     *     // ... the filter for the Widgets_for_fields we want to count
     *   }
     * })
    **/
    count<T extends Widgets_for_fieldsCountArgs>(
      args?: Subset<T, Widgets_for_fieldsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Widgets_for_fieldsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Widgets_for_fieldsAggregateArgs>(args: Subset<T, Widgets_for_fieldsAggregateArgs>): Prisma.PrismaPromise<GetWidgets_for_fieldsAggregateType<T>>

    /**
     * Group by Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Widgets_for_fieldsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Widgets_for_fieldsGroupByArgs['orderBy'] }
        : { orderBy?: Widgets_for_fieldsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Widgets_for_fieldsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWidgets_for_fieldsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Widgets_for_fields.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Widgets_for_fieldsClient<T, Null = never> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);

    field_types<T extends Field_typesArgs= {}>(args?: Subset<T, Field_typesArgs>): Prisma__Field_typesClient<Field_typesGetPayload<T> | Null>;

    widget_types<T extends Widget_typesArgs= {}>(args?: Subset<T, Widget_typesArgs>): Prisma__Widget_typesClient<Widget_typesGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Widgets_for_fields base type for findUnique actions
   */
  export type Widgets_for_fieldsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     */
    where: Widgets_for_fieldsWhereUniqueInput
  }

  /**
   * Widgets_for_fields findUnique
   */
  export interface Widgets_for_fieldsFindUniqueArgs extends Widgets_for_fieldsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widgets_for_fields findUniqueOrThrow
   */
  export type Widgets_for_fieldsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     */
    where: Widgets_for_fieldsWhereUniqueInput
  }


  /**
   * Widgets_for_fields base type for findFirst actions
   */
  export type Widgets_for_fieldsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     */
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     */
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widgets_for_fields.
     */
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widgets_for_fields.
     */
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }

  /**
   * Widgets_for_fields findFirst
   */
  export interface Widgets_for_fieldsFindFirstArgs extends Widgets_for_fieldsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widgets_for_fields findFirstOrThrow
   */
  export type Widgets_for_fieldsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     */
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     */
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widgets_for_fields.
     */
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widgets_for_fields.
     */
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Widgets_for_fields findMany
   */
  export type Widgets_for_fieldsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     */
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     */
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Widgets_for_fields.
     */
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     */
    skip?: number
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Widgets_for_fields create
   */
  export type Widgets_for_fieldsCreateArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * The data needed to create a Widgets_for_fields.
     */
    data: XOR<Widgets_for_fieldsCreateInput, Widgets_for_fieldsUncheckedCreateInput>
  }


  /**
   * Widgets_for_fields createMany
   */
  export type Widgets_for_fieldsCreateManyArgs = {
    /**
     * The data used to create many Widgets_for_fields.
     */
    data: Enumerable<Widgets_for_fieldsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Widgets_for_fields update
   */
  export type Widgets_for_fieldsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * The data needed to update a Widgets_for_fields.
     */
    data: XOR<Widgets_for_fieldsUpdateInput, Widgets_for_fieldsUncheckedUpdateInput>
    /**
     * Choose, which Widgets_for_fields to update.
     */
    where: Widgets_for_fieldsWhereUniqueInput
  }


  /**
   * Widgets_for_fields updateMany
   */
  export type Widgets_for_fieldsUpdateManyArgs = {
    /**
     * The data used to update Widgets_for_fields.
     */
    data: XOR<Widgets_for_fieldsUpdateManyMutationInput, Widgets_for_fieldsUncheckedUpdateManyInput>
    /**
     * Filter which Widgets_for_fields to update
     */
    where?: Widgets_for_fieldsWhereInput
  }


  /**
   * Widgets_for_fields upsert
   */
  export type Widgets_for_fieldsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * The filter to search for the Widgets_for_fields to update in case it exists.
     */
    where: Widgets_for_fieldsWhereUniqueInput
    /**
     * In case the Widgets_for_fields found by the `where` argument doesn't exist, create a new Widgets_for_fields with this data.
     */
    create: XOR<Widgets_for_fieldsCreateInput, Widgets_for_fieldsUncheckedCreateInput>
    /**
     * In case the Widgets_for_fields was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Widgets_for_fieldsUpdateInput, Widgets_for_fieldsUncheckedUpdateInput>
  }


  /**
   * Widgets_for_fields delete
   */
  export type Widgets_for_fieldsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter which Widgets_for_fields to delete.
     */
    where: Widgets_for_fieldsWhereUniqueInput
  }


  /**
   * Widgets_for_fields deleteMany
   */
  export type Widgets_for_fieldsDeleteManyArgs = {
    /**
     * Filter which Widgets_for_fields to delete
     */
    where?: Widgets_for_fieldsWhereInput
  }


  /**
   * Widgets_for_fields without action
   */
  export type Widgets_for_fieldsArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     */
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: Widgets_for_fieldsInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const AccountsScalarFieldEnum: {
    account_id: 'account_id',
    user_id: 'user_id',
    type: 'type',
    period_start: 'period_start',
    period_end: 'period_end',
    projects_label_by: 'projects_label_by',
    label: 'label'
  };

  export type AccountsScalarFieldEnum = (typeof AccountsScalarFieldEnum)[keyof typeof AccountsScalarFieldEnum]


  export const Action_report_valuesScalarFieldEnum: {
    action_report_value_id: 'action_report_value_id',
    account_id: 'account_id',
    action_report_id: 'action_report_id',
    unit_id: 'unit_id',
    value_integer: 'value_integer',
    value_numeric: 'value_numeric',
    value_text: 'value_text',
    label: 'label',
    deleted: 'deleted'
  };

  export type Action_report_valuesScalarFieldEnum = (typeof Action_report_valuesScalarFieldEnum)[keyof typeof Action_report_valuesScalarFieldEnum]


  export const Action_reportsScalarFieldEnum: {
    action_report_id: 'action_report_id',
    account_id: 'account_id',
    action_id: 'action_id',
    year: 'year',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type Action_reportsScalarFieldEnum = (typeof Action_reportsScalarFieldEnum)[keyof typeof Action_reportsScalarFieldEnum]


  export const Action_valuesScalarFieldEnum: {
    action_value_id: 'action_value_id',
    account_id: 'account_id',
    action_id: 'action_id',
    unit_id: 'unit_id',
    value_integer: 'value_integer',
    value_numeric: 'value_numeric',
    value_text: 'value_text',
    label: 'label',
    deleted: 'deleted'
  };

  export type Action_valuesScalarFieldEnum = (typeof Action_valuesScalarFieldEnum)[keyof typeof Action_valuesScalarFieldEnum]


  export const ActionsScalarFieldEnum: {
    action_id: 'action_id',
    account_id: 'account_id',
    place_id: 'place_id',
    date: 'date',
    data: 'data',
    relevant_for_reports: 'relevant_for_reports',
    label: 'label',
    deleted: 'deleted'
  };

  export type ActionsScalarFieldEnum = (typeof ActionsScalarFieldEnum)[keyof typeof ActionsScalarFieldEnum]


  export const Check_taxaScalarFieldEnum: {
    check_taxon_id: 'check_taxon_id',
    account_id: 'account_id',
    check_id: 'check_id',
    taxon_id: 'taxon_id',
    unit_id: 'unit_id',
    value_integer: 'value_integer',
    value_numeric: 'value_numeric',
    value_text: 'value_text',
    label: 'label',
    deleted: 'deleted'
  };

  export type Check_taxaScalarFieldEnum = (typeof Check_taxaScalarFieldEnum)[keyof typeof Check_taxaScalarFieldEnum]


  export const Check_valuesScalarFieldEnum: {
    check_value_id: 'check_value_id',
    account_id: 'account_id',
    check_id: 'check_id',
    unit_id: 'unit_id',
    value_integer: 'value_integer',
    value_numeric: 'value_numeric',
    value_text: 'value_text',
    label: 'label',
    deleted: 'deleted'
  };

  export type Check_valuesScalarFieldEnum = (typeof Check_valuesScalarFieldEnum)[keyof typeof Check_valuesScalarFieldEnum]


  export const ChecksScalarFieldEnum: {
    check_id: 'check_id',
    account_id: 'account_id',
    place_id: 'place_id',
    date: 'date',
    data: 'data',
    relevant_for_reports: 'relevant_for_reports',
    label: 'label',
    deleted: 'deleted'
  };

  export type ChecksScalarFieldEnum = (typeof ChecksScalarFieldEnum)[keyof typeof ChecksScalarFieldEnum]


  export const Field_typesScalarFieldEnum: {
    field_type_id: 'field_type_id',
    name: 'name',
    sort: 'sort',
    comment: 'comment',
    label: 'label',
    deleted: 'deleted'
  };

  export type Field_typesScalarFieldEnum = (typeof Field_typesScalarFieldEnum)[keyof typeof Field_typesScalarFieldEnum]


  export const FieldsScalarFieldEnum: {
    field_id: 'field_id',
    project_id: 'project_id',
    account_id: 'account_id',
    table_name: 'table_name',
    field_type_id: 'field_type_id',
    widget_type_id: 'widget_type_id',
    name: 'name',
    field_label: 'field_label',
    list_id: 'list_id',
    preset: 'preset',
    obsolete: 'obsolete',
    label: 'label',
    deleted: 'deleted'
  };

  export type FieldsScalarFieldEnum = (typeof FieldsScalarFieldEnum)[keyof typeof FieldsScalarFieldEnum]


  export const FilesScalarFieldEnum: {
    file_id: 'file_id',
    account_id: 'account_id',
    project_id: 'project_id',
    subproject_id: 'subproject_id',
    place_id: 'place_id',
    action_id: 'action_id',
    check_id: 'check_id',
    name: 'name',
    label: 'label',
    data: 'data',
    mimetype: 'mimetype',
    url: 'url',
    deleted: 'deleted'
  };

  export type FilesScalarFieldEnum = (typeof FilesScalarFieldEnum)[keyof typeof FilesScalarFieldEnum]


  export const Goal_report_valuesScalarFieldEnum: {
    goal_report_value_id: 'goal_report_value_id',
    account_id: 'account_id',
    goal_report_id: 'goal_report_id',
    unit_id: 'unit_id',
    value_integer: 'value_integer',
    value_numeric: 'value_numeric',
    value_text: 'value_text',
    label: 'label',
    deleted: 'deleted'
  };

  export type Goal_report_valuesScalarFieldEnum = (typeof Goal_report_valuesScalarFieldEnum)[keyof typeof Goal_report_valuesScalarFieldEnum]


  export const Goal_reportsScalarFieldEnum: {
    goal_report_id: 'goal_report_id',
    account_id: 'account_id',
    goal_id: 'goal_id',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type Goal_reportsScalarFieldEnum = (typeof Goal_reportsScalarFieldEnum)[keyof typeof Goal_reportsScalarFieldEnum]


  export const GoalsScalarFieldEnum: {
    goal_id: 'goal_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    year: 'year',
    name: 'name',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type GoalsScalarFieldEnum = (typeof GoalsScalarFieldEnum)[keyof typeof GoalsScalarFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const List_valuesScalarFieldEnum: {
    list_value_id: 'list_value_id',
    account_id: 'account_id',
    list_id: 'list_id',
    value: 'value',
    obsolete: 'obsolete',
    label: 'label',
    deleted: 'deleted'
  };

  export type List_valuesScalarFieldEnum = (typeof List_valuesScalarFieldEnum)[keyof typeof List_valuesScalarFieldEnum]


  export const ListsScalarFieldEnum: {
    list_id: 'list_id',
    account_id: 'account_id',
    project_id: 'project_id',
    name: 'name',
    data: 'data',
    obsolete: 'obsolete',
    label: 'label',
    deleted: 'deleted'
  };

  export type ListsScalarFieldEnum = (typeof ListsScalarFieldEnum)[keyof typeof ListsScalarFieldEnum]


  export const MessagesScalarFieldEnum: {
    message_id: 'message_id',
    label: 'label',
    date: 'date',
    message: 'message'
  };

  export type MessagesScalarFieldEnum = (typeof MessagesScalarFieldEnum)[keyof typeof MessagesScalarFieldEnum]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const Observation_sourcesScalarFieldEnum: {
    observation_source_id: 'observation_source_id',
    account_id: 'account_id',
    project_id: 'project_id',
    name: 'name',
    url: 'url',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type Observation_sourcesScalarFieldEnum = (typeof Observation_sourcesScalarFieldEnum)[keyof typeof Observation_sourcesScalarFieldEnum]


  export const ObservationsScalarFieldEnum: {
    observation_id: 'observation_id',
    account_id: 'account_id',
    observation_source_id: 'observation_source_id',
    place_id: 'place_id',
    id_in_source: 'id_in_source',
    url: 'url',
    observation_data: 'observation_data',
    date: 'date',
    author: 'author',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type ObservationsScalarFieldEnum = (typeof ObservationsScalarFieldEnum)[keyof typeof ObservationsScalarFieldEnum]


  export const PersonsScalarFieldEnum: {
    person_id: 'person_id',
    project_id: 'project_id',
    account_id: 'account_id',
    email: 'email',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type PersonsScalarFieldEnum = (typeof PersonsScalarFieldEnum)[keyof typeof PersonsScalarFieldEnum]


  export const Place_levelsScalarFieldEnum: {
    place_level_id: 'place_level_id',
    account_id: 'account_id',
    project_id: 'project_id',
    level: 'level',
    name_singular: 'name_singular',
    name_plural: 'name_plural',
    name_short: 'name_short',
    reports: 'reports',
    report_values: 'report_values',
    actions: 'actions',
    action_values: 'action_values',
    action_reports: 'action_reports',
    checks: 'checks',
    check_values: 'check_values',
    check_taxa: 'check_taxa',
    observation_references: 'observation_references',
    label: 'label',
    deleted: 'deleted'
  };

  export type Place_levelsScalarFieldEnum = (typeof Place_levelsScalarFieldEnum)[keyof typeof Place_levelsScalarFieldEnum]


  export const Place_report_valuesScalarFieldEnum: {
    place_report_value_id: 'place_report_value_id',
    account_id: 'account_id',
    place_report_id: 'place_report_id',
    unit_id: 'unit_id',
    value_integer: 'value_integer',
    value_numeric: 'value_numeric',
    value_text: 'value_text',
    label: 'label',
    deleted: 'deleted'
  };

  export type Place_report_valuesScalarFieldEnum = (typeof Place_report_valuesScalarFieldEnum)[keyof typeof Place_report_valuesScalarFieldEnum]


  export const Place_reportsScalarFieldEnum: {
    place_report_id: 'place_report_id',
    account_id: 'account_id',
    place_id: 'place_id',
    year: 'year',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type Place_reportsScalarFieldEnum = (typeof Place_reportsScalarFieldEnum)[keyof typeof Place_reportsScalarFieldEnum]


  export const Place_usersScalarFieldEnum: {
    place_user_id: 'place_user_id',
    account_id: 'account_id',
    place_id: 'place_id',
    user_id: 'user_id',
    role: 'role',
    label: 'label',
    deleted: 'deleted'
  };

  export type Place_usersScalarFieldEnum = (typeof Place_usersScalarFieldEnum)[keyof typeof Place_usersScalarFieldEnum]


  export const PlacesScalarFieldEnum: {
    place_id: 'place_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    parent_id: 'parent_id',
    level: 'level',
    data: 'data',
    label: 'label',
    files_active_places: 'files_active_places',
    deleted: 'deleted'
  };

  export type PlacesScalarFieldEnum = (typeof PlacesScalarFieldEnum)[keyof typeof PlacesScalarFieldEnum]


  export const Project_reportsScalarFieldEnum: {
    project_report_id: 'project_report_id',
    account_id: 'account_id',
    project_id: 'project_id',
    year: 'year',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type Project_reportsScalarFieldEnum = (typeof Project_reportsScalarFieldEnum)[keyof typeof Project_reportsScalarFieldEnum]


  export const Project_usersScalarFieldEnum: {
    project_user_id: 'project_user_id',
    account_id: 'account_id',
    project_id: 'project_id',
    user_id: 'user_id',
    role: 'role',
    label: 'label',
    deleted: 'deleted'
  };

  export type Project_usersScalarFieldEnum = (typeof Project_usersScalarFieldEnum)[keyof typeof Project_usersScalarFieldEnum]


  export const ProjectsScalarFieldEnum: {
    project_id: 'project_id',
    account_id: 'account_id',
    name: 'name',
    label: 'label',
    type: 'type',
    subproject_name_singular: 'subproject_name_singular',
    subproject_name_plural: 'subproject_name_plural',
    subproject_order_by: 'subproject_order_by',
    places_label_by: 'places_label_by',
    places_order_by: 'places_order_by',
    persons_label_by: 'persons_label_by',
    persons_order_by: 'persons_order_by',
    goal_reports_label_by: 'goal_reports_label_by',
    goal_reports_order_by: 'goal_reports_order_by',
    values_on_multiple_levels: 'values_on_multiple_levels',
    multiple_action_values_on_same_level: 'multiple_action_values_on_same_level',
    multiple_check_values_on_same_level: 'multiple_check_values_on_same_level',
    data: 'data',
    files_active_projects: 'files_active_projects',
    files_active_projects_reports: 'files_active_projects_reports',
    files_active_subprojects: 'files_active_subprojects',
    files_active_subproject_reports: 'files_active_subproject_reports',
    files_active_places: 'files_active_places',
    files_active_actions: 'files_active_actions',
    files_active_checks: 'files_active_checks',
    files_active_check_reports: 'files_active_check_reports',
    deleted: 'deleted'
  };

  export type ProjectsScalarFieldEnum = (typeof ProjectsScalarFieldEnum)[keyof typeof ProjectsScalarFieldEnum]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const Subproject_reportsScalarFieldEnum: {
    subproject_report_id: 'subproject_report_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    year: 'year',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type Subproject_reportsScalarFieldEnum = (typeof Subproject_reportsScalarFieldEnum)[keyof typeof Subproject_reportsScalarFieldEnum]


  export const Subproject_taxaScalarFieldEnum: {
    subproject_taxon_id: 'subproject_taxon_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    taxon_id: 'taxon_id',
    label: 'label',
    deleted: 'deleted'
  };

  export type Subproject_taxaScalarFieldEnum = (typeof Subproject_taxaScalarFieldEnum)[keyof typeof Subproject_taxaScalarFieldEnum]


  export const Subproject_usersScalarFieldEnum: {
    subproject_user_id: 'subproject_user_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    user_id: 'user_id',
    role: 'role',
    label: 'label',
    deleted: 'deleted'
  };

  export type Subproject_usersScalarFieldEnum = (typeof Subproject_usersScalarFieldEnum)[keyof typeof Subproject_usersScalarFieldEnum]


  export const SubprojectsScalarFieldEnum: {
    subproject_id: 'subproject_id',
    account_id: 'account_id',
    project_id: 'project_id',
    name: 'name',
    label: 'label',
    since_year: 'since_year',
    data: 'data',
    deleted: 'deleted'
  };

  export type SubprojectsScalarFieldEnum = (typeof SubprojectsScalarFieldEnum)[keyof typeof SubprojectsScalarFieldEnum]


  export const TaxaScalarFieldEnum: {
    taxon_id: 'taxon_id',
    account_id: 'account_id',
    taxonomy_id: 'taxonomy_id',
    name: 'name',
    id_in_source: 'id_in_source',
    url: 'url',
    label: 'label',
    deleted: 'deleted'
  };

  export type TaxaScalarFieldEnum = (typeof TaxaScalarFieldEnum)[keyof typeof TaxaScalarFieldEnum]


  export const TaxonomiesScalarFieldEnum: {
    taxonomy_id: 'taxonomy_id',
    account_id: 'account_id',
    project_id: 'project_id',
    type: 'type',
    name: 'name',
    url: 'url',
    obsolete: 'obsolete',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type TaxonomiesScalarFieldEnum = (typeof TaxonomiesScalarFieldEnum)[keyof typeof TaxonomiesScalarFieldEnum]


  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Ui_optionsScalarFieldEnum: {
    user_id: 'user_id',
    designing: 'designing',
    breadcrumbs_overflowing: 'breadcrumbs_overflowing',
    navs_overflowing: 'navs_overflowing',
    tabs: 'tabs',
    label: 'label'
  };

  export type Ui_optionsScalarFieldEnum = (typeof Ui_optionsScalarFieldEnum)[keyof typeof Ui_optionsScalarFieldEnum]


  export const UnitsScalarFieldEnum: {
    unit_id: 'unit_id',
    account_id: 'account_id',
    project_id: 'project_id',
    use_for_action_values: 'use_for_action_values',
    use_for_action_report_values: 'use_for_action_report_values',
    use_for_check_values: 'use_for_check_values',
    use_for_place_report_values: 'use_for_place_report_values',
    use_for_goal_report_values: 'use_for_goal_report_values',
    use_for_subproject_taxa: 'use_for_subproject_taxa',
    use_for_check_taxa: 'use_for_check_taxa',
    name: 'name',
    summable: 'summable',
    sort: 'sort',
    type: 'type',
    list_id: 'list_id',
    label: 'label',
    deleted: 'deleted'
  };

  export type UnitsScalarFieldEnum = (typeof UnitsScalarFieldEnum)[keyof typeof UnitsScalarFieldEnum]


  export const User_messagesScalarFieldEnum: {
    user_message_id: 'user_message_id',
    user_id: 'user_id',
    message_id: 'message_id',
    label: 'label',
    read: 'read'
  };

  export type User_messagesScalarFieldEnum = (typeof User_messagesScalarFieldEnum)[keyof typeof User_messagesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    user_id: 'user_id',
    email: 'email',
    auth_id: 'auth_id',
    label: 'label',
    deleted: 'deleted'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Widget_typesScalarFieldEnum: {
    widget_type_id: 'widget_type_id',
    name: 'name',
    needs_list: 'needs_list',
    sort: 'sort',
    comment: 'comment',
    label: 'label',
    deleted: 'deleted'
  };

  export type Widget_typesScalarFieldEnum = (typeof Widget_typesScalarFieldEnum)[keyof typeof Widget_typesScalarFieldEnum]


  export const Widgets_for_fieldsScalarFieldEnum: {
    widget_for_field_id: 'widget_for_field_id',
    field_type_id: 'field_type_id',
    widget_type_id: 'widget_type_id',
    label: 'label',
    deleted: 'deleted'
  };

  export type Widgets_for_fieldsScalarFieldEnum = (typeof Widgets_for_fieldsScalarFieldEnum)[keyof typeof Widgets_for_fieldsScalarFieldEnum]


  /**
   * Deep Input Types
   */


  export type AccountsWhereInput = {
    AND?: Enumerable<AccountsWhereInput>
    OR?: Enumerable<AccountsWhereInput>
    NOT?: Enumerable<AccountsWhereInput>
    account_id?: UuidFilter | string
    user_id?: UuidNullableFilter | string | null
    type?: StringNullableFilter | string | null
    period_start?: DateTimeNullableFilter | Date | string | null
    period_end?: DateTimeNullableFilter | Date | string | null
    projects_label_by?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    users?: XOR<UsersRelationFilter, UsersWhereInput> | null
    action_report_values?: Action_report_valuesListRelationFilter
    action_reports?: Action_reportsListRelationFilter
    action_values?: Action_valuesListRelationFilter
    actions?: ActionsListRelationFilter
    check_taxa?: Check_taxaListRelationFilter
    check_values?: Check_valuesListRelationFilter
    checks?: ChecksListRelationFilter
    fields?: FieldsListRelationFilter
    files?: FilesListRelationFilter
    goal_report_values?: Goal_report_valuesListRelationFilter
    goal_reports?: Goal_reportsListRelationFilter
    goals?: GoalsListRelationFilter
    list_values?: List_valuesListRelationFilter
    lists?: ListsListRelationFilter
    observation_sources?: Observation_sourcesListRelationFilter
    observations?: ObservationsListRelationFilter
    persons?: PersonsListRelationFilter
    place_levels?: Place_levelsListRelationFilter
    place_report_values?: Place_report_valuesListRelationFilter
    place_reports?: Place_reportsListRelationFilter
    place_users?: Place_usersListRelationFilter
    places?: PlacesListRelationFilter
    project_reports?: Project_reportsListRelationFilter
    project_users?: Project_usersListRelationFilter
    projects?: ProjectsListRelationFilter
    subproject_reports?: Subproject_reportsListRelationFilter
    subproject_taxa?: Subproject_taxaListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    subprojects?: SubprojectsListRelationFilter
    taxa?: TaxaListRelationFilter
    taxonomies?: TaxonomiesListRelationFilter
    units?: UnitsListRelationFilter
  }

  export type AccountsOrderByWithRelationInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
    users?: UsersOrderByWithRelationInput
    action_report_values?: Action_report_valuesOrderByRelationAggregateInput
    action_reports?: Action_reportsOrderByRelationAggregateInput
    action_values?: Action_valuesOrderByRelationAggregateInput
    actions?: ActionsOrderByRelationAggregateInput
    check_taxa?: Check_taxaOrderByRelationAggregateInput
    check_values?: Check_valuesOrderByRelationAggregateInput
    checks?: ChecksOrderByRelationAggregateInput
    fields?: FieldsOrderByRelationAggregateInput
    files?: FilesOrderByRelationAggregateInput
    goal_report_values?: Goal_report_valuesOrderByRelationAggregateInput
    goal_reports?: Goal_reportsOrderByRelationAggregateInput
    goals?: GoalsOrderByRelationAggregateInput
    list_values?: List_valuesOrderByRelationAggregateInput
    lists?: ListsOrderByRelationAggregateInput
    observation_sources?: Observation_sourcesOrderByRelationAggregateInput
    observations?: ObservationsOrderByRelationAggregateInput
    persons?: PersonsOrderByRelationAggregateInput
    place_levels?: Place_levelsOrderByRelationAggregateInput
    place_report_values?: Place_report_valuesOrderByRelationAggregateInput
    place_reports?: Place_reportsOrderByRelationAggregateInput
    place_users?: Place_usersOrderByRelationAggregateInput
    places?: PlacesOrderByRelationAggregateInput
    project_reports?: Project_reportsOrderByRelationAggregateInput
    project_users?: Project_usersOrderByRelationAggregateInput
    projects?: ProjectsOrderByRelationAggregateInput
    subproject_reports?: Subproject_reportsOrderByRelationAggregateInput
    subproject_taxa?: Subproject_taxaOrderByRelationAggregateInput
    subproject_users?: Subproject_usersOrderByRelationAggregateInput
    subprojects?: SubprojectsOrderByRelationAggregateInput
    taxa?: TaxaOrderByRelationAggregateInput
    taxonomies?: TaxonomiesOrderByRelationAggregateInput
    units?: UnitsOrderByRelationAggregateInput
  }

  export type AccountsWhereUniqueInput = {
    account_id?: string
  }

  export type AccountsOrderByWithAggregationInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
    _count?: AccountsCountOrderByAggregateInput
    _max?: AccountsMaxOrderByAggregateInput
    _min?: AccountsMinOrderByAggregateInput
  }

  export type AccountsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<AccountsScalarWhereWithAggregatesInput>
    OR?: Enumerable<AccountsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<AccountsScalarWhereWithAggregatesInput>
    account_id?: UuidWithAggregatesFilter | string
    user_id?: UuidNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    period_start?: DateTimeNullableWithAggregatesFilter | Date | string | null
    period_end?: DateTimeNullableWithAggregatesFilter | Date | string | null
    projects_label_by?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
  }

  export type Action_report_valuesWhereInput = {
    AND?: Enumerable<Action_report_valuesWhereInput>
    OR?: Enumerable<Action_report_valuesWhereInput>
    NOT?: Enumerable<Action_report_valuesWhereInput>
    action_report_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    action_report_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    action_reports?: XOR<Action_reportsRelationFilter, Action_reportsWhereInput> | null
    units?: XOR<UnitsRelationFilter, UnitsWhereInput> | null
  }

  export type Action_report_valuesOrderByWithRelationInput = {
    action_report_value_id?: SortOrder
    account_id?: SortOrder
    action_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    action_reports?: Action_reportsOrderByWithRelationInput
    units?: UnitsOrderByWithRelationInput
  }

  export type Action_report_valuesWhereUniqueInput = {
    action_report_value_id?: string
  }

  export type Action_report_valuesOrderByWithAggregationInput = {
    action_report_value_id?: SortOrder
    account_id?: SortOrder
    action_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Action_report_valuesCountOrderByAggregateInput
    _avg?: Action_report_valuesAvgOrderByAggregateInput
    _max?: Action_report_valuesMaxOrderByAggregateInput
    _min?: Action_report_valuesMinOrderByAggregateInput
    _sum?: Action_report_valuesSumOrderByAggregateInput
  }

  export type Action_report_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Action_report_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Action_report_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Action_report_valuesScalarWhereWithAggregatesInput>
    action_report_value_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    action_report_id?: UuidNullableWithAggregatesFilter | string | null
    unit_id?: UuidNullableWithAggregatesFilter | string | null
    value_integer?: IntNullableWithAggregatesFilter | number | null
    value_numeric?: FloatNullableWithAggregatesFilter | number | null
    value_text?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Action_reportsWhereInput = {
    AND?: Enumerable<Action_reportsWhereInput>
    OR?: Enumerable<Action_reportsWhereInput>
    NOT?: Enumerable<Action_reportsWhereInput>
    action_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    action_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    action_report_values?: Action_report_valuesListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    actions?: XOR<ActionsRelationFilter, ActionsWhereInput> | null
  }

  export type Action_reportsOrderByWithRelationInput = {
    action_report_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    action_report_values?: Action_report_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    actions?: ActionsOrderByWithRelationInput
  }

  export type Action_reportsWhereUniqueInput = {
    action_report_id?: string
  }

  export type Action_reportsOrderByWithAggregationInput = {
    action_report_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Action_reportsCountOrderByAggregateInput
    _avg?: Action_reportsAvgOrderByAggregateInput
    _max?: Action_reportsMaxOrderByAggregateInput
    _min?: Action_reportsMinOrderByAggregateInput
    _sum?: Action_reportsSumOrderByAggregateInput
  }

  export type Action_reportsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Action_reportsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Action_reportsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Action_reportsScalarWhereWithAggregatesInput>
    action_report_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    action_id?: UuidNullableWithAggregatesFilter | string | null
    year?: IntNullableWithAggregatesFilter | number | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Action_valuesWhereInput = {
    AND?: Enumerable<Action_valuesWhereInput>
    OR?: Enumerable<Action_valuesWhereInput>
    NOT?: Enumerable<Action_valuesWhereInput>
    action_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    action_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    actions?: XOR<ActionsRelationFilter, ActionsWhereInput> | null
    units?: XOR<UnitsRelationFilter, UnitsWhereInput> | null
  }

  export type Action_valuesOrderByWithRelationInput = {
    action_value_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    actions?: ActionsOrderByWithRelationInput
    units?: UnitsOrderByWithRelationInput
  }

  export type Action_valuesWhereUniqueInput = {
    action_value_id?: string
  }

  export type Action_valuesOrderByWithAggregationInput = {
    action_value_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Action_valuesCountOrderByAggregateInput
    _avg?: Action_valuesAvgOrderByAggregateInput
    _max?: Action_valuesMaxOrderByAggregateInput
    _min?: Action_valuesMinOrderByAggregateInput
    _sum?: Action_valuesSumOrderByAggregateInput
  }

  export type Action_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Action_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Action_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Action_valuesScalarWhereWithAggregatesInput>
    action_value_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    action_id?: UuidNullableWithAggregatesFilter | string | null
    unit_id?: UuidNullableWithAggregatesFilter | string | null
    value_integer?: IntNullableWithAggregatesFilter | number | null
    value_numeric?: FloatNullableWithAggregatesFilter | number | null
    value_text?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type ActionsWhereInput = {
    AND?: Enumerable<ActionsWhereInput>
    OR?: Enumerable<ActionsWhereInput>
    NOT?: Enumerable<ActionsWhereInput>
    action_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    date?: DateTimeNullableFilter | Date | string | null
    data?: JsonNullableFilter
    relevant_for_reports?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    action_reports?: Action_reportsListRelationFilter
    action_values?: Action_valuesListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    places?: XOR<PlacesRelationFilter, PlacesWhereInput> | null
    files?: FilesListRelationFilter
  }

  export type ActionsOrderByWithRelationInput = {
    action_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    data?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    action_reports?: Action_reportsOrderByRelationAggregateInput
    action_values?: Action_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    places?: PlacesOrderByWithRelationInput
    files?: FilesOrderByRelationAggregateInput
  }

  export type ActionsWhereUniqueInput = {
    action_id?: string
  }

  export type ActionsOrderByWithAggregationInput = {
    action_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    data?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: ActionsCountOrderByAggregateInput
    _max?: ActionsMaxOrderByAggregateInput
    _min?: ActionsMinOrderByAggregateInput
  }

  export type ActionsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ActionsScalarWhereWithAggregatesInput>
    OR?: Enumerable<ActionsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ActionsScalarWhereWithAggregatesInput>
    action_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    place_id?: UuidNullableWithAggregatesFilter | string | null
    date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    data?: JsonNullableWithAggregatesFilter
    relevant_for_reports?: BoolNullableWithAggregatesFilter | boolean | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Check_taxaWhereInput = {
    AND?: Enumerable<Check_taxaWhereInput>
    OR?: Enumerable<Check_taxaWhereInput>
    NOT?: Enumerable<Check_taxaWhereInput>
    check_taxon_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    check_id?: UuidNullableFilter | string | null
    taxon_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    checks?: XOR<ChecksRelationFilter, ChecksWhereInput> | null
    taxa?: XOR<TaxaRelationFilter, TaxaWhereInput> | null
    units?: XOR<UnitsRelationFilter, UnitsWhereInput> | null
  }

  export type Check_taxaOrderByWithRelationInput = {
    check_taxon_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    taxon_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    checks?: ChecksOrderByWithRelationInput
    taxa?: TaxaOrderByWithRelationInput
    units?: UnitsOrderByWithRelationInput
  }

  export type Check_taxaWhereUniqueInput = {
    check_taxon_id?: string
  }

  export type Check_taxaOrderByWithAggregationInput = {
    check_taxon_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    taxon_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Check_taxaCountOrderByAggregateInput
    _avg?: Check_taxaAvgOrderByAggregateInput
    _max?: Check_taxaMaxOrderByAggregateInput
    _min?: Check_taxaMinOrderByAggregateInput
    _sum?: Check_taxaSumOrderByAggregateInput
  }

  export type Check_taxaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Check_taxaScalarWhereWithAggregatesInput>
    OR?: Enumerable<Check_taxaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Check_taxaScalarWhereWithAggregatesInput>
    check_taxon_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    check_id?: UuidNullableWithAggregatesFilter | string | null
    taxon_id?: UuidNullableWithAggregatesFilter | string | null
    unit_id?: UuidNullableWithAggregatesFilter | string | null
    value_integer?: IntNullableWithAggregatesFilter | number | null
    value_numeric?: FloatNullableWithAggregatesFilter | number | null
    value_text?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Check_valuesWhereInput = {
    AND?: Enumerable<Check_valuesWhereInput>
    OR?: Enumerable<Check_valuesWhereInput>
    NOT?: Enumerable<Check_valuesWhereInput>
    check_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    check_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    checks?: XOR<ChecksRelationFilter, ChecksWhereInput> | null
    units?: XOR<UnitsRelationFilter, UnitsWhereInput> | null
  }

  export type Check_valuesOrderByWithRelationInput = {
    check_value_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    checks?: ChecksOrderByWithRelationInput
    units?: UnitsOrderByWithRelationInput
  }

  export type Check_valuesWhereUniqueInput = {
    check_value_id?: string
  }

  export type Check_valuesOrderByWithAggregationInput = {
    check_value_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Check_valuesCountOrderByAggregateInput
    _avg?: Check_valuesAvgOrderByAggregateInput
    _max?: Check_valuesMaxOrderByAggregateInput
    _min?: Check_valuesMinOrderByAggregateInput
    _sum?: Check_valuesSumOrderByAggregateInput
  }

  export type Check_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Check_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Check_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Check_valuesScalarWhereWithAggregatesInput>
    check_value_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    check_id?: UuidNullableWithAggregatesFilter | string | null
    unit_id?: UuidNullableWithAggregatesFilter | string | null
    value_integer?: IntNullableWithAggregatesFilter | number | null
    value_numeric?: FloatNullableWithAggregatesFilter | number | null
    value_text?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type ChecksWhereInput = {
    AND?: Enumerable<ChecksWhereInput>
    OR?: Enumerable<ChecksWhereInput>
    NOT?: Enumerable<ChecksWhereInput>
    check_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    date?: DateTimeNullableFilter | Date | string | null
    data?: JsonNullableFilter
    relevant_for_reports?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    check_taxa?: Check_taxaListRelationFilter
    check_values?: Check_valuesListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    places?: XOR<PlacesRelationFilter, PlacesWhereInput> | null
    files?: FilesListRelationFilter
  }

  export type ChecksOrderByWithRelationInput = {
    check_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    data?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    check_taxa?: Check_taxaOrderByRelationAggregateInput
    check_values?: Check_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    places?: PlacesOrderByWithRelationInput
    files?: FilesOrderByRelationAggregateInput
  }

  export type ChecksWhereUniqueInput = {
    check_id?: string
  }

  export type ChecksOrderByWithAggregationInput = {
    check_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    data?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: ChecksCountOrderByAggregateInput
    _max?: ChecksMaxOrderByAggregateInput
    _min?: ChecksMinOrderByAggregateInput
  }

  export type ChecksScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ChecksScalarWhereWithAggregatesInput>
    OR?: Enumerable<ChecksScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ChecksScalarWhereWithAggregatesInput>
    check_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    place_id?: UuidNullableWithAggregatesFilter | string | null
    date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    data?: JsonNullableWithAggregatesFilter
    relevant_for_reports?: BoolNullableWithAggregatesFilter | boolean | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Field_typesWhereInput = {
    AND?: Enumerable<Field_typesWhereInput>
    OR?: Enumerable<Field_typesWhereInput>
    NOT?: Enumerable<Field_typesWhereInput>
    field_type_id?: UuidFilter | string
    name?: StringNullableFilter | string | null
    sort?: IntNullableFilter | number | null
    comment?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    fields?: FieldsListRelationFilter
    widgets_for_fields?: Widgets_for_fieldsListRelationFilter
  }

  export type Field_typesOrderByWithRelationInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    fields?: FieldsOrderByRelationAggregateInput
    widgets_for_fields?: Widgets_for_fieldsOrderByRelationAggregateInput
  }

  export type Field_typesWhereUniqueInput = {
    field_type_id?: string
  }

  export type Field_typesOrderByWithAggregationInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Field_typesCountOrderByAggregateInput
    _avg?: Field_typesAvgOrderByAggregateInput
    _max?: Field_typesMaxOrderByAggregateInput
    _min?: Field_typesMinOrderByAggregateInput
    _sum?: Field_typesSumOrderByAggregateInput
  }

  export type Field_typesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Field_typesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Field_typesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Field_typesScalarWhereWithAggregatesInput>
    field_type_id?: UuidWithAggregatesFilter | string
    name?: StringNullableWithAggregatesFilter | string | null
    sort?: IntNullableWithAggregatesFilter | number | null
    comment?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type FieldsWhereInput = {
    AND?: Enumerable<FieldsWhereInput>
    OR?: Enumerable<FieldsWhereInput>
    NOT?: Enumerable<FieldsWhereInput>
    field_id?: UuidFilter | string
    project_id?: UuidNullableFilter | string | null
    account_id?: UuidNullableFilter | string | null
    table_name?: StringNullableFilter | string | null
    field_type_id?: UuidNullableFilter | string | null
    widget_type_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    field_label?: StringNullableFilter | string | null
    list_id?: UuidNullableFilter | string | null
    preset?: StringNullableFilter | string | null
    obsolete?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    field_types?: XOR<Field_typesRelationFilter, Field_typesWhereInput> | null
    lists?: XOR<ListsRelationFilter, ListsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
    widget_types?: XOR<Widget_typesRelationFilter, Widget_typesWhereInput> | null
  }

  export type FieldsOrderByWithRelationInput = {
    field_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    table_name?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    name?: SortOrder
    field_label?: SortOrder
    list_id?: SortOrder
    preset?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    field_types?: Field_typesOrderByWithRelationInput
    lists?: ListsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    widget_types?: Widget_typesOrderByWithRelationInput
  }

  export type FieldsWhereUniqueInput = {
    field_id?: string
  }

  export type FieldsOrderByWithAggregationInput = {
    field_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    table_name?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    name?: SortOrder
    field_label?: SortOrder
    list_id?: SortOrder
    preset?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: FieldsCountOrderByAggregateInput
    _max?: FieldsMaxOrderByAggregateInput
    _min?: FieldsMinOrderByAggregateInput
  }

  export type FieldsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<FieldsScalarWhereWithAggregatesInput>
    OR?: Enumerable<FieldsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<FieldsScalarWhereWithAggregatesInput>
    field_id?: UuidWithAggregatesFilter | string
    project_id?: UuidNullableWithAggregatesFilter | string | null
    account_id?: UuidNullableWithAggregatesFilter | string | null
    table_name?: StringNullableWithAggregatesFilter | string | null
    field_type_id?: UuidNullableWithAggregatesFilter | string | null
    widget_type_id?: UuidNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    field_label?: StringNullableWithAggregatesFilter | string | null
    list_id?: UuidNullableWithAggregatesFilter | string | null
    preset?: StringNullableWithAggregatesFilter | string | null
    obsolete?: BoolNullableWithAggregatesFilter | boolean | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type FilesWhereInput = {
    AND?: Enumerable<FilesWhereInput>
    OR?: Enumerable<FilesWhereInput>
    NOT?: Enumerable<FilesWhereInput>
    file_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    action_id?: UuidNullableFilter | string | null
    check_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    mimetype?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    actions?: XOR<ActionsRelationFilter, ActionsWhereInput> | null
    checks?: XOR<ChecksRelationFilter, ChecksWhereInput> | null
    places?: XOR<PlacesRelationFilter, PlacesWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
    subprojects?: XOR<SubprojectsRelationFilter, SubprojectsWhereInput> | null
  }

  export type FilesOrderByWithRelationInput = {
    file_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    place_id?: SortOrder
    action_id?: SortOrder
    check_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    data?: SortOrder
    mimetype?: SortOrder
    url?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    actions?: ActionsOrderByWithRelationInput
    checks?: ChecksOrderByWithRelationInput
    places?: PlacesOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
  }

  export type FilesWhereUniqueInput = {
    file_id?: string
  }

  export type FilesOrderByWithAggregationInput = {
    file_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    place_id?: SortOrder
    action_id?: SortOrder
    check_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    data?: SortOrder
    mimetype?: SortOrder
    url?: SortOrder
    deleted?: SortOrder
    _count?: FilesCountOrderByAggregateInput
    _max?: FilesMaxOrderByAggregateInput
    _min?: FilesMinOrderByAggregateInput
  }

  export type FilesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<FilesScalarWhereWithAggregatesInput>
    OR?: Enumerable<FilesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<FilesScalarWhereWithAggregatesInput>
    file_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    subproject_id?: UuidNullableWithAggregatesFilter | string | null
    place_id?: UuidNullableWithAggregatesFilter | string | null
    action_id?: UuidNullableWithAggregatesFilter | string | null
    check_id?: UuidNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    mimetype?: StringNullableWithAggregatesFilter | string | null
    url?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Goal_report_valuesWhereInput = {
    AND?: Enumerable<Goal_report_valuesWhereInput>
    OR?: Enumerable<Goal_report_valuesWhereInput>
    NOT?: Enumerable<Goal_report_valuesWhereInput>
    goal_report_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    goal_report_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    goal_reports?: XOR<Goal_reportsRelationFilter, Goal_reportsWhereInput> | null
    units?: XOR<UnitsRelationFilter, UnitsWhereInput> | null
  }

  export type Goal_report_valuesOrderByWithRelationInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    goal_reports?: Goal_reportsOrderByWithRelationInput
    units?: UnitsOrderByWithRelationInput
  }

  export type Goal_report_valuesWhereUniqueInput = {
    goal_report_value_id?: string
  }

  export type Goal_report_valuesOrderByWithAggregationInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Goal_report_valuesCountOrderByAggregateInput
    _avg?: Goal_report_valuesAvgOrderByAggregateInput
    _max?: Goal_report_valuesMaxOrderByAggregateInput
    _min?: Goal_report_valuesMinOrderByAggregateInput
    _sum?: Goal_report_valuesSumOrderByAggregateInput
  }

  export type Goal_report_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Goal_report_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Goal_report_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Goal_report_valuesScalarWhereWithAggregatesInput>
    goal_report_value_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    goal_report_id?: UuidNullableWithAggregatesFilter | string | null
    unit_id?: UuidNullableWithAggregatesFilter | string | null
    value_integer?: IntNullableWithAggregatesFilter | number | null
    value_numeric?: FloatNullableWithAggregatesFilter | number | null
    value_text?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Goal_reportsWhereInput = {
    AND?: Enumerable<Goal_reportsWhereInput>
    OR?: Enumerable<Goal_reportsWhereInput>
    NOT?: Enumerable<Goal_reportsWhereInput>
    goal_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    goal_id?: UuidNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    goal_report_values?: Goal_report_valuesListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    goals?: XOR<GoalsRelationFilter, GoalsWhereInput> | null
  }

  export type Goal_reportsOrderByWithRelationInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    goal_report_values?: Goal_report_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    goals?: GoalsOrderByWithRelationInput
  }

  export type Goal_reportsWhereUniqueInput = {
    goal_report_id?: string
  }

  export type Goal_reportsOrderByWithAggregationInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Goal_reportsCountOrderByAggregateInput
    _max?: Goal_reportsMaxOrderByAggregateInput
    _min?: Goal_reportsMinOrderByAggregateInput
  }

  export type Goal_reportsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Goal_reportsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Goal_reportsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Goal_reportsScalarWhereWithAggregatesInput>
    goal_report_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    goal_id?: UuidNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type GoalsWhereInput = {
    AND?: Enumerable<GoalsWhereInput>
    OR?: Enumerable<GoalsWhereInput>
    NOT?: Enumerable<GoalsWhereInput>
    goal_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    name?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    goal_reports?: Goal_reportsListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsRelationFilter, SubprojectsWhereInput> | null
  }

  export type GoalsOrderByWithRelationInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    goal_reports?: Goal_reportsOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
  }

  export type GoalsWhereUniqueInput = {
    goal_id?: string
  }

  export type GoalsOrderByWithAggregationInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: GoalsCountOrderByAggregateInput
    _avg?: GoalsAvgOrderByAggregateInput
    _max?: GoalsMaxOrderByAggregateInput
    _min?: GoalsMinOrderByAggregateInput
    _sum?: GoalsSumOrderByAggregateInput
  }

  export type GoalsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<GoalsScalarWhereWithAggregatesInput>
    OR?: Enumerable<GoalsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<GoalsScalarWhereWithAggregatesInput>
    goal_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    subproject_id?: UuidNullableWithAggregatesFilter | string | null
    year?: IntNullableWithAggregatesFilter | number | null
    name?: StringNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type List_valuesWhereInput = {
    AND?: Enumerable<List_valuesWhereInput>
    OR?: Enumerable<List_valuesWhereInput>
    NOT?: Enumerable<List_valuesWhereInput>
    list_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    list_id?: UuidNullableFilter | string | null
    value?: StringNullableFilter | string | null
    obsolete?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    lists?: XOR<ListsRelationFilter, ListsWhereInput> | null
  }

  export type List_valuesOrderByWithRelationInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    lists?: ListsOrderByWithRelationInput
  }

  export type List_valuesWhereUniqueInput = {
    list_value_id?: string
  }

  export type List_valuesOrderByWithAggregationInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: List_valuesCountOrderByAggregateInput
    _max?: List_valuesMaxOrderByAggregateInput
    _min?: List_valuesMinOrderByAggregateInput
  }

  export type List_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<List_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<List_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<List_valuesScalarWhereWithAggregatesInput>
    list_value_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    list_id?: UuidNullableWithAggregatesFilter | string | null
    value?: StringNullableWithAggregatesFilter | string | null
    obsolete?: BoolNullableWithAggregatesFilter | boolean | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type ListsWhereInput = {
    AND?: Enumerable<ListsWhereInput>
    OR?: Enumerable<ListsWhereInput>
    NOT?: Enumerable<ListsWhereInput>
    list_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    obsolete?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    fields?: FieldsListRelationFilter
    list_values?: List_valuesListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
    units?: UnitsListRelationFilter
  }

  export type ListsOrderByWithRelationInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    data?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    fields?: FieldsOrderByRelationAggregateInput
    list_values?: List_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    units?: UnitsOrderByRelationAggregateInput
  }

  export type ListsWhereUniqueInput = {
    list_id?: string
  }

  export type ListsOrderByWithAggregationInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    data?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: ListsCountOrderByAggregateInput
    _max?: ListsMaxOrderByAggregateInput
    _min?: ListsMinOrderByAggregateInput
  }

  export type ListsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ListsScalarWhereWithAggregatesInput>
    OR?: Enumerable<ListsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ListsScalarWhereWithAggregatesInput>
    list_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    obsolete?: BoolNullableWithAggregatesFilter | boolean | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type MessagesWhereInput = {
    AND?: Enumerable<MessagesWhereInput>
    OR?: Enumerable<MessagesWhereInput>
    NOT?: Enumerable<MessagesWhereInput>
    message_id?: UuidFilter | string
    label?: StringNullableFilter | string | null
    date?: DateTimeNullableFilter | Date | string | null
    message?: StringNullableFilter | string | null
    user_messages?: User_messagesListRelationFilter
  }

  export type MessagesOrderByWithRelationInput = {
    message_id?: SortOrder
    label?: SortOrder
    date?: SortOrder
    message?: SortOrder
    user_messages?: User_messagesOrderByRelationAggregateInput
  }

  export type MessagesWhereUniqueInput = {
    message_id?: string
  }

  export type MessagesOrderByWithAggregationInput = {
    message_id?: SortOrder
    label?: SortOrder
    date?: SortOrder
    message?: SortOrder
    _count?: MessagesCountOrderByAggregateInput
    _max?: MessagesMaxOrderByAggregateInput
    _min?: MessagesMinOrderByAggregateInput
  }

  export type MessagesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<MessagesScalarWhereWithAggregatesInput>
    OR?: Enumerable<MessagesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<MessagesScalarWhereWithAggregatesInput>
    message_id?: UuidWithAggregatesFilter | string
    label?: StringNullableWithAggregatesFilter | string | null
    date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    message?: StringNullableWithAggregatesFilter | string | null
  }

  export type Observation_sourcesWhereInput = {
    AND?: Enumerable<Observation_sourcesWhereInput>
    OR?: Enumerable<Observation_sourcesWhereInput>
    NOT?: Enumerable<Observation_sourcesWhereInput>
    observation_source_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
    observations?: ObservationsListRelationFilter
  }

  export type Observation_sourcesOrderByWithRelationInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    observations?: ObservationsOrderByRelationAggregateInput
  }

  export type Observation_sourcesWhereUniqueInput = {
    observation_source_id?: string
  }

  export type Observation_sourcesOrderByWithAggregationInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Observation_sourcesCountOrderByAggregateInput
    _max?: Observation_sourcesMaxOrderByAggregateInput
    _min?: Observation_sourcesMinOrderByAggregateInput
  }

  export type Observation_sourcesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Observation_sourcesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Observation_sourcesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Observation_sourcesScalarWhereWithAggregatesInput>
    observation_source_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    url?: StringNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type ObservationsWhereInput = {
    AND?: Enumerable<ObservationsWhereInput>
    OR?: Enumerable<ObservationsWhereInput>
    NOT?: Enumerable<ObservationsWhereInput>
    observation_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    observation_source_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    id_in_source?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    observation_data?: JsonNullableFilter
    date?: DateTimeNullableFilter | Date | string | null
    author?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    observation_sources?: XOR<Observation_sourcesRelationFilter, Observation_sourcesWhereInput> | null
    places?: XOR<PlacesRelationFilter, PlacesWhereInput> | null
  }

  export type ObservationsOrderByWithRelationInput = {
    observation_id?: SortOrder
    account_id?: SortOrder
    observation_source_id?: SortOrder
    place_id?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    observation_data?: SortOrder
    date?: SortOrder
    author?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    observation_sources?: Observation_sourcesOrderByWithRelationInput
    places?: PlacesOrderByWithRelationInput
  }

  export type ObservationsWhereUniqueInput = {
    observation_id?: string
  }

  export type ObservationsOrderByWithAggregationInput = {
    observation_id?: SortOrder
    account_id?: SortOrder
    observation_source_id?: SortOrder
    place_id?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    observation_data?: SortOrder
    date?: SortOrder
    author?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: ObservationsCountOrderByAggregateInput
    _max?: ObservationsMaxOrderByAggregateInput
    _min?: ObservationsMinOrderByAggregateInput
  }

  export type ObservationsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ObservationsScalarWhereWithAggregatesInput>
    OR?: Enumerable<ObservationsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ObservationsScalarWhereWithAggregatesInput>
    observation_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    observation_source_id?: UuidNullableWithAggregatesFilter | string | null
    place_id?: UuidNullableWithAggregatesFilter | string | null
    id_in_source?: StringNullableWithAggregatesFilter | string | null
    url?: StringNullableWithAggregatesFilter | string | null
    observation_data?: JsonNullableWithAggregatesFilter
    date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    author?: StringNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type PersonsWhereInput = {
    AND?: Enumerable<PersonsWhereInput>
    OR?: Enumerable<PersonsWhereInput>
    NOT?: Enumerable<PersonsWhereInput>
    person_id?: UuidFilter | string
    project_id?: UuidNullableFilter | string | null
    account_id?: UuidNullableFilter | string | null
    email?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
  }

  export type PersonsOrderByWithRelationInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type PersonsWhereUniqueInput = {
    person_id?: string
  }

  export type PersonsOrderByWithAggregationInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: PersonsCountOrderByAggregateInput
    _max?: PersonsMaxOrderByAggregateInput
    _min?: PersonsMinOrderByAggregateInput
  }

  export type PersonsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<PersonsScalarWhereWithAggregatesInput>
    OR?: Enumerable<PersonsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<PersonsScalarWhereWithAggregatesInput>
    person_id?: UuidWithAggregatesFilter | string
    project_id?: UuidNullableWithAggregatesFilter | string | null
    account_id?: UuidNullableWithAggregatesFilter | string | null
    email?: StringNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Place_levelsWhereInput = {
    AND?: Enumerable<Place_levelsWhereInput>
    OR?: Enumerable<Place_levelsWhereInput>
    NOT?: Enumerable<Place_levelsWhereInput>
    place_level_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    level?: IntNullableFilter | number | null
    name_singular?: StringNullableFilter | string | null
    name_plural?: StringNullableFilter | string | null
    name_short?: StringNullableFilter | string | null
    reports?: BoolNullableFilter | boolean | null
    report_values?: BoolNullableFilter | boolean | null
    actions?: BoolNullableFilter | boolean | null
    action_values?: BoolNullableFilter | boolean | null
    action_reports?: BoolNullableFilter | boolean | null
    checks?: BoolNullableFilter | boolean | null
    check_values?: BoolNullableFilter | boolean | null
    check_taxa?: BoolNullableFilter | boolean | null
    observation_references?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
  }

  export type Place_levelsOrderByWithRelationInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observation_references?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type Place_levelsWhereUniqueInput = {
    place_level_id?: string
  }

  export type Place_levelsOrderByWithAggregationInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observation_references?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Place_levelsCountOrderByAggregateInput
    _avg?: Place_levelsAvgOrderByAggregateInput
    _max?: Place_levelsMaxOrderByAggregateInput
    _min?: Place_levelsMinOrderByAggregateInput
    _sum?: Place_levelsSumOrderByAggregateInput
  }

  export type Place_levelsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Place_levelsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Place_levelsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Place_levelsScalarWhereWithAggregatesInput>
    place_level_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    level?: IntNullableWithAggregatesFilter | number | null
    name_singular?: StringNullableWithAggregatesFilter | string | null
    name_plural?: StringNullableWithAggregatesFilter | string | null
    name_short?: StringNullableWithAggregatesFilter | string | null
    reports?: BoolNullableWithAggregatesFilter | boolean | null
    report_values?: BoolNullableWithAggregatesFilter | boolean | null
    actions?: BoolNullableWithAggregatesFilter | boolean | null
    action_values?: BoolNullableWithAggregatesFilter | boolean | null
    action_reports?: BoolNullableWithAggregatesFilter | boolean | null
    checks?: BoolNullableWithAggregatesFilter | boolean | null
    check_values?: BoolNullableWithAggregatesFilter | boolean | null
    check_taxa?: BoolNullableWithAggregatesFilter | boolean | null
    observation_references?: BoolNullableWithAggregatesFilter | boolean | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Place_report_valuesWhereInput = {
    AND?: Enumerable<Place_report_valuesWhereInput>
    OR?: Enumerable<Place_report_valuesWhereInput>
    NOT?: Enumerable<Place_report_valuesWhereInput>
    place_report_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_report_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    place_reports?: XOR<Place_reportsRelationFilter, Place_reportsWhereInput> | null
    units?: XOR<UnitsRelationFilter, UnitsWhereInput> | null
  }

  export type Place_report_valuesOrderByWithRelationInput = {
    place_report_value_id?: SortOrder
    account_id?: SortOrder
    place_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    place_reports?: Place_reportsOrderByWithRelationInput
    units?: UnitsOrderByWithRelationInput
  }

  export type Place_report_valuesWhereUniqueInput = {
    place_report_value_id?: string
  }

  export type Place_report_valuesOrderByWithAggregationInput = {
    place_report_value_id?: SortOrder
    account_id?: SortOrder
    place_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Place_report_valuesCountOrderByAggregateInput
    _avg?: Place_report_valuesAvgOrderByAggregateInput
    _max?: Place_report_valuesMaxOrderByAggregateInput
    _min?: Place_report_valuesMinOrderByAggregateInput
    _sum?: Place_report_valuesSumOrderByAggregateInput
  }

  export type Place_report_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Place_report_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Place_report_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Place_report_valuesScalarWhereWithAggregatesInput>
    place_report_value_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    place_report_id?: UuidNullableWithAggregatesFilter | string | null
    unit_id?: UuidNullableWithAggregatesFilter | string | null
    value_integer?: IntNullableWithAggregatesFilter | number | null
    value_numeric?: FloatNullableWithAggregatesFilter | number | null
    value_text?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Place_reportsWhereInput = {
    AND?: Enumerable<Place_reportsWhereInput>
    OR?: Enumerable<Place_reportsWhereInput>
    NOT?: Enumerable<Place_reportsWhereInput>
    place_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    place_report_values?: Place_report_valuesListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    places?: XOR<PlacesRelationFilter, PlacesWhereInput> | null
  }

  export type Place_reportsOrderByWithRelationInput = {
    place_report_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    place_report_values?: Place_report_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    places?: PlacesOrderByWithRelationInput
  }

  export type Place_reportsWhereUniqueInput = {
    place_report_id?: string
  }

  export type Place_reportsOrderByWithAggregationInput = {
    place_report_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Place_reportsCountOrderByAggregateInput
    _avg?: Place_reportsAvgOrderByAggregateInput
    _max?: Place_reportsMaxOrderByAggregateInput
    _min?: Place_reportsMinOrderByAggregateInput
    _sum?: Place_reportsSumOrderByAggregateInput
  }

  export type Place_reportsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Place_reportsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Place_reportsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Place_reportsScalarWhereWithAggregatesInput>
    place_report_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    place_id?: UuidNullableWithAggregatesFilter | string | null
    year?: IntNullableWithAggregatesFilter | number | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Place_usersWhereInput = {
    AND?: Enumerable<Place_usersWhereInput>
    OR?: Enumerable<Place_usersWhereInput>
    NOT?: Enumerable<Place_usersWhereInput>
    place_user_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    user_id?: UuidNullableFilter | string | null
    role?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    places?: XOR<PlacesRelationFilter, PlacesWhereInput> | null
    users?: XOR<UsersRelationFilter, UsersWhereInput> | null
  }

  export type Place_usersOrderByWithRelationInput = {
    place_user_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    places?: PlacesOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type Place_usersWhereUniqueInput = {
    place_user_id?: string
  }

  export type Place_usersOrderByWithAggregationInput = {
    place_user_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Place_usersCountOrderByAggregateInput
    _max?: Place_usersMaxOrderByAggregateInput
    _min?: Place_usersMinOrderByAggregateInput
  }

  export type Place_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Place_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<Place_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Place_usersScalarWhereWithAggregatesInput>
    place_user_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    place_id?: UuidNullableWithAggregatesFilter | string | null
    user_id?: UuidNullableWithAggregatesFilter | string | null
    role?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type PlacesWhereInput = {
    AND?: Enumerable<PlacesWhereInput>
    OR?: Enumerable<PlacesWhereInput>
    NOT?: Enumerable<PlacesWhereInput>
    place_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    parent_id?: UuidNullableFilter | string | null
    level?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    files_active_places?: BoolNullableFilter | boolean | null
    deleted?: BoolNullableFilter | boolean | null
    actions?: ActionsListRelationFilter
    checks?: ChecksListRelationFilter
    files?: FilesListRelationFilter
    observations?: ObservationsListRelationFilter
    place_reports?: Place_reportsListRelationFilter
    place_users?: Place_usersListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    places?: XOR<PlacesRelationFilter, PlacesWhereInput> | null
    other_places?: PlacesListRelationFilter
    subprojects?: XOR<SubprojectsRelationFilter, SubprojectsWhereInput> | null
  }

  export type PlacesOrderByWithRelationInput = {
    place_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    parent_id?: SortOrder
    level?: SortOrder
    data?: SortOrder
    label?: SortOrder
    files_active_places?: SortOrder
    deleted?: SortOrder
    actions?: ActionsOrderByRelationAggregateInput
    checks?: ChecksOrderByRelationAggregateInput
    files?: FilesOrderByRelationAggregateInput
    observations?: ObservationsOrderByRelationAggregateInput
    place_reports?: Place_reportsOrderByRelationAggregateInput
    place_users?: Place_usersOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    places?: PlacesOrderByWithRelationInput
    other_places?: PlacesOrderByRelationAggregateInput
    subprojects?: SubprojectsOrderByWithRelationInput
  }

  export type PlacesWhereUniqueInput = {
    place_id?: string
  }

  export type PlacesOrderByWithAggregationInput = {
    place_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    parent_id?: SortOrder
    level?: SortOrder
    data?: SortOrder
    label?: SortOrder
    files_active_places?: SortOrder
    deleted?: SortOrder
    _count?: PlacesCountOrderByAggregateInput
    _avg?: PlacesAvgOrderByAggregateInput
    _max?: PlacesMaxOrderByAggregateInput
    _min?: PlacesMinOrderByAggregateInput
    _sum?: PlacesSumOrderByAggregateInput
  }

  export type PlacesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<PlacesScalarWhereWithAggregatesInput>
    OR?: Enumerable<PlacesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<PlacesScalarWhereWithAggregatesInput>
    place_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    subproject_id?: UuidNullableWithAggregatesFilter | string | null
    parent_id?: UuidNullableWithAggregatesFilter | string | null
    level?: IntNullableWithAggregatesFilter | number | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    files_active_places?: BoolNullableWithAggregatesFilter | boolean | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Project_reportsWhereInput = {
    AND?: Enumerable<Project_reportsWhereInput>
    OR?: Enumerable<Project_reportsWhereInput>
    NOT?: Enumerable<Project_reportsWhereInput>
    project_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
  }

  export type Project_reportsOrderByWithRelationInput = {
    project_report_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type Project_reportsWhereUniqueInput = {
    project_report_id?: string
  }

  export type Project_reportsOrderByWithAggregationInput = {
    project_report_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Project_reportsCountOrderByAggregateInput
    _avg?: Project_reportsAvgOrderByAggregateInput
    _max?: Project_reportsMaxOrderByAggregateInput
    _min?: Project_reportsMinOrderByAggregateInput
    _sum?: Project_reportsSumOrderByAggregateInput
  }

  export type Project_reportsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Project_reportsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Project_reportsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Project_reportsScalarWhereWithAggregatesInput>
    project_report_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    year?: IntNullableWithAggregatesFilter | number | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Project_usersWhereInput = {
    AND?: Enumerable<Project_usersWhereInput>
    OR?: Enumerable<Project_usersWhereInput>
    NOT?: Enumerable<Project_usersWhereInput>
    project_user_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    user_id?: UuidNullableFilter | string | null
    role?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
    users?: XOR<UsersRelationFilter, UsersWhereInput> | null
  }

  export type Project_usersOrderByWithRelationInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type Project_usersWhereUniqueInput = {
    project_user_id?: string
  }

  export type Project_usersOrderByWithAggregationInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Project_usersCountOrderByAggregateInput
    _max?: Project_usersMaxOrderByAggregateInput
    _min?: Project_usersMinOrderByAggregateInput
  }

  export type Project_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Project_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<Project_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Project_usersScalarWhereWithAggregatesInput>
    project_user_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    user_id?: UuidNullableWithAggregatesFilter | string | null
    role?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type ProjectsWhereInput = {
    AND?: Enumerable<ProjectsWhereInput>
    OR?: Enumerable<ProjectsWhereInput>
    NOT?: Enumerable<ProjectsWhereInput>
    project_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    subproject_name_singular?: StringNullableFilter | string | null
    subproject_name_plural?: StringNullableFilter | string | null
    subproject_order_by?: StringNullableFilter | string | null
    places_label_by?: StringNullableFilter | string | null
    places_order_by?: JsonNullableFilter
    persons_label_by?: StringNullableFilter | string | null
    persons_order_by?: StringNullableFilter | string | null
    goal_reports_label_by?: StringNullableFilter | string | null
    goal_reports_order_by?: StringNullableFilter | string | null
    values_on_multiple_levels?: StringNullableFilter | string | null
    multiple_action_values_on_same_level?: StringNullableFilter | string | null
    multiple_check_values_on_same_level?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    files_active_projects?: BoolNullableFilter | boolean | null
    files_active_projects_reports?: BoolNullableFilter | boolean | null
    files_active_subprojects?: BoolNullableFilter | boolean | null
    files_active_subproject_reports?: BoolNullableFilter | boolean | null
    files_active_places?: BoolNullableFilter | boolean | null
    files_active_actions?: BoolNullableFilter | boolean | null
    files_active_checks?: BoolNullableFilter | boolean | null
    files_active_check_reports?: BoolNullableFilter | boolean | null
    deleted?: BoolNullableFilter | boolean | null
    fields?: FieldsListRelationFilter
    files?: FilesListRelationFilter
    lists?: ListsListRelationFilter
    observation_sources?: Observation_sourcesListRelationFilter
    persons?: PersonsListRelationFilter
    place_levels?: Place_levelsListRelationFilter
    project_reports?: Project_reportsListRelationFilter
    project_users?: Project_usersListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    subprojects?: SubprojectsListRelationFilter
    taxonomies?: TaxonomiesListRelationFilter
    units?: UnitsListRelationFilter
  }

  export type ProjectsOrderByWithRelationInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    places_order_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    data?: SortOrder
    files_active_projects?: SortOrder
    files_active_projects_reports?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_subproject_reports?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    files_active_check_reports?: SortOrder
    deleted?: SortOrder
    fields?: FieldsOrderByRelationAggregateInput
    files?: FilesOrderByRelationAggregateInput
    lists?: ListsOrderByRelationAggregateInput
    observation_sources?: Observation_sourcesOrderByRelationAggregateInput
    persons?: PersonsOrderByRelationAggregateInput
    place_levels?: Place_levelsOrderByRelationAggregateInput
    project_reports?: Project_reportsOrderByRelationAggregateInput
    project_users?: Project_usersOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByRelationAggregateInput
    taxonomies?: TaxonomiesOrderByRelationAggregateInput
    units?: UnitsOrderByRelationAggregateInput
  }

  export type ProjectsWhereUniqueInput = {
    project_id?: string
  }

  export type ProjectsOrderByWithAggregationInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    places_order_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    data?: SortOrder
    files_active_projects?: SortOrder
    files_active_projects_reports?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_subproject_reports?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    files_active_check_reports?: SortOrder
    deleted?: SortOrder
    _count?: ProjectsCountOrderByAggregateInput
    _max?: ProjectsMaxOrderByAggregateInput
    _min?: ProjectsMinOrderByAggregateInput
  }

  export type ProjectsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProjectsScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProjectsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProjectsScalarWhereWithAggregatesInput>
    project_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    subproject_name_singular?: StringNullableWithAggregatesFilter | string | null
    subproject_name_plural?: StringNullableWithAggregatesFilter | string | null
    subproject_order_by?: StringNullableWithAggregatesFilter | string | null
    places_label_by?: StringNullableWithAggregatesFilter | string | null
    places_order_by?: JsonNullableWithAggregatesFilter
    persons_label_by?: StringNullableWithAggregatesFilter | string | null
    persons_order_by?: StringNullableWithAggregatesFilter | string | null
    goal_reports_label_by?: StringNullableWithAggregatesFilter | string | null
    goal_reports_order_by?: StringNullableWithAggregatesFilter | string | null
    values_on_multiple_levels?: StringNullableWithAggregatesFilter | string | null
    multiple_action_values_on_same_level?: StringNullableWithAggregatesFilter | string | null
    multiple_check_values_on_same_level?: StringNullableWithAggregatesFilter | string | null
    data?: JsonNullableWithAggregatesFilter
    files_active_projects?: BoolNullableWithAggregatesFilter | boolean | null
    files_active_projects_reports?: BoolNullableWithAggregatesFilter | boolean | null
    files_active_subprojects?: BoolNullableWithAggregatesFilter | boolean | null
    files_active_subproject_reports?: BoolNullableWithAggregatesFilter | boolean | null
    files_active_places?: BoolNullableWithAggregatesFilter | boolean | null
    files_active_actions?: BoolNullableWithAggregatesFilter | boolean | null
    files_active_checks?: BoolNullableWithAggregatesFilter | boolean | null
    files_active_check_reports?: BoolNullableWithAggregatesFilter | boolean | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Subproject_reportsWhereInput = {
    AND?: Enumerable<Subproject_reportsWhereInput>
    OR?: Enumerable<Subproject_reportsWhereInput>
    NOT?: Enumerable<Subproject_reportsWhereInput>
    subproject_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsRelationFilter, SubprojectsWhereInput> | null
  }

  export type Subproject_reportsOrderByWithRelationInput = {
    subproject_report_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
  }

  export type Subproject_reportsWhereUniqueInput = {
    subproject_report_id?: string
  }

  export type Subproject_reportsOrderByWithAggregationInput = {
    subproject_report_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Subproject_reportsCountOrderByAggregateInput
    _avg?: Subproject_reportsAvgOrderByAggregateInput
    _max?: Subproject_reportsMaxOrderByAggregateInput
    _min?: Subproject_reportsMinOrderByAggregateInput
    _sum?: Subproject_reportsSumOrderByAggregateInput
  }

  export type Subproject_reportsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Subproject_reportsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Subproject_reportsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Subproject_reportsScalarWhereWithAggregatesInput>
    subproject_report_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    subproject_id?: UuidNullableWithAggregatesFilter | string | null
    year?: IntNullableWithAggregatesFilter | number | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Subproject_taxaWhereInput = {
    AND?: Enumerable<Subproject_taxaWhereInput>
    OR?: Enumerable<Subproject_taxaWhereInput>
    NOT?: Enumerable<Subproject_taxaWhereInput>
    subproject_taxon_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    taxon_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsRelationFilter, SubprojectsWhereInput> | null
    taxa?: XOR<TaxaRelationFilter, TaxaWhereInput> | null
  }

  export type Subproject_taxaOrderByWithRelationInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
    taxa?: TaxaOrderByWithRelationInput
  }

  export type Subproject_taxaWhereUniqueInput = {
    subproject_taxon_id?: string
  }

  export type Subproject_taxaOrderByWithAggregationInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Subproject_taxaCountOrderByAggregateInput
    _max?: Subproject_taxaMaxOrderByAggregateInput
    _min?: Subproject_taxaMinOrderByAggregateInput
  }

  export type Subproject_taxaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Subproject_taxaScalarWhereWithAggregatesInput>
    OR?: Enumerable<Subproject_taxaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Subproject_taxaScalarWhereWithAggregatesInput>
    subproject_taxon_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    subproject_id?: UuidNullableWithAggregatesFilter | string | null
    taxon_id?: UuidNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Subproject_usersWhereInput = {
    AND?: Enumerable<Subproject_usersWhereInput>
    OR?: Enumerable<Subproject_usersWhereInput>
    NOT?: Enumerable<Subproject_usersWhereInput>
    subproject_user_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    user_id?: UuidNullableFilter | string | null
    role?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsRelationFilter, SubprojectsWhereInput> | null
    users?: XOR<UsersRelationFilter, UsersWhereInput> | null
  }

  export type Subproject_usersOrderByWithRelationInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type Subproject_usersWhereUniqueInput = {
    subproject_user_id?: string
  }

  export type Subproject_usersOrderByWithAggregationInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Subproject_usersCountOrderByAggregateInput
    _max?: Subproject_usersMaxOrderByAggregateInput
    _min?: Subproject_usersMinOrderByAggregateInput
  }

  export type Subproject_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Subproject_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<Subproject_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Subproject_usersScalarWhereWithAggregatesInput>
    subproject_user_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    subproject_id?: UuidNullableWithAggregatesFilter | string | null
    user_id?: UuidNullableWithAggregatesFilter | string | null
    role?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type SubprojectsWhereInput = {
    AND?: Enumerable<SubprojectsWhereInput>
    OR?: Enumerable<SubprojectsWhereInput>
    NOT?: Enumerable<SubprojectsWhereInput>
    subproject_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    since_year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    deleted?: BoolNullableFilter | boolean | null
    files?: FilesListRelationFilter
    goals?: GoalsListRelationFilter
    places?: PlacesListRelationFilter
    subproject_reports?: Subproject_reportsListRelationFilter
    subproject_taxa?: Subproject_taxaListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
  }

  export type SubprojectsOrderByWithRelationInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    since_year?: SortOrder
    data?: SortOrder
    deleted?: SortOrder
    files?: FilesOrderByRelationAggregateInput
    goals?: GoalsOrderByRelationAggregateInput
    places?: PlacesOrderByRelationAggregateInput
    subproject_reports?: Subproject_reportsOrderByRelationAggregateInput
    subproject_taxa?: Subproject_taxaOrderByRelationAggregateInput
    subproject_users?: Subproject_usersOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type SubprojectsWhereUniqueInput = {
    subproject_id?: string
  }

  export type SubprojectsOrderByWithAggregationInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    since_year?: SortOrder
    data?: SortOrder
    deleted?: SortOrder
    _count?: SubprojectsCountOrderByAggregateInput
    _avg?: SubprojectsAvgOrderByAggregateInput
    _max?: SubprojectsMaxOrderByAggregateInput
    _min?: SubprojectsMinOrderByAggregateInput
    _sum?: SubprojectsSumOrderByAggregateInput
  }

  export type SubprojectsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<SubprojectsScalarWhereWithAggregatesInput>
    OR?: Enumerable<SubprojectsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<SubprojectsScalarWhereWithAggregatesInput>
    subproject_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    since_year?: IntNullableWithAggregatesFilter | number | null
    data?: JsonNullableWithAggregatesFilter
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type TaxaWhereInput = {
    AND?: Enumerable<TaxaWhereInput>
    OR?: Enumerable<TaxaWhereInput>
    NOT?: Enumerable<TaxaWhereInput>
    taxon_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    taxonomy_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    id_in_source?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    check_taxa?: Check_taxaListRelationFilter
    subproject_taxa?: Subproject_taxaListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    taxonomies?: XOR<TaxonomiesRelationFilter, TaxonomiesWhereInput> | null
  }

  export type TaxaOrderByWithRelationInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    check_taxa?: Check_taxaOrderByRelationAggregateInput
    subproject_taxa?: Subproject_taxaOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    taxonomies?: TaxonomiesOrderByWithRelationInput
  }

  export type TaxaWhereUniqueInput = {
    taxon_id?: string
  }

  export type TaxaOrderByWithAggregationInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: TaxaCountOrderByAggregateInput
    _max?: TaxaMaxOrderByAggregateInput
    _min?: TaxaMinOrderByAggregateInput
  }

  export type TaxaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaxaScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaxaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaxaScalarWhereWithAggregatesInput>
    taxon_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    taxonomy_id?: UuidNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    id_in_source?: StringNullableWithAggregatesFilter | string | null
    url?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type TaxonomiesWhereInput = {
    AND?: Enumerable<TaxonomiesWhereInput>
    OR?: Enumerable<TaxonomiesWhereInput>
    NOT?: Enumerable<TaxonomiesWhereInput>
    taxonomy_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    type?: StringNullableFilter | string | null
    name?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    obsolete?: BoolNullableFilter | boolean | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    taxa?: TaxaListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
  }

  export type TaxonomiesOrderByWithRelationInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    taxa?: TaxaOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type TaxonomiesWhereUniqueInput = {
    taxonomy_id?: string
  }

  export type TaxonomiesOrderByWithAggregationInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: TaxonomiesCountOrderByAggregateInput
    _max?: TaxonomiesMaxOrderByAggregateInput
    _min?: TaxonomiesMinOrderByAggregateInput
  }

  export type TaxonomiesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaxonomiesScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaxonomiesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaxonomiesScalarWhereWithAggregatesInput>
    taxonomy_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    url?: StringNullableWithAggregatesFilter | string | null
    obsolete?: BoolNullableWithAggregatesFilter | boolean | null
    data?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Ui_optionsWhereInput = {
    AND?: Enumerable<Ui_optionsWhereInput>
    OR?: Enumerable<Ui_optionsWhereInput>
    NOT?: Enumerable<Ui_optionsWhereInput>
    user_id?: UuidFilter | string
    designing?: BoolNullableFilter | boolean | null
    breadcrumbs_overflowing?: BoolNullableFilter | boolean | null
    navs_overflowing?: BoolNullableFilter | boolean | null
    tabs?: JsonNullableFilter
    label?: StringNullableFilter | string | null
  }

  export type Ui_optionsOrderByWithRelationInput = {
    user_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    tabs?: SortOrder
    label?: SortOrder
  }

  export type Ui_optionsWhereUniqueInput = {
    user_id?: string
  }

  export type Ui_optionsOrderByWithAggregationInput = {
    user_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    tabs?: SortOrder
    label?: SortOrder
    _count?: Ui_optionsCountOrderByAggregateInput
    _max?: Ui_optionsMaxOrderByAggregateInput
    _min?: Ui_optionsMinOrderByAggregateInput
  }

  export type Ui_optionsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Ui_optionsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Ui_optionsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Ui_optionsScalarWhereWithAggregatesInput>
    user_id?: UuidWithAggregatesFilter | string
    designing?: BoolNullableWithAggregatesFilter | boolean | null
    breadcrumbs_overflowing?: BoolNullableWithAggregatesFilter | boolean | null
    navs_overflowing?: BoolNullableWithAggregatesFilter | boolean | null
    tabs?: JsonNullableWithAggregatesFilter
    label?: StringNullableWithAggregatesFilter | string | null
  }

  export type UnitsWhereInput = {
    AND?: Enumerable<UnitsWhereInput>
    OR?: Enumerable<UnitsWhereInput>
    NOT?: Enumerable<UnitsWhereInput>
    unit_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    use_for_action_values?: BoolNullableFilter | boolean | null
    use_for_action_report_values?: BoolNullableFilter | boolean | null
    use_for_check_values?: BoolNullableFilter | boolean | null
    use_for_place_report_values?: BoolNullableFilter | boolean | null
    use_for_goal_report_values?: BoolNullableFilter | boolean | null
    use_for_subproject_taxa?: BoolNullableFilter | boolean | null
    use_for_check_taxa?: BoolNullableFilter | boolean | null
    name?: StringNullableFilter | string | null
    summable?: BoolNullableFilter | boolean | null
    sort?: IntNullableFilter | number | null
    type?: StringNullableFilter | string | null
    list_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    action_report_values?: Action_report_valuesListRelationFilter
    action_values?: Action_valuesListRelationFilter
    check_taxa?: Check_taxaListRelationFilter
    check_values?: Check_valuesListRelationFilter
    goal_report_values?: Goal_report_valuesListRelationFilter
    place_report_values?: Place_report_valuesListRelationFilter
    accounts?: XOR<AccountsRelationFilter, AccountsWhereInput> | null
    lists?: XOR<ListsRelationFilter, ListsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput> | null
  }

  export type UnitsOrderByWithRelationInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    action_report_values?: Action_report_valuesOrderByRelationAggregateInput
    action_values?: Action_valuesOrderByRelationAggregateInput
    check_taxa?: Check_taxaOrderByRelationAggregateInput
    check_values?: Check_valuesOrderByRelationAggregateInput
    goal_report_values?: Goal_report_valuesOrderByRelationAggregateInput
    place_report_values?: Place_report_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    lists?: ListsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type UnitsWhereUniqueInput = {
    unit_id?: string
  }

  export type UnitsOrderByWithAggregationInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: UnitsCountOrderByAggregateInput
    _avg?: UnitsAvgOrderByAggregateInput
    _max?: UnitsMaxOrderByAggregateInput
    _min?: UnitsMinOrderByAggregateInput
    _sum?: UnitsSumOrderByAggregateInput
  }

  export type UnitsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UnitsScalarWhereWithAggregatesInput>
    OR?: Enumerable<UnitsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UnitsScalarWhereWithAggregatesInput>
    unit_id?: UuidWithAggregatesFilter | string
    account_id?: UuidNullableWithAggregatesFilter | string | null
    project_id?: UuidNullableWithAggregatesFilter | string | null
    use_for_action_values?: BoolNullableWithAggregatesFilter | boolean | null
    use_for_action_report_values?: BoolNullableWithAggregatesFilter | boolean | null
    use_for_check_values?: BoolNullableWithAggregatesFilter | boolean | null
    use_for_place_report_values?: BoolNullableWithAggregatesFilter | boolean | null
    use_for_goal_report_values?: BoolNullableWithAggregatesFilter | boolean | null
    use_for_subproject_taxa?: BoolNullableWithAggregatesFilter | boolean | null
    use_for_check_taxa?: BoolNullableWithAggregatesFilter | boolean | null
    name?: StringNullableWithAggregatesFilter | string | null
    summable?: BoolNullableWithAggregatesFilter | boolean | null
    sort?: IntNullableWithAggregatesFilter | number | null
    type?: StringNullableWithAggregatesFilter | string | null
    list_id?: UuidNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type User_messagesWhereInput = {
    AND?: Enumerable<User_messagesWhereInput>
    OR?: Enumerable<User_messagesWhereInput>
    NOT?: Enumerable<User_messagesWhereInput>
    user_message_id?: UuidFilter | string
    user_id?: UuidNullableFilter | string | null
    message_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    read?: BoolNullableFilter | boolean | null
    messages?: XOR<MessagesRelationFilter, MessagesWhereInput> | null
    users?: XOR<UsersRelationFilter, UsersWhereInput> | null
  }

  export type User_messagesOrderByWithRelationInput = {
    user_message_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label?: SortOrder
    read?: SortOrder
    messages?: MessagesOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type User_messagesWhereUniqueInput = {
    user_message_id?: string
  }

  export type User_messagesOrderByWithAggregationInput = {
    user_message_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label?: SortOrder
    read?: SortOrder
    _count?: User_messagesCountOrderByAggregateInput
    _max?: User_messagesMaxOrderByAggregateInput
    _min?: User_messagesMinOrderByAggregateInput
  }

  export type User_messagesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<User_messagesScalarWhereWithAggregatesInput>
    OR?: Enumerable<User_messagesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<User_messagesScalarWhereWithAggregatesInput>
    user_message_id?: UuidWithAggregatesFilter | string
    user_id?: UuidNullableWithAggregatesFilter | string | null
    message_id?: UuidNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    read?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type UsersWhereInput = {
    AND?: Enumerable<UsersWhereInput>
    OR?: Enumerable<UsersWhereInput>
    NOT?: Enumerable<UsersWhereInput>
    user_id?: UuidFilter | string
    email?: StringNullableFilter | string | null
    auth_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    accounts?: AccountsListRelationFilter
    place_users?: Place_usersListRelationFilter
    project_users?: Project_usersListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    user_messages?: User_messagesListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    accounts?: AccountsOrderByRelationAggregateInput
    place_users?: Place_usersOrderByRelationAggregateInput
    project_users?: Project_usersOrderByRelationAggregateInput
    subproject_users?: Subproject_usersOrderByRelationAggregateInput
    user_messages?: User_messagesOrderByRelationAggregateInput
  }

  export type UsersWhereUniqueInput = {
    user_id?: string
  }

  export type UsersOrderByWithAggregationInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: UsersCountOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UsersScalarWhereWithAggregatesInput>
    OR?: Enumerable<UsersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UsersScalarWhereWithAggregatesInput>
    user_id?: UuidWithAggregatesFilter | string
    email?: StringNullableWithAggregatesFilter | string | null
    auth_id?: UuidNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Widget_typesWhereInput = {
    AND?: Enumerable<Widget_typesWhereInput>
    OR?: Enumerable<Widget_typesWhereInput>
    NOT?: Enumerable<Widget_typesWhereInput>
    widget_type_id?: UuidFilter | string
    name?: StringNullableFilter | string | null
    needs_list?: BoolNullableFilter | boolean | null
    sort?: IntNullableFilter | number | null
    comment?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    fields?: FieldsListRelationFilter
    widgets_for_fields?: Widgets_for_fieldsListRelationFilter
  }

  export type Widget_typesOrderByWithRelationInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    fields?: FieldsOrderByRelationAggregateInput
    widgets_for_fields?: Widgets_for_fieldsOrderByRelationAggregateInput
  }

  export type Widget_typesWhereUniqueInput = {
    widget_type_id?: string
  }

  export type Widget_typesOrderByWithAggregationInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Widget_typesCountOrderByAggregateInput
    _avg?: Widget_typesAvgOrderByAggregateInput
    _max?: Widget_typesMaxOrderByAggregateInput
    _min?: Widget_typesMinOrderByAggregateInput
    _sum?: Widget_typesSumOrderByAggregateInput
  }

  export type Widget_typesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Widget_typesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Widget_typesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Widget_typesScalarWhereWithAggregatesInput>
    widget_type_id?: UuidWithAggregatesFilter | string
    name?: StringNullableWithAggregatesFilter | string | null
    needs_list?: BoolNullableWithAggregatesFilter | boolean | null
    sort?: IntNullableWithAggregatesFilter | number | null
    comment?: StringNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type Widgets_for_fieldsWhereInput = {
    AND?: Enumerable<Widgets_for_fieldsWhereInput>
    OR?: Enumerable<Widgets_for_fieldsWhereInput>
    NOT?: Enumerable<Widgets_for_fieldsWhereInput>
    widget_for_field_id?: UuidFilter | string
    field_type_id?: UuidNullableFilter | string | null
    widget_type_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
    field_types?: XOR<Field_typesRelationFilter, Field_typesWhereInput> | null
    widget_types?: XOR<Widget_typesRelationFilter, Widget_typesWhereInput> | null
  }

  export type Widgets_for_fieldsOrderByWithRelationInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    field_types?: Field_typesOrderByWithRelationInput
    widget_types?: Widget_typesOrderByWithRelationInput
  }

  export type Widgets_for_fieldsWhereUniqueInput = {
    widget_for_field_id?: string
  }

  export type Widgets_for_fieldsOrderByWithAggregationInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
    _count?: Widgets_for_fieldsCountOrderByAggregateInput
    _max?: Widgets_for_fieldsMaxOrderByAggregateInput
    _min?: Widgets_for_fieldsMinOrderByAggregateInput
  }

  export type Widgets_for_fieldsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Widgets_for_fieldsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Widgets_for_fieldsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Widgets_for_fieldsScalarWhereWithAggregatesInput>
    widget_for_field_id?: UuidWithAggregatesFilter | string
    field_type_id?: UuidNullableWithAggregatesFilter | string | null
    widget_type_id?: UuidNullableWithAggregatesFilter | string | null
    label?: StringNullableWithAggregatesFilter | string | null
    deleted?: BoolNullableWithAggregatesFilter | boolean | null
  }

  export type AccountsCreateInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsCreateManyInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
  }

  export type AccountsUpdateManyMutationInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountsUncheckedUpdateManyInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Action_report_valuesCreateInput = {
    action_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutAction_report_valuesInput
    action_reports?: Action_reportsCreateNestedOneWithoutAction_report_valuesInput
    units?: UnitsCreateNestedOneWithoutAction_report_valuesInput
  }

  export type Action_report_valuesUncheckedCreateInput = {
    action_report_value_id: string
    account_id?: string | null
    action_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesUpdateInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutAction_report_valuesNestedInput
    action_reports?: Action_reportsUpdateOneWithoutAction_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutAction_report_valuesNestedInput
  }

  export type Action_report_valuesUncheckedUpdateInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_report_valuesCreateManyInput = {
    action_report_value_id: string
    account_id?: string | null
    action_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesUpdateManyMutationInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_report_valuesUncheckedUpdateManyInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_reportsCreateInput = {
    action_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAction_reportsInput
    accounts?: AccountsCreateNestedOneWithoutAction_reportsInput
    actions?: ActionsCreateNestedOneWithoutAction_reportsInput
  }

  export type Action_reportsUncheckedCreateInput = {
    action_report_id: string
    account_id?: string | null
    action_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAction_reportsInput
  }

  export type Action_reportsUpdateInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutAction_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutAction_reportsNestedInput
    actions?: ActionsUpdateOneWithoutAction_reportsNestedInput
  }

  export type Action_reportsUncheckedUpdateInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAction_reportsNestedInput
  }

  export type Action_reportsCreateManyInput = {
    action_report_id: string
    account_id?: string | null
    action_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_reportsUpdateManyMutationInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_reportsUncheckedUpdateManyInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_valuesCreateInput = {
    action_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutAction_valuesInput
    actions?: ActionsCreateNestedOneWithoutAction_valuesInput
    units?: UnitsCreateNestedOneWithoutAction_valuesInput
  }

  export type Action_valuesUncheckedCreateInput = {
    action_value_id: string
    account_id?: string | null
    action_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesUpdateInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutAction_valuesNestedInput
    actions?: ActionsUpdateOneWithoutAction_valuesNestedInput
    units?: UnitsUpdateOneWithoutAction_valuesNestedInput
  }

  export type Action_valuesUncheckedUpdateInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_valuesCreateManyInput = {
    action_value_id: string
    account_id?: string | null
    action_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesUpdateManyMutationInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_valuesUncheckedUpdateManyInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ActionsCreateInput = {
    action_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesCreateNestedManyWithoutActionsInput
    accounts?: AccountsCreateNestedOneWithoutActionsInput
    places?: PlacesCreateNestedOneWithoutActionsInput
    files?: FilesCreateNestedManyWithoutActionsInput
  }

  export type ActionsUncheckedCreateInput = {
    action_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutActionsInput
    files?: FilesUncheckedCreateNestedManyWithoutActionsInput
  }

  export type ActionsUpdateInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUpdateManyWithoutActionsNestedInput
    accounts?: AccountsUpdateOneWithoutActionsNestedInput
    places?: PlacesUpdateOneWithoutActionsNestedInput
    files?: FilesUpdateManyWithoutActionsNestedInput
  }

  export type ActionsUncheckedUpdateInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUncheckedUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutActionsNestedInput
    files?: FilesUncheckedUpdateManyWithoutActionsNestedInput
  }

  export type ActionsCreateManyInput = {
    action_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ActionsUpdateManyMutationInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ActionsUncheckedUpdateManyInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaCreateInput = {
    check_taxon_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutCheck_taxaInput
    checks?: ChecksCreateNestedOneWithoutCheck_taxaInput
    taxa?: TaxaCreateNestedOneWithoutCheck_taxaInput
    units?: UnitsCreateNestedOneWithoutCheck_taxaInput
  }

  export type Check_taxaUncheckedCreateInput = {
    check_taxon_id: string
    account_id?: string | null
    check_id?: string | null
    taxon_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaUpdateInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutCheck_taxaNestedInput
    checks?: ChecksUpdateOneWithoutCheck_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutCheck_taxaNestedInput
    units?: UnitsUpdateOneWithoutCheck_taxaNestedInput
  }

  export type Check_taxaUncheckedUpdateInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaCreateManyInput = {
    check_taxon_id: string
    account_id?: string | null
    check_id?: string | null
    taxon_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaUpdateManyMutationInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaUncheckedUpdateManyInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_valuesCreateInput = {
    check_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutCheck_valuesInput
    checks?: ChecksCreateNestedOneWithoutCheck_valuesInput
    units?: UnitsCreateNestedOneWithoutCheck_valuesInput
  }

  export type Check_valuesUncheckedCreateInput = {
    check_value_id: string
    account_id?: string | null
    check_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesUpdateInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutCheck_valuesNestedInput
    checks?: ChecksUpdateOneWithoutCheck_valuesNestedInput
    units?: UnitsUpdateOneWithoutCheck_valuesNestedInput
  }

  export type Check_valuesUncheckedUpdateInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_valuesCreateManyInput = {
    check_value_id: string
    account_id?: string | null
    check_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesUpdateManyMutationInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_valuesUncheckedUpdateManyInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ChecksCreateInput = {
    check_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesCreateNestedManyWithoutChecksInput
    accounts?: AccountsCreateNestedOneWithoutChecksInput
    places?: PlacesCreateNestedOneWithoutChecksInput
    files?: FilesCreateNestedManyWithoutChecksInput
  }

  export type ChecksUncheckedCreateInput = {
    check_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutChecksInput
    files?: FilesUncheckedCreateNestedManyWithoutChecksInput
  }

  export type ChecksUpdateInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUpdateManyWithoutChecksNestedInput
    accounts?: AccountsUpdateOneWithoutChecksNestedInput
    places?: PlacesUpdateOneWithoutChecksNestedInput
    files?: FilesUpdateManyWithoutChecksNestedInput
  }

  export type ChecksUncheckedUpdateInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutChecksNestedInput
    files?: FilesUncheckedUpdateManyWithoutChecksNestedInput
  }

  export type ChecksCreateManyInput = {
    check_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ChecksUpdateManyMutationInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ChecksUncheckedUpdateManyInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Field_typesCreateInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutField_typesInput
    widgets_for_fields?: Widgets_for_fieldsCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesUncheckedCreateInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutField_typesInput
    widgets_for_fields?: Widgets_for_fieldsUncheckedCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesUpdateInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutField_typesNestedInput
    widgets_for_fields?: Widgets_for_fieldsUpdateManyWithoutField_typesNestedInput
  }

  export type Field_typesUncheckedUpdateInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutField_typesNestedInput
    widgets_for_fields?: Widgets_for_fieldsUncheckedUpdateManyWithoutField_typesNestedInput
  }

  export type Field_typesCreateManyInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Field_typesUpdateManyMutationInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Field_typesUncheckedUpdateManyInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsCreateInput = {
    field_id: string
    table_name?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFieldsInput
    field_types?: Field_typesCreateNestedOneWithoutFieldsInput
    lists?: ListsCreateNestedOneWithoutFieldsInput
    projects?: ProjectsCreateNestedOneWithoutFieldsInput
    widget_types?: Widget_typesCreateNestedOneWithoutFieldsInput
  }

  export type FieldsUncheckedCreateInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsUpdateInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFieldsNestedInput
    field_types?: Field_typesUpdateOneWithoutFieldsNestedInput
    lists?: ListsUpdateOneWithoutFieldsNestedInput
    projects?: ProjectsUpdateOneWithoutFieldsNestedInput
    widget_types?: Widget_typesUpdateOneWithoutFieldsNestedInput
  }

  export type FieldsUncheckedUpdateInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsCreateManyInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsUpdateManyMutationInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsUncheckedUpdateManyInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesCreateInput = {
    file_id: string
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFilesInput
    actions?: ActionsCreateNestedOneWithoutFilesInput
    checks?: ChecksCreateNestedOneWithoutFilesInput
    places?: PlacesCreateNestedOneWithoutFilesInput
    projects?: ProjectsCreateNestedOneWithoutFilesInput
    subprojects?: SubprojectsCreateNestedOneWithoutFilesInput
  }

  export type FilesUncheckedCreateInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesUpdateInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFilesNestedInput
    actions?: ActionsUpdateOneWithoutFilesNestedInput
    checks?: ChecksUpdateOneWithoutFilesNestedInput
    places?: PlacesUpdateOneWithoutFilesNestedInput
    projects?: ProjectsUpdateOneWithoutFilesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutFilesNestedInput
  }

  export type FilesUncheckedUpdateInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesCreateManyInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesUpdateManyMutationInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesUncheckedUpdateManyInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesCreateInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_report_valuesInput
    goal_reports?: Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput
    units?: UnitsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesUpdateInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_report_valuesNestedInput
    goal_reports?: Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesCreateManyInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesUpdateManyMutationInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUncheckedUpdateManyInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsCreateInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput
    accounts?: AccountsCreateNestedOneWithoutGoal_reportsInput
    goals?: GoalsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateInput = {
    goal_report_id: string
    account_id?: string | null
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput
  }

  export type Goal_reportsUpdateInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutGoal_reportsNestedInput
    goals?: GoalsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsCreateManyInput = {
    goal_report_id: string
    account_id?: string | null
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsUpdateManyMutationInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsUncheckedUpdateManyInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type GoalsCreateInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedManyWithoutGoalsInput
    accounts?: AccountsCreateNestedOneWithoutGoalsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateInput = {
    goal_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput
  }

  export type GoalsUpdateInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateManyWithoutGoalsNestedInput
    accounts?: AccountsUpdateOneWithoutGoalsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput
  }

  export type GoalsCreateManyInput = {
    goal_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type GoalsUpdateManyMutationInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type GoalsUncheckedUpdateManyInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesCreateInput = {
    list_value_id: string
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutList_valuesInput
    lists?: ListsCreateNestedOneWithoutList_valuesInput
  }

  export type List_valuesUncheckedCreateInput = {
    list_value_id: string
    account_id?: string | null
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type List_valuesUpdateInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutList_valuesNestedInput
    lists?: ListsUpdateOneWithoutList_valuesNestedInput
  }

  export type List_valuesUncheckedUpdateInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesCreateManyInput = {
    list_value_id: string
    account_id?: string | null
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type List_valuesUpdateManyMutationInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUncheckedUpdateManyInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListsCreateInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutListsInput
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutListsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsUpdateInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ListsCreateManyInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ListsUpdateManyMutationInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListsUncheckedUpdateManyInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MessagesCreateInput = {
    message_id: string
    label?: string | null
    date?: Date | string | null
    message?: string | null
    user_messages?: User_messagesCreateNestedManyWithoutMessagesInput
  }

  export type MessagesUncheckedCreateInput = {
    message_id: string
    label?: string | null
    date?: Date | string | null
    message?: string | null
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type MessagesUpdateInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    user_messages?: User_messagesUpdateManyWithoutMessagesNestedInput
  }

  export type MessagesUncheckedUpdateInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    user_messages?: User_messagesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type MessagesCreateManyInput = {
    message_id: string
    label?: string | null
    date?: Date | string | null
    message?: string | null
  }

  export type MessagesUpdateManyMutationInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessagesUncheckedUpdateManyInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Observation_sourcesCreateInput = {
    observation_source_id: string
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservation_sourcesInput
    projects?: ProjectsCreateNestedOneWithoutObservation_sourcesInput
    observations?: ObservationsCreateNestedManyWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUncheckedCreateInput = {
    observation_source_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    observations?: ObservationsUncheckedCreateNestedManyWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUpdateInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservation_sourcesNestedInput
    projects?: ProjectsUpdateOneWithoutObservation_sourcesNestedInput
    observations?: ObservationsUpdateManyWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: ObservationsUncheckedUpdateManyWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesCreateManyInput = {
    observation_source_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesUpdateManyMutationInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesUncheckedUpdateManyInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ObservationsCreateInput = {
    observation_id: string
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservationsInput
    observation_sources?: Observation_sourcesCreateNestedOneWithoutObservationsInput
    places?: PlacesCreateNestedOneWithoutObservationsInput
  }

  export type ObservationsUncheckedCreateInput = {
    observation_id: string
    account_id?: string | null
    observation_source_id?: string | null
    place_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type ObservationsUpdateInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservationsNestedInput
    observation_sources?: Observation_sourcesUpdateOneWithoutObservationsNestedInput
    places?: PlacesUpdateOneWithoutObservationsNestedInput
  }

  export type ObservationsUncheckedUpdateInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    observation_source_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ObservationsCreateManyInput = {
    observation_id: string
    account_id?: string | null
    observation_source_id?: string | null
    place_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type ObservationsUpdateManyMutationInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ObservationsUncheckedUpdateManyInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    observation_source_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsCreateInput = {
    person_id: string
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPersonsInput
    projects?: ProjectsCreateNestedOneWithoutPersonsInput
  }

  export type PersonsUncheckedCreateInput = {
    person_id: string
    project_id?: string | null
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type PersonsUpdateInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPersonsNestedInput
    projects?: ProjectsUpdateOneWithoutPersonsNestedInput
  }

  export type PersonsUncheckedUpdateInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsCreateManyInput = {
    person_id: string
    project_id?: string | null
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type PersonsUpdateManyMutationInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUncheckedUpdateManyInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsCreateInput = {
    place_level_id: string
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_levelsInput
    projects?: ProjectsCreateNestedOneWithoutPlace_levelsInput
  }

  export type Place_levelsUncheckedCreateInput = {
    place_level_id: string
    account_id?: string | null
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsUpdateInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_levelsNestedInput
    projects?: ProjectsUpdateOneWithoutPlace_levelsNestedInput
  }

  export type Place_levelsUncheckedUpdateInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsCreateManyInput = {
    place_level_id: string
    account_id?: string | null
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsUpdateManyMutationInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUncheckedUpdateManyInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_report_valuesCreateInput = {
    place_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_report_valuesInput
    place_reports?: Place_reportsCreateNestedOneWithoutPlace_report_valuesInput
    units?: UnitsCreateNestedOneWithoutPlace_report_valuesInput
  }

  export type Place_report_valuesUncheckedCreateInput = {
    place_report_value_id: string
    account_id?: string | null
    place_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesUpdateInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_report_valuesNestedInput
    place_reports?: Place_reportsUpdateOneWithoutPlace_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutPlace_report_valuesNestedInput
  }

  export type Place_report_valuesUncheckedUpdateInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_report_valuesCreateManyInput = {
    place_report_value_id: string
    account_id?: string | null
    place_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesUpdateManyMutationInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_report_valuesUncheckedUpdateManyInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_reportsCreateInput = {
    place_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    place_report_values?: Place_report_valuesCreateNestedManyWithoutPlace_reportsInput
    accounts?: AccountsCreateNestedOneWithoutPlace_reportsInput
    places?: PlacesCreateNestedOneWithoutPlace_reportsInput
  }

  export type Place_reportsUncheckedCreateInput = {
    place_report_id: string
    account_id?: string | null
    place_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutPlace_reportsInput
  }

  export type Place_reportsUpdateInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_report_values?: Place_report_valuesUpdateManyWithoutPlace_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutPlace_reportsNestedInput
    places?: PlacesUpdateOneWithoutPlace_reportsNestedInput
  }

  export type Place_reportsUncheckedUpdateInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutPlace_reportsNestedInput
  }

  export type Place_reportsCreateManyInput = {
    place_report_id: string
    account_id?: string | null
    place_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_reportsUpdateManyMutationInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_reportsUncheckedUpdateManyInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_usersCreateInput = {
    place_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_usersInput
    places?: PlacesCreateNestedOneWithoutPlace_usersInput
    users?: UsersCreateNestedOneWithoutPlace_usersInput
  }

  export type Place_usersUncheckedCreateInput = {
    place_user_id: string
    account_id?: string | null
    place_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_usersUpdateInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_usersNestedInput
    places?: PlacesUpdateOneWithoutPlace_usersNestedInput
    users?: UsersUpdateOneWithoutPlace_usersNestedInput
  }

  export type Place_usersUncheckedUpdateInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_usersCreateManyInput = {
    place_user_id: string
    account_id?: string | null
    place_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_usersUpdateManyMutationInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_usersUncheckedUpdateManyInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PlacesCreateInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesUpdateInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type PlacesCreateManyInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
  }

  export type PlacesUpdateManyMutationInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PlacesUncheckedUpdateManyInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_reportsCreateInput = {
    project_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_reportsInput
    projects?: ProjectsCreateNestedOneWithoutProject_reportsInput
  }

  export type Project_reportsUncheckedCreateInput = {
    project_report_id: string
    account_id?: string | null
    project_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_reportsUpdateInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_reportsNestedInput
    projects?: ProjectsUpdateOneWithoutProject_reportsNestedInput
  }

  export type Project_reportsUncheckedUpdateInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_reportsCreateManyInput = {
    project_report_id: string
    account_id?: string | null
    project_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_reportsUpdateManyMutationInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_reportsUncheckedUpdateManyInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersCreateInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_usersInput
    projects?: ProjectsCreateNestedOneWithoutProject_usersInput
    users?: UsersCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersUpdateInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_usersNestedInput
    projects?: ProjectsUpdateOneWithoutProject_usersNestedInput
    users?: UsersUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersCreateManyInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersUpdateManyMutationInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUncheckedUpdateManyInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProjectsCreateInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUpdateInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsCreateManyInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
  }

  export type ProjectsUpdateManyMutationInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProjectsUncheckedUpdateManyInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_reportsCreateInput = {
    subproject_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_reportsInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_reportsInput
  }

  export type Subproject_reportsUncheckedCreateInput = {
    subproject_report_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_reportsUpdateInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_reportsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_reportsNestedInput
  }

  export type Subproject_reportsUncheckedUpdateInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_reportsCreateManyInput = {
    subproject_report_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_reportsUpdateManyMutationInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_reportsUncheckedUpdateManyInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaCreateInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_taxaInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_taxaInput
    taxa?: TaxaCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaUpdateInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_taxaNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaCreateManyInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaUpdateManyMutationInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUncheckedUpdateManyInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersCreateInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_usersInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_usersInput
    users?: UsersCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersUpdateInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_usersNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_usersNestedInput
    users?: UsersUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersCreateManyInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersUpdateManyMutationInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUncheckedUpdateManyInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsCreateInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsUpdateInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type SubprojectsCreateManyInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type SubprojectsUpdateManyMutationInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsUncheckedUpdateManyInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaCreateInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutTaxaInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutTaxaInput
    accounts?: AccountsCreateNestedOneWithoutTaxaInput
    taxonomies?: TaxonomiesCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateInput = {
    taxon_id: string
    account_id?: string | null
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutTaxaInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaUpdateInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutTaxaNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutTaxaNestedInput
    accounts?: AccountsUpdateOneWithoutTaxaNestedInput
    taxonomies?: TaxonomiesUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutTaxaNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type TaxaCreateManyInput = {
    taxon_id: string
    account_id?: string | null
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxaUpdateManyMutationInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaUncheckedUpdateManyInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxonomiesCreateInput = {
    taxonomy_id: string
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    taxa?: TaxaCreateNestedManyWithoutTaxonomiesInput
    accounts?: AccountsCreateNestedOneWithoutTaxonomiesInput
    projects?: ProjectsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateInput = {
    taxonomy_id: string
    account_id?: string | null
    project_id?: string | null
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    taxa?: TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput
  }

  export type TaxonomiesUpdateInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUpdateManyWithoutTaxonomiesNestedInput
    accounts?: AccountsUpdateOneWithoutTaxonomiesNestedInput
    projects?: ProjectsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesCreateManyInput = {
    taxonomy_id: string
    account_id?: string | null
    project_id?: string | null
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxonomiesUpdateManyMutationInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxonomiesUncheckedUpdateManyInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Ui_optionsCreateInput = {
    user_id: string
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Ui_optionsUncheckedCreateInput = {
    user_id: string
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Ui_optionsUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Ui_optionsUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Ui_optionsCreateManyInput = {
    user_id: string
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Ui_optionsUpdateManyMutationInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Ui_optionsUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UnitsCreateInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsUpdateInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type UnitsCreateManyInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type UnitsUpdateManyMutationInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUncheckedUpdateManyInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesCreateInput = {
    user_message_id: string
    label?: string | null
    read?: boolean | null
    messages?: MessagesCreateNestedOneWithoutUser_messagesInput
    users?: UsersCreateNestedOneWithoutUser_messagesInput
  }

  export type User_messagesUncheckedCreateInput = {
    user_message_id: string
    user_id?: string | null
    message_id?: string | null
    label?: string | null
    read?: boolean | null
  }

  export type User_messagesUpdateInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    messages?: MessagesUpdateOneWithoutUser_messagesNestedInput
    users?: UsersUpdateOneWithoutUser_messagesNestedInput
  }

  export type User_messagesUncheckedUpdateInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesCreateManyInput = {
    user_message_id: string
    user_id?: string | null
    message_id?: string | null
    label?: string | null
    read?: boolean | null
  }

  export type User_messagesUpdateManyMutationInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUncheckedUpdateManyInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UsersCreateInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    place_users?: Place_usersCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type UsersCreateManyInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type UsersUpdateManyMutationInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UsersUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widget_typesCreateInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutWidget_typesInput
    widgets_for_fields?: Widgets_for_fieldsCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesUncheckedCreateInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutWidget_typesInput
    widgets_for_fields?: Widgets_for_fieldsUncheckedCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesUpdateInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutWidget_typesNestedInput
    widgets_for_fields?: Widgets_for_fieldsUpdateManyWithoutWidget_typesNestedInput
  }

  export type Widget_typesUncheckedUpdateInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutWidget_typesNestedInput
    widgets_for_fields?: Widgets_for_fieldsUncheckedUpdateManyWithoutWidget_typesNestedInput
  }

  export type Widget_typesCreateManyInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widget_typesUpdateManyMutationInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widget_typesUncheckedUpdateManyInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsCreateInput = {
    widget_for_field_id: string
    label?: string | null
    deleted?: boolean | null
    field_types?: Field_typesCreateNestedOneWithoutWidgets_for_fieldsInput
    widget_types?: Widget_typesCreateNestedOneWithoutWidgets_for_fieldsInput
  }

  export type Widgets_for_fieldsUncheckedCreateInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsUpdateInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    field_types?: Field_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
    widget_types?: Widget_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
  }

  export type Widgets_for_fieldsUncheckedUpdateInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsCreateManyInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsUpdateManyMutationInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsUncheckedUpdateManyInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UuidFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    mode?: QueryMode
    not?: NestedUuidFilter | string
  }

  export type UuidNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    mode?: QueryMode
    not?: NestedUuidNullableFilter | string | null
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type UsersRelationFilter = {
    is?: UsersWhereInput | null
    isNot?: UsersWhereInput | null
  }

  export type Action_report_valuesListRelationFilter = {
    every?: Action_report_valuesWhereInput
    some?: Action_report_valuesWhereInput
    none?: Action_report_valuesWhereInput
  }

  export type Action_reportsListRelationFilter = {
    every?: Action_reportsWhereInput
    some?: Action_reportsWhereInput
    none?: Action_reportsWhereInput
  }

  export type Action_valuesListRelationFilter = {
    every?: Action_valuesWhereInput
    some?: Action_valuesWhereInput
    none?: Action_valuesWhereInput
  }

  export type ActionsListRelationFilter = {
    every?: ActionsWhereInput
    some?: ActionsWhereInput
    none?: ActionsWhereInput
  }

  export type Check_taxaListRelationFilter = {
    every?: Check_taxaWhereInput
    some?: Check_taxaWhereInput
    none?: Check_taxaWhereInput
  }

  export type Check_valuesListRelationFilter = {
    every?: Check_valuesWhereInput
    some?: Check_valuesWhereInput
    none?: Check_valuesWhereInput
  }

  export type ChecksListRelationFilter = {
    every?: ChecksWhereInput
    some?: ChecksWhereInput
    none?: ChecksWhereInput
  }

  export type FieldsListRelationFilter = {
    every?: FieldsWhereInput
    some?: FieldsWhereInput
    none?: FieldsWhereInput
  }

  export type FilesListRelationFilter = {
    every?: FilesWhereInput
    some?: FilesWhereInput
    none?: FilesWhereInput
  }

  export type Goal_report_valuesListRelationFilter = {
    every?: Goal_report_valuesWhereInput
    some?: Goal_report_valuesWhereInput
    none?: Goal_report_valuesWhereInput
  }

  export type Goal_reportsListRelationFilter = {
    every?: Goal_reportsWhereInput
    some?: Goal_reportsWhereInput
    none?: Goal_reportsWhereInput
  }

  export type GoalsListRelationFilter = {
    every?: GoalsWhereInput
    some?: GoalsWhereInput
    none?: GoalsWhereInput
  }

  export type List_valuesListRelationFilter = {
    every?: List_valuesWhereInput
    some?: List_valuesWhereInput
    none?: List_valuesWhereInput
  }

  export type ListsListRelationFilter = {
    every?: ListsWhereInput
    some?: ListsWhereInput
    none?: ListsWhereInput
  }

  export type Observation_sourcesListRelationFilter = {
    every?: Observation_sourcesWhereInput
    some?: Observation_sourcesWhereInput
    none?: Observation_sourcesWhereInput
  }

  export type ObservationsListRelationFilter = {
    every?: ObservationsWhereInput
    some?: ObservationsWhereInput
    none?: ObservationsWhereInput
  }

  export type PersonsListRelationFilter = {
    every?: PersonsWhereInput
    some?: PersonsWhereInput
    none?: PersonsWhereInput
  }

  export type Place_levelsListRelationFilter = {
    every?: Place_levelsWhereInput
    some?: Place_levelsWhereInput
    none?: Place_levelsWhereInput
  }

  export type Place_report_valuesListRelationFilter = {
    every?: Place_report_valuesWhereInput
    some?: Place_report_valuesWhereInput
    none?: Place_report_valuesWhereInput
  }

  export type Place_reportsListRelationFilter = {
    every?: Place_reportsWhereInput
    some?: Place_reportsWhereInput
    none?: Place_reportsWhereInput
  }

  export type Place_usersListRelationFilter = {
    every?: Place_usersWhereInput
    some?: Place_usersWhereInput
    none?: Place_usersWhereInput
  }

  export type PlacesListRelationFilter = {
    every?: PlacesWhereInput
    some?: PlacesWhereInput
    none?: PlacesWhereInput
  }

  export type Project_reportsListRelationFilter = {
    every?: Project_reportsWhereInput
    some?: Project_reportsWhereInput
    none?: Project_reportsWhereInput
  }

  export type Project_usersListRelationFilter = {
    every?: Project_usersWhereInput
    some?: Project_usersWhereInput
    none?: Project_usersWhereInput
  }

  export type ProjectsListRelationFilter = {
    every?: ProjectsWhereInput
    some?: ProjectsWhereInput
    none?: ProjectsWhereInput
  }

  export type Subproject_reportsListRelationFilter = {
    every?: Subproject_reportsWhereInput
    some?: Subproject_reportsWhereInput
    none?: Subproject_reportsWhereInput
  }

  export type Subproject_taxaListRelationFilter = {
    every?: Subproject_taxaWhereInput
    some?: Subproject_taxaWhereInput
    none?: Subproject_taxaWhereInput
  }

  export type Subproject_usersListRelationFilter = {
    every?: Subproject_usersWhereInput
    some?: Subproject_usersWhereInput
    none?: Subproject_usersWhereInput
  }

  export type SubprojectsListRelationFilter = {
    every?: SubprojectsWhereInput
    some?: SubprojectsWhereInput
    none?: SubprojectsWhereInput
  }

  export type TaxaListRelationFilter = {
    every?: TaxaWhereInput
    some?: TaxaWhereInput
    none?: TaxaWhereInput
  }

  export type TaxonomiesListRelationFilter = {
    every?: TaxonomiesWhereInput
    some?: TaxonomiesWhereInput
    none?: TaxonomiesWhereInput
  }

  export type UnitsListRelationFilter = {
    every?: UnitsWhereInput
    some?: UnitsWhereInput
    none?: UnitsWhereInput
  }

  export type Action_report_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Action_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Action_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ActionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Check_taxaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Check_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChecksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FieldsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FilesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Goal_report_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Goal_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GoalsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type List_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Observation_sourcesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ObservationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PersonsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Place_levelsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Place_report_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Place_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Place_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PlacesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Project_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Project_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Subproject_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Subproject_taxaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Subproject_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubprojectsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaxaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaxonomiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UnitsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountsCountOrderByAggregateInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
  }

  export type AccountsMaxOrderByAggregateInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
  }

  export type AccountsMinOrderByAggregateInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
  }

  export type UuidWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type UuidNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type BoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type AccountsRelationFilter = {
    is?: AccountsWhereInput | null
    isNot?: AccountsWhereInput | null
  }

  export type Action_reportsRelationFilter = {
    is?: Action_reportsWhereInput | null
    isNot?: Action_reportsWhereInput | null
  }

  export type UnitsRelationFilter = {
    is?: UnitsWhereInput | null
    isNot?: UnitsWhereInput | null
  }

  export type Action_report_valuesCountOrderByAggregateInput = {
    action_report_value_id?: SortOrder
    account_id?: SortOrder
    action_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_report_valuesAvgOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Action_report_valuesMaxOrderByAggregateInput = {
    action_report_value_id?: SortOrder
    account_id?: SortOrder
    action_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_report_valuesMinOrderByAggregateInput = {
    action_report_value_id?: SortOrder
    account_id?: SortOrder
    action_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_report_valuesSumOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type FloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type BoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }
  export type JsonNullableFilter = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase>, Exclude<keyof Required<JsonNullableFilterBase>, 'path'>>,
        Required<JsonNullableFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase>, 'path'>>

  export type JsonNullableFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: string[]
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type ActionsRelationFilter = {
    is?: ActionsWhereInput | null
    isNot?: ActionsWhereInput | null
  }

  export type Action_reportsCountOrderByAggregateInput = {
    action_report_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_reportsAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Action_reportsMaxOrderByAggregateInput = {
    action_report_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_reportsMinOrderByAggregateInput = {
    action_report_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_reportsSumOrderByAggregateInput = {
    year?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: string[]
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
    _count?: NestedIntNullableFilter
    _min?: NestedJsonNullableFilter
    _max?: NestedJsonNullableFilter
  }

  export type Action_valuesCountOrderByAggregateInput = {
    action_value_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_valuesAvgOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Action_valuesMaxOrderByAggregateInput = {
    action_value_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_valuesMinOrderByAggregateInput = {
    action_value_id?: SortOrder
    account_id?: SortOrder
    action_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Action_valuesSumOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type PlacesRelationFilter = {
    is?: PlacesWhereInput | null
    isNot?: PlacesWhereInput | null
  }

  export type ActionsCountOrderByAggregateInput = {
    action_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    data?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ActionsMaxOrderByAggregateInput = {
    action_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ActionsMinOrderByAggregateInput = {
    action_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ChecksRelationFilter = {
    is?: ChecksWhereInput | null
    isNot?: ChecksWhereInput | null
  }

  export type TaxaRelationFilter = {
    is?: TaxaWhereInput | null
    isNot?: TaxaWhereInput | null
  }

  export type Check_taxaCountOrderByAggregateInput = {
    check_taxon_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    taxon_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Check_taxaAvgOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Check_taxaMaxOrderByAggregateInput = {
    check_taxon_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    taxon_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Check_taxaMinOrderByAggregateInput = {
    check_taxon_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    taxon_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Check_taxaSumOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Check_valuesCountOrderByAggregateInput = {
    check_value_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Check_valuesAvgOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Check_valuesMaxOrderByAggregateInput = {
    check_value_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Check_valuesMinOrderByAggregateInput = {
    check_value_id?: SortOrder
    account_id?: SortOrder
    check_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Check_valuesSumOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type ChecksCountOrderByAggregateInput = {
    check_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    data?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ChecksMaxOrderByAggregateInput = {
    check_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ChecksMinOrderByAggregateInput = {
    check_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    date?: SortOrder
    relevant_for_reports?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widgets_for_fieldsListRelationFilter = {
    every?: Widgets_for_fieldsWhereInput
    some?: Widgets_for_fieldsWhereInput
    none?: Widgets_for_fieldsWhereInput
  }

  export type Widgets_for_fieldsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Field_typesCountOrderByAggregateInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Field_typesAvgOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Field_typesMaxOrderByAggregateInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Field_typesMinOrderByAggregateInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Field_typesSumOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Field_typesRelationFilter = {
    is?: Field_typesWhereInput | null
    isNot?: Field_typesWhereInput | null
  }

  export type ListsRelationFilter = {
    is?: ListsWhereInput | null
    isNot?: ListsWhereInput | null
  }

  export type ProjectsRelationFilter = {
    is?: ProjectsWhereInput | null
    isNot?: ProjectsWhereInput | null
  }

  export type Widget_typesRelationFilter = {
    is?: Widget_typesWhereInput | null
    isNot?: Widget_typesWhereInput | null
  }

  export type FieldsCountOrderByAggregateInput = {
    field_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    table_name?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    name?: SortOrder
    field_label?: SortOrder
    list_id?: SortOrder
    preset?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type FieldsMaxOrderByAggregateInput = {
    field_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    table_name?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    name?: SortOrder
    field_label?: SortOrder
    list_id?: SortOrder
    preset?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type FieldsMinOrderByAggregateInput = {
    field_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    table_name?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    name?: SortOrder
    field_label?: SortOrder
    list_id?: SortOrder
    preset?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsRelationFilter = {
    is?: SubprojectsWhereInput | null
    isNot?: SubprojectsWhereInput | null
  }

  export type FilesCountOrderByAggregateInput = {
    file_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    place_id?: SortOrder
    action_id?: SortOrder
    check_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    data?: SortOrder
    mimetype?: SortOrder
    url?: SortOrder
    deleted?: SortOrder
  }

  export type FilesMaxOrderByAggregateInput = {
    file_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    place_id?: SortOrder
    action_id?: SortOrder
    check_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    mimetype?: SortOrder
    url?: SortOrder
    deleted?: SortOrder
  }

  export type FilesMinOrderByAggregateInput = {
    file_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    place_id?: SortOrder
    action_id?: SortOrder
    check_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    mimetype?: SortOrder
    url?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_reportsRelationFilter = {
    is?: Goal_reportsWhereInput | null
    isNot?: Goal_reportsWhereInput | null
  }

  export type Goal_report_valuesCountOrderByAggregateInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_report_valuesAvgOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Goal_report_valuesMaxOrderByAggregateInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_report_valuesMinOrderByAggregateInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_report_valuesSumOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type GoalsRelationFilter = {
    is?: GoalsWhereInput | null
    isNot?: GoalsWhereInput | null
  }

  export type Goal_reportsCountOrderByAggregateInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_reportsMaxOrderByAggregateInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_reportsMinOrderByAggregateInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsCountOrderByAggregateInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type GoalsMaxOrderByAggregateInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsMinOrderByAggregateInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsSumOrderByAggregateInput = {
    year?: SortOrder
  }

  export type List_valuesCountOrderByAggregateInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type List_valuesMaxOrderByAggregateInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type List_valuesMinOrderByAggregateInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ListsCountOrderByAggregateInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    data?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ListsMaxOrderByAggregateInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ListsMinOrderByAggregateInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type User_messagesListRelationFilter = {
    every?: User_messagesWhereInput
    some?: User_messagesWhereInput
    none?: User_messagesWhereInput
  }

  export type User_messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessagesCountOrderByAggregateInput = {
    message_id?: SortOrder
    label?: SortOrder
    date?: SortOrder
    message?: SortOrder
  }

  export type MessagesMaxOrderByAggregateInput = {
    message_id?: SortOrder
    label?: SortOrder
    date?: SortOrder
    message?: SortOrder
  }

  export type MessagesMinOrderByAggregateInput = {
    message_id?: SortOrder
    label?: SortOrder
    date?: SortOrder
    message?: SortOrder
  }

  export type Observation_sourcesCountOrderByAggregateInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Observation_sourcesMaxOrderByAggregateInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Observation_sourcesMinOrderByAggregateInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Observation_sourcesRelationFilter = {
    is?: Observation_sourcesWhereInput | null
    isNot?: Observation_sourcesWhereInput | null
  }

  export type ObservationsCountOrderByAggregateInput = {
    observation_id?: SortOrder
    account_id?: SortOrder
    observation_source_id?: SortOrder
    place_id?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    observation_data?: SortOrder
    date?: SortOrder
    author?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ObservationsMaxOrderByAggregateInput = {
    observation_id?: SortOrder
    account_id?: SortOrder
    observation_source_id?: SortOrder
    place_id?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    date?: SortOrder
    author?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ObservationsMinOrderByAggregateInput = {
    observation_id?: SortOrder
    account_id?: SortOrder
    observation_source_id?: SortOrder
    place_id?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    date?: SortOrder
    author?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type PersonsCountOrderByAggregateInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type PersonsMaxOrderByAggregateInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type PersonsMinOrderByAggregateInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsCountOrderByAggregateInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observation_references?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type Place_levelsMaxOrderByAggregateInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observation_references?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsMinOrderByAggregateInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observation_references?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsSumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type Place_reportsRelationFilter = {
    is?: Place_reportsWhereInput | null
    isNot?: Place_reportsWhereInput | null
  }

  export type Place_report_valuesCountOrderByAggregateInput = {
    place_report_value_id?: SortOrder
    account_id?: SortOrder
    place_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_report_valuesAvgOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Place_report_valuesMaxOrderByAggregateInput = {
    place_report_value_id?: SortOrder
    account_id?: SortOrder
    place_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_report_valuesMinOrderByAggregateInput = {
    place_report_value_id?: SortOrder
    account_id?: SortOrder
    place_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_report_valuesSumOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Place_reportsCountOrderByAggregateInput = {
    place_report_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_reportsAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Place_reportsMaxOrderByAggregateInput = {
    place_report_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_reportsMinOrderByAggregateInput = {
    place_report_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_reportsSumOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Place_usersCountOrderByAggregateInput = {
    place_user_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_usersMaxOrderByAggregateInput = {
    place_user_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Place_usersMinOrderByAggregateInput = {
    place_user_id?: SortOrder
    account_id?: SortOrder
    place_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type PlacesCountOrderByAggregateInput = {
    place_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    parent_id?: SortOrder
    level?: SortOrder
    data?: SortOrder
    label?: SortOrder
    files_active_places?: SortOrder
    deleted?: SortOrder
  }

  export type PlacesAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type PlacesMaxOrderByAggregateInput = {
    place_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    parent_id?: SortOrder
    level?: SortOrder
    label?: SortOrder
    files_active_places?: SortOrder
    deleted?: SortOrder
  }

  export type PlacesMinOrderByAggregateInput = {
    place_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    parent_id?: SortOrder
    level?: SortOrder
    label?: SortOrder
    files_active_places?: SortOrder
    deleted?: SortOrder
  }

  export type PlacesSumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type Project_reportsCountOrderByAggregateInput = {
    project_report_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Project_reportsAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Project_reportsMaxOrderByAggregateInput = {
    project_report_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Project_reportsMinOrderByAggregateInput = {
    project_report_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Project_reportsSumOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Project_usersCountOrderByAggregateInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Project_usersMaxOrderByAggregateInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Project_usersMinOrderByAggregateInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type ProjectsCountOrderByAggregateInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    places_order_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    data?: SortOrder
    files_active_projects?: SortOrder
    files_active_projects_reports?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_subproject_reports?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    files_active_check_reports?: SortOrder
    deleted?: SortOrder
  }

  export type ProjectsMaxOrderByAggregateInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    files_active_projects?: SortOrder
    files_active_projects_reports?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_subproject_reports?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    files_active_check_reports?: SortOrder
    deleted?: SortOrder
  }

  export type ProjectsMinOrderByAggregateInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    files_active_projects?: SortOrder
    files_active_projects_reports?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_subproject_reports?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    files_active_check_reports?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_reportsCountOrderByAggregateInput = {
    subproject_report_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_reportsAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Subproject_reportsMaxOrderByAggregateInput = {
    subproject_report_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_reportsMinOrderByAggregateInput = {
    subproject_report_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_reportsSumOrderByAggregateInput = {
    year?: SortOrder
  }

  export type Subproject_taxaCountOrderByAggregateInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_taxaMaxOrderByAggregateInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_taxaMinOrderByAggregateInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_usersCountOrderByAggregateInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_usersMaxOrderByAggregateInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_usersMinOrderByAggregateInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsCountOrderByAggregateInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    since_year?: SortOrder
    data?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsAvgOrderByAggregateInput = {
    since_year?: SortOrder
  }

  export type SubprojectsMaxOrderByAggregateInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    since_year?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsMinOrderByAggregateInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    since_year?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsSumOrderByAggregateInput = {
    since_year?: SortOrder
  }

  export type TaxonomiesRelationFilter = {
    is?: TaxonomiesWhereInput | null
    isNot?: TaxonomiesWhereInput | null
  }

  export type TaxaCountOrderByAggregateInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type TaxaMaxOrderByAggregateInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type TaxaMinOrderByAggregateInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type TaxonomiesCountOrderByAggregateInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type TaxonomiesMaxOrderByAggregateInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type TaxonomiesMinOrderByAggregateInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Ui_optionsCountOrderByAggregateInput = {
    user_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    tabs?: SortOrder
    label?: SortOrder
  }

  export type Ui_optionsMaxOrderByAggregateInput = {
    user_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    label?: SortOrder
  }

  export type Ui_optionsMinOrderByAggregateInput = {
    user_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    label?: SortOrder
  }

  export type UnitsCountOrderByAggregateInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type UnitsAvgOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type UnitsMaxOrderByAggregateInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type UnitsMinOrderByAggregateInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type UnitsSumOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type MessagesRelationFilter = {
    is?: MessagesWhereInput | null
    isNot?: MessagesWhereInput | null
  }

  export type User_messagesCountOrderByAggregateInput = {
    user_message_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label?: SortOrder
    read?: SortOrder
  }

  export type User_messagesMaxOrderByAggregateInput = {
    user_message_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label?: SortOrder
    read?: SortOrder
  }

  export type User_messagesMinOrderByAggregateInput = {
    user_message_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label?: SortOrder
    read?: SortOrder
  }

  export type AccountsListRelationFilter = {
    every?: AccountsWhereInput
    some?: AccountsWhereInput
    none?: AccountsWhereInput
  }

  export type AccountsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesCountOrderByAggregateInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesAvgOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Widget_typesMaxOrderByAggregateInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesMinOrderByAggregateInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesSumOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Widgets_for_fieldsCountOrderByAggregateInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widgets_for_fieldsMaxOrderByAggregateInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widgets_for_fieldsMinOrderByAggregateInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type UsersCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAccountsInput
    connect?: UsersWhereUniqueInput
  }

  export type Action_report_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAccountsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Action_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
  }

  export type Action_reportsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutAccountsInput>, Enumerable<Action_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Action_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Action_reportsWhereUniqueInput>
  }

  export type Action_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutAccountsInput>, Enumerable<Action_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Action_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Action_valuesWhereUniqueInput>
  }

  export type ActionsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutAccountsInput>, Enumerable<ActionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutAccountsInput>
    createMany?: ActionsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ActionsWhereUniqueInput>
  }

  export type Check_taxaCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutAccountsInput>, Enumerable<Check_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Check_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Check_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutAccountsInput>, Enumerable<Check_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Check_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Check_valuesWhereUniqueInput>
  }

  export type ChecksCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutAccountsInput>, Enumerable<ChecksUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutAccountsInput>
    createMany?: ChecksCreateManyAccountsInputEnvelope
    connect?: Enumerable<ChecksWhereUniqueInput>
  }

  export type FieldsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutAccountsInput>, Enumerable<FieldsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutAccountsInput>
    createMany?: FieldsCreateManyAccountsInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type FilesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutAccountsInput>, Enumerable<FilesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutAccountsInput>
    createMany?: FilesCreateManyAccountsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type Goal_report_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Goal_reportsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type GoalsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type List_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type ListsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type ObservationsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutAccountsInput>, Enumerable<ObservationsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutAccountsInput>
    createMany?: ObservationsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ObservationsWhereUniqueInput>
  }

  export type PersonsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Place_report_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutAccountsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Place_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
  }

  export type Place_reportsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutAccountsInput>, Enumerable<Place_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Place_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_reportsWhereUniqueInput>
  }

  export type Place_usersCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutAccountsInput>, Enumerable<Place_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Place_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_usersWhereUniqueInput>
  }

  export type PlacesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutAccountsInput>, Enumerable<PlacesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutAccountsInput>
    createMany?: PlacesCreateManyAccountsInputEnvelope
    connect?: Enumerable<PlacesWhereUniqueInput>
  }

  export type Project_reportsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutAccountsInput>, Enumerable<Project_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Project_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Project_reportsWhereUniqueInput>
  }

  export type Project_usersCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type ProjectsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ProjectsWhereUniqueInput>
  }

  export type Subproject_reportsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutAccountsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
  }

  export type Subproject_taxaCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type SubprojectsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxaCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type TaxonomiesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type UnitsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAccountsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Action_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
  }

  export type Action_reportsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutAccountsInput>, Enumerable<Action_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Action_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Action_reportsWhereUniqueInput>
  }

  export type Action_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutAccountsInput>, Enumerable<Action_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Action_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Action_valuesWhereUniqueInput>
  }

  export type ActionsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutAccountsInput>, Enumerable<ActionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutAccountsInput>
    createMany?: ActionsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ActionsWhereUniqueInput>
  }

  export type Check_taxaUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutAccountsInput>, Enumerable<Check_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Check_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Check_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutAccountsInput>, Enumerable<Check_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Check_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Check_valuesWhereUniqueInput>
  }

  export type ChecksUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutAccountsInput>, Enumerable<ChecksUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutAccountsInput>
    createMany?: ChecksCreateManyAccountsInputEnvelope
    connect?: Enumerable<ChecksWhereUniqueInput>
  }

  export type FieldsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutAccountsInput>, Enumerable<FieldsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutAccountsInput>
    createMany?: FieldsCreateManyAccountsInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type FilesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutAccountsInput>, Enumerable<FilesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutAccountsInput>
    createMany?: FilesCreateManyAccountsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type GoalsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type List_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type ListsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type ObservationsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutAccountsInput>, Enumerable<ObservationsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutAccountsInput>
    createMany?: ObservationsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ObservationsWhereUniqueInput>
  }

  export type PersonsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutAccountsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Place_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
  }

  export type Place_reportsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutAccountsInput>, Enumerable<Place_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Place_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_reportsWhereUniqueInput>
  }

  export type Place_usersUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutAccountsInput>, Enumerable<Place_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Place_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_usersWhereUniqueInput>
  }

  export type PlacesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutAccountsInput>, Enumerable<PlacesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutAccountsInput>
    createMany?: PlacesCreateManyAccountsInputEnvelope
    connect?: Enumerable<PlacesWhereUniqueInput>
  }

  export type Project_reportsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutAccountsInput>, Enumerable<Project_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Project_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Project_reportsWhereUniqueInput>
  }

  export type Project_usersUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type ProjectsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ProjectsWhereUniqueInput>
  }

  export type Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutAccountsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
  }

  export type Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type SubprojectsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxaUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type UnitsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UsersUpdateOneWithoutAccountsNestedInput = {
    create?: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAccountsInput
    upsert?: UsersUpsertWithoutAccountsInput
    disconnect?: boolean
    delete?: boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<UsersUpdateWithoutAccountsInput, UsersUncheckedUpdateWithoutAccountsInput>
  }

  export type Action_report_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAccountsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Action_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Action_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Action_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_report_valuesWhereUniqueInput>
    delete?: Enumerable<Action_report_valuesWhereUniqueInput>
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
    update?: Enumerable<Action_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Action_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Action_report_valuesScalarWhereInput>
  }

  export type Action_reportsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutAccountsInput>, Enumerable<Action_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Action_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Action_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Action_reportsWhereUniqueInput>
    disconnect?: Enumerable<Action_reportsWhereUniqueInput>
    delete?: Enumerable<Action_reportsWhereUniqueInput>
    connect?: Enumerable<Action_reportsWhereUniqueInput>
    update?: Enumerable<Action_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Action_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Action_reportsScalarWhereInput>
  }

  export type Action_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutAccountsInput>, Enumerable<Action_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Action_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Action_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Action_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_valuesWhereUniqueInput>
    delete?: Enumerable<Action_valuesWhereUniqueInput>
    connect?: Enumerable<Action_valuesWhereUniqueInput>
    update?: Enumerable<Action_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Action_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Action_valuesScalarWhereInput>
  }

  export type ActionsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutAccountsInput>, Enumerable<ActionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ActionsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ActionsCreateManyAccountsInputEnvelope
    set?: Enumerable<ActionsWhereUniqueInput>
    disconnect?: Enumerable<ActionsWhereUniqueInput>
    delete?: Enumerable<ActionsWhereUniqueInput>
    connect?: Enumerable<ActionsWhereUniqueInput>
    update?: Enumerable<ActionsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ActionsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ActionsScalarWhereInput>
  }

  export type Check_taxaUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutAccountsInput>, Enumerable<Check_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Check_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Check_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutAccountsInput>, Enumerable<Check_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Check_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Check_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Check_valuesWhereUniqueInput>
    disconnect?: Enumerable<Check_valuesWhereUniqueInput>
    delete?: Enumerable<Check_valuesWhereUniqueInput>
    connect?: Enumerable<Check_valuesWhereUniqueInput>
    update?: Enumerable<Check_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Check_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Check_valuesScalarWhereInput>
  }

  export type ChecksUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutAccountsInput>, Enumerable<ChecksUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ChecksUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ChecksCreateManyAccountsInputEnvelope
    set?: Enumerable<ChecksWhereUniqueInput>
    disconnect?: Enumerable<ChecksWhereUniqueInput>
    delete?: Enumerable<ChecksWhereUniqueInput>
    connect?: Enumerable<ChecksWhereUniqueInput>
    update?: Enumerable<ChecksUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ChecksUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ChecksScalarWhereInput>
  }

  export type FieldsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutAccountsInput>, Enumerable<FieldsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: FieldsCreateManyAccountsInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type FilesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutAccountsInput>, Enumerable<FilesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: FilesCreateManyAccountsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type Goal_report_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Goal_reportsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type GoalsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type List_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type ListsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type ObservationsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutAccountsInput>, Enumerable<ObservationsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ObservationsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ObservationsCreateManyAccountsInputEnvelope
    set?: Enumerable<ObservationsWhereUniqueInput>
    disconnect?: Enumerable<ObservationsWhereUniqueInput>
    delete?: Enumerable<ObservationsWhereUniqueInput>
    connect?: Enumerable<ObservationsWhereUniqueInput>
    update?: Enumerable<ObservationsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ObservationsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ObservationsScalarWhereInput>
  }

  export type PersonsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Place_report_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutAccountsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Place_report_valuesWhereUniqueInput>
    delete?: Enumerable<Place_report_valuesWhereUniqueInput>
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
    update?: Enumerable<Place_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_report_valuesScalarWhereInput>
  }

  export type Place_reportsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutAccountsInput>, Enumerable<Place_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_reportsWhereUniqueInput>
    disconnect?: Enumerable<Place_reportsWhereUniqueInput>
    delete?: Enumerable<Place_reportsWhereUniqueInput>
    connect?: Enumerable<Place_reportsWhereUniqueInput>
    update?: Enumerable<Place_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_reportsScalarWhereInput>
  }

  export type Place_usersUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutAccountsInput>, Enumerable<Place_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_usersWhereUniqueInput>
    disconnect?: Enumerable<Place_usersWhereUniqueInput>
    delete?: Enumerable<Place_usersWhereUniqueInput>
    connect?: Enumerable<Place_usersWhereUniqueInput>
    update?: Enumerable<Place_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_usersScalarWhereInput>
  }

  export type PlacesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutAccountsInput>, Enumerable<PlacesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<PlacesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: PlacesCreateManyAccountsInputEnvelope
    set?: Enumerable<PlacesWhereUniqueInput>
    disconnect?: Enumerable<PlacesWhereUniqueInput>
    delete?: Enumerable<PlacesWhereUniqueInput>
    connect?: Enumerable<PlacesWhereUniqueInput>
    update?: Enumerable<PlacesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<PlacesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<PlacesScalarWhereInput>
  }

  export type Project_reportsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutAccountsInput>, Enumerable<Project_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Project_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Project_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Project_reportsWhereUniqueInput>
    disconnect?: Enumerable<Project_reportsWhereUniqueInput>
    delete?: Enumerable<Project_reportsWhereUniqueInput>
    connect?: Enumerable<Project_reportsWhereUniqueInput>
    update?: Enumerable<Project_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Project_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Project_reportsScalarWhereInput>
  }

  export type Project_usersUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type ProjectsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ProjectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    set?: Enumerable<ProjectsWhereUniqueInput>
    disconnect?: Enumerable<ProjectsWhereUniqueInput>
    delete?: Enumerable<ProjectsWhereUniqueInput>
    connect?: Enumerable<ProjectsWhereUniqueInput>
    update?: Enumerable<ProjectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ProjectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ProjectsScalarWhereInput>
  }

  export type Subproject_reportsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutAccountsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_reportsWhereUniqueInput>
    disconnect?: Enumerable<Subproject_reportsWhereUniqueInput>
    delete?: Enumerable<Subproject_reportsWhereUniqueInput>
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
    update?: Enumerable<Subproject_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_reportsScalarWhereInput>
  }

  export type Subproject_taxaUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type SubprojectsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxaUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type TaxonomiesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type UnitsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAccountsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Action_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Action_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Action_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_report_valuesWhereUniqueInput>
    delete?: Enumerable<Action_report_valuesWhereUniqueInput>
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
    update?: Enumerable<Action_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Action_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Action_report_valuesScalarWhereInput>
  }

  export type Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutAccountsInput>, Enumerable<Action_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Action_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Action_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Action_reportsWhereUniqueInput>
    disconnect?: Enumerable<Action_reportsWhereUniqueInput>
    delete?: Enumerable<Action_reportsWhereUniqueInput>
    connect?: Enumerable<Action_reportsWhereUniqueInput>
    update?: Enumerable<Action_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Action_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Action_reportsScalarWhereInput>
  }

  export type Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutAccountsInput>, Enumerable<Action_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Action_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Action_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Action_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_valuesWhereUniqueInput>
    delete?: Enumerable<Action_valuesWhereUniqueInput>
    connect?: Enumerable<Action_valuesWhereUniqueInput>
    update?: Enumerable<Action_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Action_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Action_valuesScalarWhereInput>
  }

  export type ActionsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutAccountsInput>, Enumerable<ActionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ActionsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ActionsCreateManyAccountsInputEnvelope
    set?: Enumerable<ActionsWhereUniqueInput>
    disconnect?: Enumerable<ActionsWhereUniqueInput>
    delete?: Enumerable<ActionsWhereUniqueInput>
    connect?: Enumerable<ActionsWhereUniqueInput>
    update?: Enumerable<ActionsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ActionsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ActionsScalarWhereInput>
  }

  export type Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutAccountsInput>, Enumerable<Check_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Check_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutAccountsInput>, Enumerable<Check_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Check_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Check_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Check_valuesWhereUniqueInput>
    disconnect?: Enumerable<Check_valuesWhereUniqueInput>
    delete?: Enumerable<Check_valuesWhereUniqueInput>
    connect?: Enumerable<Check_valuesWhereUniqueInput>
    update?: Enumerable<Check_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Check_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Check_valuesScalarWhereInput>
  }

  export type ChecksUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutAccountsInput>, Enumerable<ChecksUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ChecksUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ChecksCreateManyAccountsInputEnvelope
    set?: Enumerable<ChecksWhereUniqueInput>
    disconnect?: Enumerable<ChecksWhereUniqueInput>
    delete?: Enumerable<ChecksWhereUniqueInput>
    connect?: Enumerable<ChecksWhereUniqueInput>
    update?: Enumerable<ChecksUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ChecksUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ChecksScalarWhereInput>
  }

  export type FieldsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutAccountsInput>, Enumerable<FieldsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: FieldsCreateManyAccountsInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type FilesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutAccountsInput>, Enumerable<FilesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: FilesCreateManyAccountsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type GoalsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type List_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type ListsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type ObservationsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutAccountsInput>, Enumerable<ObservationsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ObservationsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ObservationsCreateManyAccountsInputEnvelope
    set?: Enumerable<ObservationsWhereUniqueInput>
    disconnect?: Enumerable<ObservationsWhereUniqueInput>
    delete?: Enumerable<ObservationsWhereUniqueInput>
    connect?: Enumerable<ObservationsWhereUniqueInput>
    update?: Enumerable<ObservationsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ObservationsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ObservationsScalarWhereInput>
  }

  export type PersonsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutAccountsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Place_report_valuesWhereUniqueInput>
    delete?: Enumerable<Place_report_valuesWhereUniqueInput>
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
    update?: Enumerable<Place_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_report_valuesScalarWhereInput>
  }

  export type Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutAccountsInput>, Enumerable<Place_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_reportsWhereUniqueInput>
    disconnect?: Enumerable<Place_reportsWhereUniqueInput>
    delete?: Enumerable<Place_reportsWhereUniqueInput>
    connect?: Enumerable<Place_reportsWhereUniqueInput>
    update?: Enumerable<Place_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_reportsScalarWhereInput>
  }

  export type Place_usersUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutAccountsInput>, Enumerable<Place_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_usersWhereUniqueInput>
    disconnect?: Enumerable<Place_usersWhereUniqueInput>
    delete?: Enumerable<Place_usersWhereUniqueInput>
    connect?: Enumerable<Place_usersWhereUniqueInput>
    update?: Enumerable<Place_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_usersScalarWhereInput>
  }

  export type PlacesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutAccountsInput>, Enumerable<PlacesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<PlacesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: PlacesCreateManyAccountsInputEnvelope
    set?: Enumerable<PlacesWhereUniqueInput>
    disconnect?: Enumerable<PlacesWhereUniqueInput>
    delete?: Enumerable<PlacesWhereUniqueInput>
    connect?: Enumerable<PlacesWhereUniqueInput>
    update?: Enumerable<PlacesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<PlacesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<PlacesScalarWhereInput>
  }

  export type Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutAccountsInput>, Enumerable<Project_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Project_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Project_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Project_reportsWhereUniqueInput>
    disconnect?: Enumerable<Project_reportsWhereUniqueInput>
    delete?: Enumerable<Project_reportsWhereUniqueInput>
    connect?: Enumerable<Project_reportsWhereUniqueInput>
    update?: Enumerable<Project_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Project_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Project_reportsScalarWhereInput>
  }

  export type Project_usersUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type ProjectsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ProjectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    set?: Enumerable<ProjectsWhereUniqueInput>
    disconnect?: Enumerable<ProjectsWhereUniqueInput>
    delete?: Enumerable<ProjectsWhereUniqueInput>
    connect?: Enumerable<ProjectsWhereUniqueInput>
    update?: Enumerable<ProjectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ProjectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ProjectsScalarWhereInput>
  }

  export type Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutAccountsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_reportsWhereUniqueInput>
    disconnect?: Enumerable<Subproject_reportsWhereUniqueInput>
    delete?: Enumerable<Subproject_reportsWhereUniqueInput>
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
    update?: Enumerable<Subproject_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_reportsScalarWhereInput>
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxaUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type UnitsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutAction_report_valuesInput = {
    create?: XOR<AccountsCreateWithoutAction_report_valuesInput, AccountsUncheckedCreateWithoutAction_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutAction_report_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type Action_reportsCreateNestedOneWithoutAction_report_valuesInput = {
    create?: XOR<Action_reportsCreateWithoutAction_report_valuesInput, Action_reportsUncheckedCreateWithoutAction_report_valuesInput>
    connectOrCreate?: Action_reportsCreateOrConnectWithoutAction_report_valuesInput
    connect?: Action_reportsWhereUniqueInput
  }

  export type UnitsCreateNestedOneWithoutAction_report_valuesInput = {
    create?: XOR<UnitsCreateWithoutAction_report_valuesInput, UnitsUncheckedCreateWithoutAction_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutAction_report_valuesInput
    connect?: UnitsWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type AccountsUpdateOneWithoutAction_report_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutAction_report_valuesInput, AccountsUncheckedCreateWithoutAction_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutAction_report_valuesInput
    upsert?: AccountsUpsertWithoutAction_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutAction_report_valuesInput, AccountsUncheckedUpdateWithoutAction_report_valuesInput>
  }

  export type Action_reportsUpdateOneWithoutAction_report_valuesNestedInput = {
    create?: XOR<Action_reportsCreateWithoutAction_report_valuesInput, Action_reportsUncheckedCreateWithoutAction_report_valuesInput>
    connectOrCreate?: Action_reportsCreateOrConnectWithoutAction_report_valuesInput
    upsert?: Action_reportsUpsertWithoutAction_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: Action_reportsWhereUniqueInput
    update?: XOR<Action_reportsUpdateWithoutAction_report_valuesInput, Action_reportsUncheckedUpdateWithoutAction_report_valuesInput>
  }

  export type UnitsUpdateOneWithoutAction_report_valuesNestedInput = {
    create?: XOR<UnitsCreateWithoutAction_report_valuesInput, UnitsUncheckedCreateWithoutAction_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutAction_report_valuesInput
    upsert?: UnitsUpsertWithoutAction_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: UnitsWhereUniqueInput
    update?: XOR<UnitsUpdateWithoutAction_report_valuesInput, UnitsUncheckedUpdateWithoutAction_report_valuesInput>
  }

  export type Action_report_valuesCreateNestedManyWithoutAction_reportsInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAction_reportsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAction_reportsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAction_reportsInput>
    createMany?: Action_report_valuesCreateManyAction_reportsInputEnvelope
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutAction_reportsInput = {
    create?: XOR<AccountsCreateWithoutAction_reportsInput, AccountsUncheckedCreateWithoutAction_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutAction_reportsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ActionsCreateNestedOneWithoutAction_reportsInput = {
    create?: XOR<ActionsCreateWithoutAction_reportsInput, ActionsUncheckedCreateWithoutAction_reportsInput>
    connectOrCreate?: ActionsCreateOrConnectWithoutAction_reportsInput
    connect?: ActionsWhereUniqueInput
  }

  export type Action_report_valuesUncheckedCreateNestedManyWithoutAction_reportsInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAction_reportsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAction_reportsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAction_reportsInput>
    createMany?: Action_report_valuesCreateManyAction_reportsInputEnvelope
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
  }

  export type Action_report_valuesUpdateManyWithoutAction_reportsNestedInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAction_reportsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAction_reportsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAction_reportsInput>
    upsert?: Enumerable<Action_report_valuesUpsertWithWhereUniqueWithoutAction_reportsInput>
    createMany?: Action_report_valuesCreateManyAction_reportsInputEnvelope
    set?: Enumerable<Action_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_report_valuesWhereUniqueInput>
    delete?: Enumerable<Action_report_valuesWhereUniqueInput>
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
    update?: Enumerable<Action_report_valuesUpdateWithWhereUniqueWithoutAction_reportsInput>
    updateMany?: Enumerable<Action_report_valuesUpdateManyWithWhereWithoutAction_reportsInput>
    deleteMany?: Enumerable<Action_report_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutAction_reportsNestedInput = {
    create?: XOR<AccountsCreateWithoutAction_reportsInput, AccountsUncheckedCreateWithoutAction_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutAction_reportsInput
    upsert?: AccountsUpsertWithoutAction_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutAction_reportsInput, AccountsUncheckedUpdateWithoutAction_reportsInput>
  }

  export type ActionsUpdateOneWithoutAction_reportsNestedInput = {
    create?: XOR<ActionsCreateWithoutAction_reportsInput, ActionsUncheckedCreateWithoutAction_reportsInput>
    connectOrCreate?: ActionsCreateOrConnectWithoutAction_reportsInput
    upsert?: ActionsUpsertWithoutAction_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ActionsWhereUniqueInput
    update?: XOR<ActionsUpdateWithoutAction_reportsInput, ActionsUncheckedUpdateWithoutAction_reportsInput>
  }

  export type Action_report_valuesUncheckedUpdateManyWithoutAction_reportsNestedInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutAction_reportsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutAction_reportsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutAction_reportsInput>
    upsert?: Enumerable<Action_report_valuesUpsertWithWhereUniqueWithoutAction_reportsInput>
    createMany?: Action_report_valuesCreateManyAction_reportsInputEnvelope
    set?: Enumerable<Action_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_report_valuesWhereUniqueInput>
    delete?: Enumerable<Action_report_valuesWhereUniqueInput>
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
    update?: Enumerable<Action_report_valuesUpdateWithWhereUniqueWithoutAction_reportsInput>
    updateMany?: Enumerable<Action_report_valuesUpdateManyWithWhereWithoutAction_reportsInput>
    deleteMany?: Enumerable<Action_report_valuesScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutAction_valuesInput = {
    create?: XOR<AccountsCreateWithoutAction_valuesInput, AccountsUncheckedCreateWithoutAction_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutAction_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ActionsCreateNestedOneWithoutAction_valuesInput = {
    create?: XOR<ActionsCreateWithoutAction_valuesInput, ActionsUncheckedCreateWithoutAction_valuesInput>
    connectOrCreate?: ActionsCreateOrConnectWithoutAction_valuesInput
    connect?: ActionsWhereUniqueInput
  }

  export type UnitsCreateNestedOneWithoutAction_valuesInput = {
    create?: XOR<UnitsCreateWithoutAction_valuesInput, UnitsUncheckedCreateWithoutAction_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutAction_valuesInput
    connect?: UnitsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutAction_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutAction_valuesInput, AccountsUncheckedCreateWithoutAction_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutAction_valuesInput
    upsert?: AccountsUpsertWithoutAction_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutAction_valuesInput, AccountsUncheckedUpdateWithoutAction_valuesInput>
  }

  export type ActionsUpdateOneWithoutAction_valuesNestedInput = {
    create?: XOR<ActionsCreateWithoutAction_valuesInput, ActionsUncheckedCreateWithoutAction_valuesInput>
    connectOrCreate?: ActionsCreateOrConnectWithoutAction_valuesInput
    upsert?: ActionsUpsertWithoutAction_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ActionsWhereUniqueInput
    update?: XOR<ActionsUpdateWithoutAction_valuesInput, ActionsUncheckedUpdateWithoutAction_valuesInput>
  }

  export type UnitsUpdateOneWithoutAction_valuesNestedInput = {
    create?: XOR<UnitsCreateWithoutAction_valuesInput, UnitsUncheckedCreateWithoutAction_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutAction_valuesInput
    upsert?: UnitsUpsertWithoutAction_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: UnitsWhereUniqueInput
    update?: XOR<UnitsUpdateWithoutAction_valuesInput, UnitsUncheckedUpdateWithoutAction_valuesInput>
  }

  export type Action_reportsCreateNestedManyWithoutActionsInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutActionsInput>, Enumerable<Action_reportsUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutActionsInput>
    createMany?: Action_reportsCreateManyActionsInputEnvelope
    connect?: Enumerable<Action_reportsWhereUniqueInput>
  }

  export type Action_valuesCreateNestedManyWithoutActionsInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutActionsInput>, Enumerable<Action_valuesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutActionsInput>
    createMany?: Action_valuesCreateManyActionsInputEnvelope
    connect?: Enumerable<Action_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutActionsInput = {
    create?: XOR<AccountsCreateWithoutActionsInput, AccountsUncheckedCreateWithoutActionsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutActionsInput
    connect?: AccountsWhereUniqueInput
  }

  export type PlacesCreateNestedOneWithoutActionsInput = {
    create?: XOR<PlacesCreateWithoutActionsInput, PlacesUncheckedCreateWithoutActionsInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutActionsInput
    connect?: PlacesWhereUniqueInput
  }

  export type FilesCreateNestedManyWithoutActionsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutActionsInput>, Enumerable<FilesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutActionsInput>
    createMany?: FilesCreateManyActionsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type Action_reportsUncheckedCreateNestedManyWithoutActionsInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutActionsInput>, Enumerable<Action_reportsUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutActionsInput>
    createMany?: Action_reportsCreateManyActionsInputEnvelope
    connect?: Enumerable<Action_reportsWhereUniqueInput>
  }

  export type Action_valuesUncheckedCreateNestedManyWithoutActionsInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutActionsInput>, Enumerable<Action_valuesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutActionsInput>
    createMany?: Action_valuesCreateManyActionsInputEnvelope
    connect?: Enumerable<Action_valuesWhereUniqueInput>
  }

  export type FilesUncheckedCreateNestedManyWithoutActionsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutActionsInput>, Enumerable<FilesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutActionsInput>
    createMany?: FilesCreateManyActionsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type Action_reportsUpdateManyWithoutActionsNestedInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutActionsInput>, Enumerable<Action_reportsUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutActionsInput>
    upsert?: Enumerable<Action_reportsUpsertWithWhereUniqueWithoutActionsInput>
    createMany?: Action_reportsCreateManyActionsInputEnvelope
    set?: Enumerable<Action_reportsWhereUniqueInput>
    disconnect?: Enumerable<Action_reportsWhereUniqueInput>
    delete?: Enumerable<Action_reportsWhereUniqueInput>
    connect?: Enumerable<Action_reportsWhereUniqueInput>
    update?: Enumerable<Action_reportsUpdateWithWhereUniqueWithoutActionsInput>
    updateMany?: Enumerable<Action_reportsUpdateManyWithWhereWithoutActionsInput>
    deleteMany?: Enumerable<Action_reportsScalarWhereInput>
  }

  export type Action_valuesUpdateManyWithoutActionsNestedInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutActionsInput>, Enumerable<Action_valuesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutActionsInput>
    upsert?: Enumerable<Action_valuesUpsertWithWhereUniqueWithoutActionsInput>
    createMany?: Action_valuesCreateManyActionsInputEnvelope
    set?: Enumerable<Action_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_valuesWhereUniqueInput>
    delete?: Enumerable<Action_valuesWhereUniqueInput>
    connect?: Enumerable<Action_valuesWhereUniqueInput>
    update?: Enumerable<Action_valuesUpdateWithWhereUniqueWithoutActionsInput>
    updateMany?: Enumerable<Action_valuesUpdateManyWithWhereWithoutActionsInput>
    deleteMany?: Enumerable<Action_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutActionsNestedInput = {
    create?: XOR<AccountsCreateWithoutActionsInput, AccountsUncheckedCreateWithoutActionsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutActionsInput
    upsert?: AccountsUpsertWithoutActionsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutActionsInput, AccountsUncheckedUpdateWithoutActionsInput>
  }

  export type PlacesUpdateOneWithoutActionsNestedInput = {
    create?: XOR<PlacesCreateWithoutActionsInput, PlacesUncheckedCreateWithoutActionsInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutActionsInput
    upsert?: PlacesUpsertWithoutActionsInput
    disconnect?: boolean
    delete?: boolean
    connect?: PlacesWhereUniqueInput
    update?: XOR<PlacesUpdateWithoutActionsInput, PlacesUncheckedUpdateWithoutActionsInput>
  }

  export type FilesUpdateManyWithoutActionsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutActionsInput>, Enumerable<FilesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutActionsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutActionsInput>
    createMany?: FilesCreateManyActionsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutActionsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutActionsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type Action_reportsUncheckedUpdateManyWithoutActionsNestedInput = {
    create?: XOR<Enumerable<Action_reportsCreateWithoutActionsInput>, Enumerable<Action_reportsUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_reportsCreateOrConnectWithoutActionsInput>
    upsert?: Enumerable<Action_reportsUpsertWithWhereUniqueWithoutActionsInput>
    createMany?: Action_reportsCreateManyActionsInputEnvelope
    set?: Enumerable<Action_reportsWhereUniqueInput>
    disconnect?: Enumerable<Action_reportsWhereUniqueInput>
    delete?: Enumerable<Action_reportsWhereUniqueInput>
    connect?: Enumerable<Action_reportsWhereUniqueInput>
    update?: Enumerable<Action_reportsUpdateWithWhereUniqueWithoutActionsInput>
    updateMany?: Enumerable<Action_reportsUpdateManyWithWhereWithoutActionsInput>
    deleteMany?: Enumerable<Action_reportsScalarWhereInput>
  }

  export type Action_valuesUncheckedUpdateManyWithoutActionsNestedInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutActionsInput>, Enumerable<Action_valuesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutActionsInput>
    upsert?: Enumerable<Action_valuesUpsertWithWhereUniqueWithoutActionsInput>
    createMany?: Action_valuesCreateManyActionsInputEnvelope
    set?: Enumerable<Action_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_valuesWhereUniqueInput>
    delete?: Enumerable<Action_valuesWhereUniqueInput>
    connect?: Enumerable<Action_valuesWhereUniqueInput>
    update?: Enumerable<Action_valuesUpdateWithWhereUniqueWithoutActionsInput>
    updateMany?: Enumerable<Action_valuesUpdateManyWithWhereWithoutActionsInput>
    deleteMany?: Enumerable<Action_valuesScalarWhereInput>
  }

  export type FilesUncheckedUpdateManyWithoutActionsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutActionsInput>, Enumerable<FilesUncheckedCreateWithoutActionsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutActionsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutActionsInput>
    createMany?: FilesCreateManyActionsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutActionsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutActionsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutCheck_taxaInput = {
    create?: XOR<AccountsCreateWithoutCheck_taxaInput, AccountsUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutCheck_taxaInput
    connect?: AccountsWhereUniqueInput
  }

  export type ChecksCreateNestedOneWithoutCheck_taxaInput = {
    create?: XOR<ChecksCreateWithoutCheck_taxaInput, ChecksUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: ChecksCreateOrConnectWithoutCheck_taxaInput
    connect?: ChecksWhereUniqueInput
  }

  export type TaxaCreateNestedOneWithoutCheck_taxaInput = {
    create?: XOR<TaxaCreateWithoutCheck_taxaInput, TaxaUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: TaxaCreateOrConnectWithoutCheck_taxaInput
    connect?: TaxaWhereUniqueInput
  }

  export type UnitsCreateNestedOneWithoutCheck_taxaInput = {
    create?: XOR<UnitsCreateWithoutCheck_taxaInput, UnitsUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutCheck_taxaInput
    connect?: UnitsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutCheck_taxaNestedInput = {
    create?: XOR<AccountsCreateWithoutCheck_taxaInput, AccountsUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutCheck_taxaInput
    upsert?: AccountsUpsertWithoutCheck_taxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutCheck_taxaInput, AccountsUncheckedUpdateWithoutCheck_taxaInput>
  }

  export type ChecksUpdateOneWithoutCheck_taxaNestedInput = {
    create?: XOR<ChecksCreateWithoutCheck_taxaInput, ChecksUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: ChecksCreateOrConnectWithoutCheck_taxaInput
    upsert?: ChecksUpsertWithoutCheck_taxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: ChecksWhereUniqueInput
    update?: XOR<ChecksUpdateWithoutCheck_taxaInput, ChecksUncheckedUpdateWithoutCheck_taxaInput>
  }

  export type TaxaUpdateOneWithoutCheck_taxaNestedInput = {
    create?: XOR<TaxaCreateWithoutCheck_taxaInput, TaxaUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: TaxaCreateOrConnectWithoutCheck_taxaInput
    upsert?: TaxaUpsertWithoutCheck_taxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: TaxaWhereUniqueInput
    update?: XOR<TaxaUpdateWithoutCheck_taxaInput, TaxaUncheckedUpdateWithoutCheck_taxaInput>
  }

  export type UnitsUpdateOneWithoutCheck_taxaNestedInput = {
    create?: XOR<UnitsCreateWithoutCheck_taxaInput, UnitsUncheckedCreateWithoutCheck_taxaInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutCheck_taxaInput
    upsert?: UnitsUpsertWithoutCheck_taxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: UnitsWhereUniqueInput
    update?: XOR<UnitsUpdateWithoutCheck_taxaInput, UnitsUncheckedUpdateWithoutCheck_taxaInput>
  }

  export type AccountsCreateNestedOneWithoutCheck_valuesInput = {
    create?: XOR<AccountsCreateWithoutCheck_valuesInput, AccountsUncheckedCreateWithoutCheck_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutCheck_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ChecksCreateNestedOneWithoutCheck_valuesInput = {
    create?: XOR<ChecksCreateWithoutCheck_valuesInput, ChecksUncheckedCreateWithoutCheck_valuesInput>
    connectOrCreate?: ChecksCreateOrConnectWithoutCheck_valuesInput
    connect?: ChecksWhereUniqueInput
  }

  export type UnitsCreateNestedOneWithoutCheck_valuesInput = {
    create?: XOR<UnitsCreateWithoutCheck_valuesInput, UnitsUncheckedCreateWithoutCheck_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutCheck_valuesInput
    connect?: UnitsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutCheck_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutCheck_valuesInput, AccountsUncheckedCreateWithoutCheck_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutCheck_valuesInput
    upsert?: AccountsUpsertWithoutCheck_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutCheck_valuesInput, AccountsUncheckedUpdateWithoutCheck_valuesInput>
  }

  export type ChecksUpdateOneWithoutCheck_valuesNestedInput = {
    create?: XOR<ChecksCreateWithoutCheck_valuesInput, ChecksUncheckedCreateWithoutCheck_valuesInput>
    connectOrCreate?: ChecksCreateOrConnectWithoutCheck_valuesInput
    upsert?: ChecksUpsertWithoutCheck_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ChecksWhereUniqueInput
    update?: XOR<ChecksUpdateWithoutCheck_valuesInput, ChecksUncheckedUpdateWithoutCheck_valuesInput>
  }

  export type UnitsUpdateOneWithoutCheck_valuesNestedInput = {
    create?: XOR<UnitsCreateWithoutCheck_valuesInput, UnitsUncheckedCreateWithoutCheck_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutCheck_valuesInput
    upsert?: UnitsUpsertWithoutCheck_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: UnitsWhereUniqueInput
    update?: XOR<UnitsUpdateWithoutCheck_valuesInput, UnitsUncheckedUpdateWithoutCheck_valuesInput>
  }

  export type Check_taxaCreateNestedManyWithoutChecksInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutChecksInput>, Enumerable<Check_taxaUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutChecksInput>
    createMany?: Check_taxaCreateManyChecksInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Check_valuesCreateNestedManyWithoutChecksInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutChecksInput>, Enumerable<Check_valuesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutChecksInput>
    createMany?: Check_valuesCreateManyChecksInputEnvelope
    connect?: Enumerable<Check_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutChecksInput = {
    create?: XOR<AccountsCreateWithoutChecksInput, AccountsUncheckedCreateWithoutChecksInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutChecksInput
    connect?: AccountsWhereUniqueInput
  }

  export type PlacesCreateNestedOneWithoutChecksInput = {
    create?: XOR<PlacesCreateWithoutChecksInput, PlacesUncheckedCreateWithoutChecksInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutChecksInput
    connect?: PlacesWhereUniqueInput
  }

  export type FilesCreateNestedManyWithoutChecksInput = {
    create?: XOR<Enumerable<FilesCreateWithoutChecksInput>, Enumerable<FilesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutChecksInput>
    createMany?: FilesCreateManyChecksInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type Check_taxaUncheckedCreateNestedManyWithoutChecksInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutChecksInput>, Enumerable<Check_taxaUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutChecksInput>
    createMany?: Check_taxaCreateManyChecksInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Check_valuesUncheckedCreateNestedManyWithoutChecksInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutChecksInput>, Enumerable<Check_valuesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutChecksInput>
    createMany?: Check_valuesCreateManyChecksInputEnvelope
    connect?: Enumerable<Check_valuesWhereUniqueInput>
  }

  export type FilesUncheckedCreateNestedManyWithoutChecksInput = {
    create?: XOR<Enumerable<FilesCreateWithoutChecksInput>, Enumerable<FilesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutChecksInput>
    createMany?: FilesCreateManyChecksInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type Check_taxaUpdateManyWithoutChecksNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutChecksInput>, Enumerable<Check_taxaUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutChecksInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutChecksInput>
    createMany?: Check_taxaCreateManyChecksInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutChecksInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutChecksInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Check_valuesUpdateManyWithoutChecksNestedInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutChecksInput>, Enumerable<Check_valuesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutChecksInput>
    upsert?: Enumerable<Check_valuesUpsertWithWhereUniqueWithoutChecksInput>
    createMany?: Check_valuesCreateManyChecksInputEnvelope
    set?: Enumerable<Check_valuesWhereUniqueInput>
    disconnect?: Enumerable<Check_valuesWhereUniqueInput>
    delete?: Enumerable<Check_valuesWhereUniqueInput>
    connect?: Enumerable<Check_valuesWhereUniqueInput>
    update?: Enumerable<Check_valuesUpdateWithWhereUniqueWithoutChecksInput>
    updateMany?: Enumerable<Check_valuesUpdateManyWithWhereWithoutChecksInput>
    deleteMany?: Enumerable<Check_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutChecksNestedInput = {
    create?: XOR<AccountsCreateWithoutChecksInput, AccountsUncheckedCreateWithoutChecksInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutChecksInput
    upsert?: AccountsUpsertWithoutChecksInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutChecksInput, AccountsUncheckedUpdateWithoutChecksInput>
  }

  export type PlacesUpdateOneWithoutChecksNestedInput = {
    create?: XOR<PlacesCreateWithoutChecksInput, PlacesUncheckedCreateWithoutChecksInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutChecksInput
    upsert?: PlacesUpsertWithoutChecksInput
    disconnect?: boolean
    delete?: boolean
    connect?: PlacesWhereUniqueInput
    update?: XOR<PlacesUpdateWithoutChecksInput, PlacesUncheckedUpdateWithoutChecksInput>
  }

  export type FilesUpdateManyWithoutChecksNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutChecksInput>, Enumerable<FilesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutChecksInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutChecksInput>
    createMany?: FilesCreateManyChecksInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutChecksInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutChecksInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type Check_taxaUncheckedUpdateManyWithoutChecksNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutChecksInput>, Enumerable<Check_taxaUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutChecksInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutChecksInput>
    createMany?: Check_taxaCreateManyChecksInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutChecksInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutChecksInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Check_valuesUncheckedUpdateManyWithoutChecksNestedInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutChecksInput>, Enumerable<Check_valuesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutChecksInput>
    upsert?: Enumerable<Check_valuesUpsertWithWhereUniqueWithoutChecksInput>
    createMany?: Check_valuesCreateManyChecksInputEnvelope
    set?: Enumerable<Check_valuesWhereUniqueInput>
    disconnect?: Enumerable<Check_valuesWhereUniqueInput>
    delete?: Enumerable<Check_valuesWhereUniqueInput>
    connect?: Enumerable<Check_valuesWhereUniqueInput>
    update?: Enumerable<Check_valuesUpdateWithWhereUniqueWithoutChecksInput>
    updateMany?: Enumerable<Check_valuesUpdateManyWithWhereWithoutChecksInput>
    deleteMany?: Enumerable<Check_valuesScalarWhereInput>
  }

  export type FilesUncheckedUpdateManyWithoutChecksNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutChecksInput>, Enumerable<FilesUncheckedCreateWithoutChecksInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutChecksInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutChecksInput>
    createMany?: FilesCreateManyChecksInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutChecksInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutChecksInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type FieldsCreateNestedManyWithoutField_typesInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutField_typesInput>, Enumerable<FieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutField_typesInput>
    createMany?: FieldsCreateManyField_typesInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type Widgets_for_fieldsCreateNestedManyWithoutField_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type FieldsUncheckedCreateNestedManyWithoutField_typesInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutField_typesInput>, Enumerable<FieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutField_typesInput>
    createMany?: FieldsCreateManyField_typesInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type Widgets_for_fieldsUncheckedCreateNestedManyWithoutField_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type FieldsUpdateManyWithoutField_typesNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutField_typesInput>, Enumerable<FieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutField_typesInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutField_typesInput>
    createMany?: FieldsCreateManyField_typesInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutField_typesInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutField_typesInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type Widgets_for_fieldsUpdateManyWithoutField_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutField_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutField_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type FieldsUncheckedUpdateManyWithoutField_typesNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutField_typesInput>, Enumerable<FieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutField_typesInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutField_typesInput>
    createMany?: FieldsCreateManyField_typesInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutField_typesInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutField_typesInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type Widgets_for_fieldsUncheckedUpdateManyWithoutField_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutField_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutField_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutFieldsInput = {
    create?: XOR<AccountsCreateWithoutFieldsInput, AccountsUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutFieldsInput
    connect?: AccountsWhereUniqueInput
  }

  export type Field_typesCreateNestedOneWithoutFieldsInput = {
    create?: XOR<Field_typesCreateWithoutFieldsInput, Field_typesUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: Field_typesCreateOrConnectWithoutFieldsInput
    connect?: Field_typesWhereUniqueInput
  }

  export type ListsCreateNestedOneWithoutFieldsInput = {
    create?: XOR<ListsCreateWithoutFieldsInput, ListsUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: ListsCreateOrConnectWithoutFieldsInput
    connect?: ListsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutFieldsInput = {
    create?: XOR<ProjectsCreateWithoutFieldsInput, ProjectsUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutFieldsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type Widget_typesCreateNestedOneWithoutFieldsInput = {
    create?: XOR<Widget_typesCreateWithoutFieldsInput, Widget_typesUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: Widget_typesCreateOrConnectWithoutFieldsInput
    connect?: Widget_typesWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutFieldsNestedInput = {
    create?: XOR<AccountsCreateWithoutFieldsInput, AccountsUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutFieldsInput
    upsert?: AccountsUpsertWithoutFieldsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutFieldsInput, AccountsUncheckedUpdateWithoutFieldsInput>
  }

  export type Field_typesUpdateOneWithoutFieldsNestedInput = {
    create?: XOR<Field_typesCreateWithoutFieldsInput, Field_typesUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: Field_typesCreateOrConnectWithoutFieldsInput
    upsert?: Field_typesUpsertWithoutFieldsInput
    disconnect?: boolean
    delete?: boolean
    connect?: Field_typesWhereUniqueInput
    update?: XOR<Field_typesUpdateWithoutFieldsInput, Field_typesUncheckedUpdateWithoutFieldsInput>
  }

  export type ListsUpdateOneWithoutFieldsNestedInput = {
    create?: XOR<ListsCreateWithoutFieldsInput, ListsUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: ListsCreateOrConnectWithoutFieldsInput
    upsert?: ListsUpsertWithoutFieldsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ListsWhereUniqueInput
    update?: XOR<ListsUpdateWithoutFieldsInput, ListsUncheckedUpdateWithoutFieldsInput>
  }

  export type ProjectsUpdateOneWithoutFieldsNestedInput = {
    create?: XOR<ProjectsCreateWithoutFieldsInput, ProjectsUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutFieldsInput
    upsert?: ProjectsUpsertWithoutFieldsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutFieldsInput, ProjectsUncheckedUpdateWithoutFieldsInput>
  }

  export type Widget_typesUpdateOneWithoutFieldsNestedInput = {
    create?: XOR<Widget_typesCreateWithoutFieldsInput, Widget_typesUncheckedCreateWithoutFieldsInput>
    connectOrCreate?: Widget_typesCreateOrConnectWithoutFieldsInput
    upsert?: Widget_typesUpsertWithoutFieldsInput
    disconnect?: boolean
    delete?: boolean
    connect?: Widget_typesWhereUniqueInput
    update?: XOR<Widget_typesUpdateWithoutFieldsInput, Widget_typesUncheckedUpdateWithoutFieldsInput>
  }

  export type AccountsCreateNestedOneWithoutFilesInput = {
    create?: XOR<AccountsCreateWithoutFilesInput, AccountsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutFilesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ActionsCreateNestedOneWithoutFilesInput = {
    create?: XOR<ActionsCreateWithoutFilesInput, ActionsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: ActionsCreateOrConnectWithoutFilesInput
    connect?: ActionsWhereUniqueInput
  }

  export type ChecksCreateNestedOneWithoutFilesInput = {
    create?: XOR<ChecksCreateWithoutFilesInput, ChecksUncheckedCreateWithoutFilesInput>
    connectOrCreate?: ChecksCreateOrConnectWithoutFilesInput
    connect?: ChecksWhereUniqueInput
  }

  export type PlacesCreateNestedOneWithoutFilesInput = {
    create?: XOR<PlacesCreateWithoutFilesInput, PlacesUncheckedCreateWithoutFilesInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutFilesInput
    connect?: PlacesWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutFilesInput = {
    create?: XOR<ProjectsCreateWithoutFilesInput, ProjectsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutFilesInput
    connect?: ProjectsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutFilesInput = {
    create?: XOR<SubprojectsCreateWithoutFilesInput, SubprojectsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutFilesInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutFilesNestedInput = {
    create?: XOR<AccountsCreateWithoutFilesInput, AccountsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutFilesInput
    upsert?: AccountsUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutFilesInput, AccountsUncheckedUpdateWithoutFilesInput>
  }

  export type ActionsUpdateOneWithoutFilesNestedInput = {
    create?: XOR<ActionsCreateWithoutFilesInput, ActionsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: ActionsCreateOrConnectWithoutFilesInput
    upsert?: ActionsUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ActionsWhereUniqueInput
    update?: XOR<ActionsUpdateWithoutFilesInput, ActionsUncheckedUpdateWithoutFilesInput>
  }

  export type ChecksUpdateOneWithoutFilesNestedInput = {
    create?: XOR<ChecksCreateWithoutFilesInput, ChecksUncheckedCreateWithoutFilesInput>
    connectOrCreate?: ChecksCreateOrConnectWithoutFilesInput
    upsert?: ChecksUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ChecksWhereUniqueInput
    update?: XOR<ChecksUpdateWithoutFilesInput, ChecksUncheckedUpdateWithoutFilesInput>
  }

  export type PlacesUpdateOneWithoutFilesNestedInput = {
    create?: XOR<PlacesCreateWithoutFilesInput, PlacesUncheckedCreateWithoutFilesInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutFilesInput
    upsert?: PlacesUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: PlacesWhereUniqueInput
    update?: XOR<PlacesUpdateWithoutFilesInput, PlacesUncheckedUpdateWithoutFilesInput>
  }

  export type ProjectsUpdateOneWithoutFilesNestedInput = {
    create?: XOR<ProjectsCreateWithoutFilesInput, ProjectsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutFilesInput
    upsert?: ProjectsUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutFilesInput, ProjectsUncheckedUpdateWithoutFilesInput>
  }

  export type SubprojectsUpdateOneWithoutFilesNestedInput = {
    create?: XOR<SubprojectsCreateWithoutFilesInput, SubprojectsUncheckedCreateWithoutFilesInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutFilesInput
    upsert?: SubprojectsUpsertWithoutFilesInput
    disconnect?: boolean
    delete?: boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<SubprojectsUpdateWithoutFilesInput, SubprojectsUncheckedUpdateWithoutFilesInput>
  }

  export type AccountsCreateNestedOneWithoutGoal_report_valuesInput = {
    create?: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_report_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput = {
    create?: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: Goal_reportsCreateOrConnectWithoutGoal_report_valuesInput
    connect?: Goal_reportsWhereUniqueInput
  }

  export type UnitsCreateNestedOneWithoutGoal_report_valuesInput = {
    create?: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutGoal_report_valuesInput
    connect?: UnitsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutGoal_report_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_report_valuesInput
    upsert?: AccountsUpsertWithoutGoal_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutGoal_report_valuesInput, AccountsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput = {
    create?: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: Goal_reportsCreateOrConnectWithoutGoal_report_valuesInput
    upsert?: Goal_reportsUpsertWithoutGoal_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: Goal_reportsWhereUniqueInput
    update?: XOR<Goal_reportsUpdateWithoutGoal_report_valuesInput, Goal_reportsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type UnitsUpdateOneWithoutGoal_report_valuesNestedInput = {
    create?: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutGoal_report_valuesInput
    upsert?: UnitsUpsertWithoutGoal_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: UnitsWhereUniqueInput
    update?: XOR<UnitsUpdateWithoutGoal_report_valuesInput, UnitsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutGoal_reportsInput = {
    create?: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_reportsInput
    connect?: AccountsWhereUniqueInput
  }

  export type GoalsCreateNestedOneWithoutGoal_reportsInput = {
    create?: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: GoalsCreateOrConnectWithoutGoal_reportsInput
    connect?: GoalsWhereUniqueInput
  }

  export type Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutGoal_reportsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutGoal_reportsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutGoal_reportsNestedInput = {
    create?: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_reportsInput
    upsert?: AccountsUpsertWithoutGoal_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutGoal_reportsInput, AccountsUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type GoalsUpdateOneWithoutGoal_reportsNestedInput = {
    create?: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: GoalsCreateOrConnectWithoutGoal_reportsInput
    upsert?: GoalsUpsertWithoutGoal_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: GoalsWhereUniqueInput
    update?: XOR<GoalsUpdateWithoutGoal_reportsInput, GoalsUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutGoal_reportsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutGoal_reportsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Goal_reportsCreateNestedManyWithoutGoalsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutGoalsInput = {
    create?: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoalsInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutGoalsInput = {
    create?: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGoalsInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type Goal_reportsUpdateManyWithoutGoalsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutGoalsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutGoalsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutGoalsNestedInput = {
    create?: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoalsInput
    upsert?: AccountsUpsertWithoutGoalsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutGoalsInput, AccountsUncheckedUpdateWithoutGoalsInput>
  }

  export type SubprojectsUpdateOneWithoutGoalsNestedInput = {
    create?: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGoalsInput
    upsert?: SubprojectsUpsertWithoutGoalsInput
    disconnect?: boolean
    delete?: boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<SubprojectsUpdateWithoutGoalsInput, SubprojectsUncheckedUpdateWithoutGoalsInput>
  }

  export type Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutGoalsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutGoalsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutList_valuesInput = {
    create?: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutList_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ListsCreateNestedOneWithoutList_valuesInput = {
    create?: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: ListsCreateOrConnectWithoutList_valuesInput
    connect?: ListsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutList_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutList_valuesInput
    upsert?: AccountsUpsertWithoutList_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutList_valuesInput, AccountsUncheckedUpdateWithoutList_valuesInput>
  }

  export type ListsUpdateOneWithoutList_valuesNestedInput = {
    create?: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: ListsCreateOrConnectWithoutList_valuesInput
    upsert?: ListsUpsertWithoutList_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ListsWhereUniqueInput
    update?: XOR<ListsUpdateWithoutList_valuesInput, ListsUncheckedUpdateWithoutList_valuesInput>
  }

  export type FieldsCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutListsInput>, Enumerable<FieldsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutListsInput>
    createMany?: FieldsCreateManyListsInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type List_valuesCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutListsInput = {
    create?: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutListsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutListsInput = {
    create?: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutListsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type UnitsCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type FieldsUncheckedCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutListsInput>, Enumerable<FieldsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutListsInput>
    createMany?: FieldsCreateManyListsInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type List_valuesUncheckedCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type UnitsUncheckedCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type FieldsUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutListsInput>, Enumerable<FieldsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutListsInput>
    createMany?: FieldsCreateManyListsInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type List_valuesUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutListsNestedInput = {
    create?: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutListsInput
    upsert?: AccountsUpsertWithoutListsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutListsInput, AccountsUncheckedUpdateWithoutListsInput>
  }

  export type ProjectsUpdateOneWithoutListsNestedInput = {
    create?: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutListsInput
    upsert?: ProjectsUpsertWithoutListsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutListsInput, ProjectsUncheckedUpdateWithoutListsInput>
  }

  export type UnitsUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type FieldsUncheckedUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutListsInput>, Enumerable<FieldsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutListsInput>
    createMany?: FieldsCreateManyListsInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type List_valuesUncheckedUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type UnitsUncheckedUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type User_messagesCreateNestedManyWithoutMessagesInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type User_messagesUncheckedCreateNestedManyWithoutMessagesInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type User_messagesUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutMessagesInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutMessagesInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type User_messagesUncheckedUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutMessagesInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutMessagesInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutObservation_sourcesInput = {
    create?: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutObservation_sourcesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutObservation_sourcesInput = {
    create?: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutObservation_sourcesInput
    connect?: ProjectsWhereUniqueInput
  }

  export type ObservationsCreateNestedManyWithoutObservation_sourcesInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutObservation_sourcesInput>, Enumerable<ObservationsUncheckedCreateWithoutObservation_sourcesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutObservation_sourcesInput>
    createMany?: ObservationsCreateManyObservation_sourcesInputEnvelope
    connect?: Enumerable<ObservationsWhereUniqueInput>
  }

  export type ObservationsUncheckedCreateNestedManyWithoutObservation_sourcesInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutObservation_sourcesInput>, Enumerable<ObservationsUncheckedCreateWithoutObservation_sourcesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutObservation_sourcesInput>
    createMany?: ObservationsCreateManyObservation_sourcesInputEnvelope
    connect?: Enumerable<ObservationsWhereUniqueInput>
  }

  export type AccountsUpdateOneWithoutObservation_sourcesNestedInput = {
    create?: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutObservation_sourcesInput
    upsert?: AccountsUpsertWithoutObservation_sourcesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutObservation_sourcesInput, AccountsUncheckedUpdateWithoutObservation_sourcesInput>
  }

  export type ProjectsUpdateOneWithoutObservation_sourcesNestedInput = {
    create?: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutObservation_sourcesInput
    upsert?: ProjectsUpsertWithoutObservation_sourcesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutObservation_sourcesInput, ProjectsUncheckedUpdateWithoutObservation_sourcesInput>
  }

  export type ObservationsUpdateManyWithoutObservation_sourcesNestedInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutObservation_sourcesInput>, Enumerable<ObservationsUncheckedCreateWithoutObservation_sourcesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutObservation_sourcesInput>
    upsert?: Enumerable<ObservationsUpsertWithWhereUniqueWithoutObservation_sourcesInput>
    createMany?: ObservationsCreateManyObservation_sourcesInputEnvelope
    set?: Enumerable<ObservationsWhereUniqueInput>
    disconnect?: Enumerable<ObservationsWhereUniqueInput>
    delete?: Enumerable<ObservationsWhereUniqueInput>
    connect?: Enumerable<ObservationsWhereUniqueInput>
    update?: Enumerable<ObservationsUpdateWithWhereUniqueWithoutObservation_sourcesInput>
    updateMany?: Enumerable<ObservationsUpdateManyWithWhereWithoutObservation_sourcesInput>
    deleteMany?: Enumerable<ObservationsScalarWhereInput>
  }

  export type ObservationsUncheckedUpdateManyWithoutObservation_sourcesNestedInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutObservation_sourcesInput>, Enumerable<ObservationsUncheckedCreateWithoutObservation_sourcesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutObservation_sourcesInput>
    upsert?: Enumerable<ObservationsUpsertWithWhereUniqueWithoutObservation_sourcesInput>
    createMany?: ObservationsCreateManyObservation_sourcesInputEnvelope
    set?: Enumerable<ObservationsWhereUniqueInput>
    disconnect?: Enumerable<ObservationsWhereUniqueInput>
    delete?: Enumerable<ObservationsWhereUniqueInput>
    connect?: Enumerable<ObservationsWhereUniqueInput>
    update?: Enumerable<ObservationsUpdateWithWhereUniqueWithoutObservation_sourcesInput>
    updateMany?: Enumerable<ObservationsUpdateManyWithWhereWithoutObservation_sourcesInput>
    deleteMany?: Enumerable<ObservationsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutObservationsInput = {
    create?: XOR<AccountsCreateWithoutObservationsInput, AccountsUncheckedCreateWithoutObservationsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutObservationsInput
    connect?: AccountsWhereUniqueInput
  }

  export type Observation_sourcesCreateNestedOneWithoutObservationsInput = {
    create?: XOR<Observation_sourcesCreateWithoutObservationsInput, Observation_sourcesUncheckedCreateWithoutObservationsInput>
    connectOrCreate?: Observation_sourcesCreateOrConnectWithoutObservationsInput
    connect?: Observation_sourcesWhereUniqueInput
  }

  export type PlacesCreateNestedOneWithoutObservationsInput = {
    create?: XOR<PlacesCreateWithoutObservationsInput, PlacesUncheckedCreateWithoutObservationsInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutObservationsInput
    connect?: PlacesWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutObservationsNestedInput = {
    create?: XOR<AccountsCreateWithoutObservationsInput, AccountsUncheckedCreateWithoutObservationsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutObservationsInput
    upsert?: AccountsUpsertWithoutObservationsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutObservationsInput, AccountsUncheckedUpdateWithoutObservationsInput>
  }

  export type Observation_sourcesUpdateOneWithoutObservationsNestedInput = {
    create?: XOR<Observation_sourcesCreateWithoutObservationsInput, Observation_sourcesUncheckedCreateWithoutObservationsInput>
    connectOrCreate?: Observation_sourcesCreateOrConnectWithoutObservationsInput
    upsert?: Observation_sourcesUpsertWithoutObservationsInput
    disconnect?: boolean
    delete?: boolean
    connect?: Observation_sourcesWhereUniqueInput
    update?: XOR<Observation_sourcesUpdateWithoutObservationsInput, Observation_sourcesUncheckedUpdateWithoutObservationsInput>
  }

  export type PlacesUpdateOneWithoutObservationsNestedInput = {
    create?: XOR<PlacesCreateWithoutObservationsInput, PlacesUncheckedCreateWithoutObservationsInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutObservationsInput
    upsert?: PlacesUpsertWithoutObservationsInput
    disconnect?: boolean
    delete?: boolean
    connect?: PlacesWhereUniqueInput
    update?: XOR<PlacesUpdateWithoutObservationsInput, PlacesUncheckedUpdateWithoutObservationsInput>
  }

  export type AccountsCreateNestedOneWithoutPersonsInput = {
    create?: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPersonsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutPersonsInput = {
    create?: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPersonsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutPersonsNestedInput = {
    create?: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPersonsInput
    upsert?: AccountsUpsertWithoutPersonsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutPersonsInput, AccountsUncheckedUpdateWithoutPersonsInput>
  }

  export type ProjectsUpdateOneWithoutPersonsNestedInput = {
    create?: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPersonsInput
    upsert?: ProjectsUpsertWithoutPersonsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutPersonsInput, ProjectsUncheckedUpdateWithoutPersonsInput>
  }

  export type AccountsCreateNestedOneWithoutPlace_levelsInput = {
    create?: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_levelsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutPlace_levelsInput = {
    create?: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPlace_levelsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutPlace_levelsNestedInput = {
    create?: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_levelsInput
    upsert?: AccountsUpsertWithoutPlace_levelsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutPlace_levelsInput, AccountsUncheckedUpdateWithoutPlace_levelsInput>
  }

  export type ProjectsUpdateOneWithoutPlace_levelsNestedInput = {
    create?: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPlace_levelsInput
    upsert?: ProjectsUpsertWithoutPlace_levelsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutPlace_levelsInput, ProjectsUncheckedUpdateWithoutPlace_levelsInput>
  }

  export type AccountsCreateNestedOneWithoutPlace_report_valuesInput = {
    create?: XOR<AccountsCreateWithoutPlace_report_valuesInput, AccountsUncheckedCreateWithoutPlace_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_report_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type Place_reportsCreateNestedOneWithoutPlace_report_valuesInput = {
    create?: XOR<Place_reportsCreateWithoutPlace_report_valuesInput, Place_reportsUncheckedCreateWithoutPlace_report_valuesInput>
    connectOrCreate?: Place_reportsCreateOrConnectWithoutPlace_report_valuesInput
    connect?: Place_reportsWhereUniqueInput
  }

  export type UnitsCreateNestedOneWithoutPlace_report_valuesInput = {
    create?: XOR<UnitsCreateWithoutPlace_report_valuesInput, UnitsUncheckedCreateWithoutPlace_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutPlace_report_valuesInput
    connect?: UnitsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutPlace_report_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutPlace_report_valuesInput, AccountsUncheckedCreateWithoutPlace_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_report_valuesInput
    upsert?: AccountsUpsertWithoutPlace_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutPlace_report_valuesInput, AccountsUncheckedUpdateWithoutPlace_report_valuesInput>
  }

  export type Place_reportsUpdateOneWithoutPlace_report_valuesNestedInput = {
    create?: XOR<Place_reportsCreateWithoutPlace_report_valuesInput, Place_reportsUncheckedCreateWithoutPlace_report_valuesInput>
    connectOrCreate?: Place_reportsCreateOrConnectWithoutPlace_report_valuesInput
    upsert?: Place_reportsUpsertWithoutPlace_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: Place_reportsWhereUniqueInput
    update?: XOR<Place_reportsUpdateWithoutPlace_report_valuesInput, Place_reportsUncheckedUpdateWithoutPlace_report_valuesInput>
  }

  export type UnitsUpdateOneWithoutPlace_report_valuesNestedInput = {
    create?: XOR<UnitsCreateWithoutPlace_report_valuesInput, UnitsUncheckedCreateWithoutPlace_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutPlace_report_valuesInput
    upsert?: UnitsUpsertWithoutPlace_report_valuesInput
    disconnect?: boolean
    delete?: boolean
    connect?: UnitsWhereUniqueInput
    update?: XOR<UnitsUpdateWithoutPlace_report_valuesInput, UnitsUncheckedUpdateWithoutPlace_report_valuesInput>
  }

  export type Place_report_valuesCreateNestedManyWithoutPlace_reportsInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutPlace_reportsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutPlace_reportsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutPlace_reportsInput>
    createMany?: Place_report_valuesCreateManyPlace_reportsInputEnvelope
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutPlace_reportsInput = {
    create?: XOR<AccountsCreateWithoutPlace_reportsInput, AccountsUncheckedCreateWithoutPlace_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_reportsInput
    connect?: AccountsWhereUniqueInput
  }

  export type PlacesCreateNestedOneWithoutPlace_reportsInput = {
    create?: XOR<PlacesCreateWithoutPlace_reportsInput, PlacesUncheckedCreateWithoutPlace_reportsInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutPlace_reportsInput
    connect?: PlacesWhereUniqueInput
  }

  export type Place_report_valuesUncheckedCreateNestedManyWithoutPlace_reportsInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutPlace_reportsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutPlace_reportsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutPlace_reportsInput>
    createMany?: Place_report_valuesCreateManyPlace_reportsInputEnvelope
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
  }

  export type Place_report_valuesUpdateManyWithoutPlace_reportsNestedInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutPlace_reportsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutPlace_reportsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutPlace_reportsInput>
    upsert?: Enumerable<Place_report_valuesUpsertWithWhereUniqueWithoutPlace_reportsInput>
    createMany?: Place_report_valuesCreateManyPlace_reportsInputEnvelope
    set?: Enumerable<Place_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Place_report_valuesWhereUniqueInput>
    delete?: Enumerable<Place_report_valuesWhereUniqueInput>
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
    update?: Enumerable<Place_report_valuesUpdateWithWhereUniqueWithoutPlace_reportsInput>
    updateMany?: Enumerable<Place_report_valuesUpdateManyWithWhereWithoutPlace_reportsInput>
    deleteMany?: Enumerable<Place_report_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutPlace_reportsNestedInput = {
    create?: XOR<AccountsCreateWithoutPlace_reportsInput, AccountsUncheckedCreateWithoutPlace_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_reportsInput
    upsert?: AccountsUpsertWithoutPlace_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutPlace_reportsInput, AccountsUncheckedUpdateWithoutPlace_reportsInput>
  }

  export type PlacesUpdateOneWithoutPlace_reportsNestedInput = {
    create?: XOR<PlacesCreateWithoutPlace_reportsInput, PlacesUncheckedCreateWithoutPlace_reportsInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutPlace_reportsInput
    upsert?: PlacesUpsertWithoutPlace_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: PlacesWhereUniqueInput
    update?: XOR<PlacesUpdateWithoutPlace_reportsInput, PlacesUncheckedUpdateWithoutPlace_reportsInput>
  }

  export type Place_report_valuesUncheckedUpdateManyWithoutPlace_reportsNestedInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutPlace_reportsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutPlace_reportsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutPlace_reportsInput>
    upsert?: Enumerable<Place_report_valuesUpsertWithWhereUniqueWithoutPlace_reportsInput>
    createMany?: Place_report_valuesCreateManyPlace_reportsInputEnvelope
    set?: Enumerable<Place_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Place_report_valuesWhereUniqueInput>
    delete?: Enumerable<Place_report_valuesWhereUniqueInput>
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
    update?: Enumerable<Place_report_valuesUpdateWithWhereUniqueWithoutPlace_reportsInput>
    updateMany?: Enumerable<Place_report_valuesUpdateManyWithWhereWithoutPlace_reportsInput>
    deleteMany?: Enumerable<Place_report_valuesScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutPlace_usersInput = {
    create?: XOR<AccountsCreateWithoutPlace_usersInput, AccountsUncheckedCreateWithoutPlace_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_usersInput
    connect?: AccountsWhereUniqueInput
  }

  export type PlacesCreateNestedOneWithoutPlace_usersInput = {
    create?: XOR<PlacesCreateWithoutPlace_usersInput, PlacesUncheckedCreateWithoutPlace_usersInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutPlace_usersInput
    connect?: PlacesWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutPlace_usersInput = {
    create?: XOR<UsersCreateWithoutPlace_usersInput, UsersUncheckedCreateWithoutPlace_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutPlace_usersInput
    connect?: UsersWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutPlace_usersNestedInput = {
    create?: XOR<AccountsCreateWithoutPlace_usersInput, AccountsUncheckedCreateWithoutPlace_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_usersInput
    upsert?: AccountsUpsertWithoutPlace_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutPlace_usersInput, AccountsUncheckedUpdateWithoutPlace_usersInput>
  }

  export type PlacesUpdateOneWithoutPlace_usersNestedInput = {
    create?: XOR<PlacesCreateWithoutPlace_usersInput, PlacesUncheckedCreateWithoutPlace_usersInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutPlace_usersInput
    upsert?: PlacesUpsertWithoutPlace_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: PlacesWhereUniqueInput
    update?: XOR<PlacesUpdateWithoutPlace_usersInput, PlacesUncheckedUpdateWithoutPlace_usersInput>
  }

  export type UsersUpdateOneWithoutPlace_usersNestedInput = {
    create?: XOR<UsersCreateWithoutPlace_usersInput, UsersUncheckedCreateWithoutPlace_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutPlace_usersInput
    upsert?: UsersUpsertWithoutPlace_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<UsersUpdateWithoutPlace_usersInput, UsersUncheckedUpdateWithoutPlace_usersInput>
  }

  export type ActionsCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutPlacesInput>, Enumerable<ActionsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutPlacesInput>
    createMany?: ActionsCreateManyPlacesInputEnvelope
    connect?: Enumerable<ActionsWhereUniqueInput>
  }

  export type ChecksCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutPlacesInput>, Enumerable<ChecksUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutPlacesInput>
    createMany?: ChecksCreateManyPlacesInputEnvelope
    connect?: Enumerable<ChecksWhereUniqueInput>
  }

  export type FilesCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<FilesCreateWithoutPlacesInput>, Enumerable<FilesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutPlacesInput>
    createMany?: FilesCreateManyPlacesInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type ObservationsCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutPlacesInput>, Enumerable<ObservationsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutPlacesInput>
    createMany?: ObservationsCreateManyPlacesInputEnvelope
    connect?: Enumerable<ObservationsWhereUniqueInput>
  }

  export type Place_reportsCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutPlacesInput>, Enumerable<Place_reportsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutPlacesInput>
    createMany?: Place_reportsCreateManyPlacesInputEnvelope
    connect?: Enumerable<Place_reportsWhereUniqueInput>
  }

  export type Place_usersCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutPlacesInput>, Enumerable<Place_usersUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutPlacesInput>
    createMany?: Place_usersCreateManyPlacesInputEnvelope
    connect?: Enumerable<Place_usersWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutPlacesInput = {
    create?: XOR<AccountsCreateWithoutPlacesInput, AccountsUncheckedCreateWithoutPlacesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlacesInput
    connect?: AccountsWhereUniqueInput
  }

  export type PlacesCreateNestedOneWithoutOther_placesInput = {
    create?: XOR<PlacesCreateWithoutOther_placesInput, PlacesUncheckedCreateWithoutOther_placesInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutOther_placesInput
    connect?: PlacesWhereUniqueInput
  }

  export type PlacesCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutPlacesInput>, Enumerable<PlacesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutPlacesInput>
    createMany?: PlacesCreateManyPlacesInputEnvelope
    connect?: Enumerable<PlacesWhereUniqueInput>
  }

  export type SubprojectsCreateNestedOneWithoutPlacesInput = {
    create?: XOR<SubprojectsCreateWithoutPlacesInput, SubprojectsUncheckedCreateWithoutPlacesInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutPlacesInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type ActionsUncheckedCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutPlacesInput>, Enumerable<ActionsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutPlacesInput>
    createMany?: ActionsCreateManyPlacesInputEnvelope
    connect?: Enumerable<ActionsWhereUniqueInput>
  }

  export type ChecksUncheckedCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutPlacesInput>, Enumerable<ChecksUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutPlacesInput>
    createMany?: ChecksCreateManyPlacesInputEnvelope
    connect?: Enumerable<ChecksWhereUniqueInput>
  }

  export type FilesUncheckedCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<FilesCreateWithoutPlacesInput>, Enumerable<FilesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutPlacesInput>
    createMany?: FilesCreateManyPlacesInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type ObservationsUncheckedCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutPlacesInput>, Enumerable<ObservationsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutPlacesInput>
    createMany?: ObservationsCreateManyPlacesInputEnvelope
    connect?: Enumerable<ObservationsWhereUniqueInput>
  }

  export type Place_reportsUncheckedCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutPlacesInput>, Enumerable<Place_reportsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutPlacesInput>
    createMany?: Place_reportsCreateManyPlacesInputEnvelope
    connect?: Enumerable<Place_reportsWhereUniqueInput>
  }

  export type Place_usersUncheckedCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutPlacesInput>, Enumerable<Place_usersUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutPlacesInput>
    createMany?: Place_usersCreateManyPlacesInputEnvelope
    connect?: Enumerable<Place_usersWhereUniqueInput>
  }

  export type PlacesUncheckedCreateNestedManyWithoutPlacesInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutPlacesInput>, Enumerable<PlacesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutPlacesInput>
    createMany?: PlacesCreateManyPlacesInputEnvelope
    connect?: Enumerable<PlacesWhereUniqueInput>
  }

  export type ActionsUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutPlacesInput>, Enumerable<ActionsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<ActionsUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: ActionsCreateManyPlacesInputEnvelope
    set?: Enumerable<ActionsWhereUniqueInput>
    disconnect?: Enumerable<ActionsWhereUniqueInput>
    delete?: Enumerable<ActionsWhereUniqueInput>
    connect?: Enumerable<ActionsWhereUniqueInput>
    update?: Enumerable<ActionsUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<ActionsUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<ActionsScalarWhereInput>
  }

  export type ChecksUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutPlacesInput>, Enumerable<ChecksUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<ChecksUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: ChecksCreateManyPlacesInputEnvelope
    set?: Enumerable<ChecksWhereUniqueInput>
    disconnect?: Enumerable<ChecksWhereUniqueInput>
    delete?: Enumerable<ChecksWhereUniqueInput>
    connect?: Enumerable<ChecksWhereUniqueInput>
    update?: Enumerable<ChecksUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<ChecksUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<ChecksScalarWhereInput>
  }

  export type FilesUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutPlacesInput>, Enumerable<FilesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: FilesCreateManyPlacesInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type ObservationsUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutPlacesInput>, Enumerable<ObservationsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<ObservationsUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: ObservationsCreateManyPlacesInputEnvelope
    set?: Enumerable<ObservationsWhereUniqueInput>
    disconnect?: Enumerable<ObservationsWhereUniqueInput>
    delete?: Enumerable<ObservationsWhereUniqueInput>
    connect?: Enumerable<ObservationsWhereUniqueInput>
    update?: Enumerable<ObservationsUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<ObservationsUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<ObservationsScalarWhereInput>
  }

  export type Place_reportsUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutPlacesInput>, Enumerable<Place_reportsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<Place_reportsUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: Place_reportsCreateManyPlacesInputEnvelope
    set?: Enumerable<Place_reportsWhereUniqueInput>
    disconnect?: Enumerable<Place_reportsWhereUniqueInput>
    delete?: Enumerable<Place_reportsWhereUniqueInput>
    connect?: Enumerable<Place_reportsWhereUniqueInput>
    update?: Enumerable<Place_reportsUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<Place_reportsUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<Place_reportsScalarWhereInput>
  }

  export type Place_usersUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutPlacesInput>, Enumerable<Place_usersUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<Place_usersUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: Place_usersCreateManyPlacesInputEnvelope
    set?: Enumerable<Place_usersWhereUniqueInput>
    disconnect?: Enumerable<Place_usersWhereUniqueInput>
    delete?: Enumerable<Place_usersWhereUniqueInput>
    connect?: Enumerable<Place_usersWhereUniqueInput>
    update?: Enumerable<Place_usersUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<Place_usersUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<Place_usersScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutPlacesNestedInput = {
    create?: XOR<AccountsCreateWithoutPlacesInput, AccountsUncheckedCreateWithoutPlacesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlacesInput
    upsert?: AccountsUpsertWithoutPlacesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutPlacesInput, AccountsUncheckedUpdateWithoutPlacesInput>
  }

  export type PlacesUpdateOneWithoutOther_placesNestedInput = {
    create?: XOR<PlacesCreateWithoutOther_placesInput, PlacesUncheckedCreateWithoutOther_placesInput>
    connectOrCreate?: PlacesCreateOrConnectWithoutOther_placesInput
    upsert?: PlacesUpsertWithoutOther_placesInput
    disconnect?: boolean
    delete?: boolean
    connect?: PlacesWhereUniqueInput
    update?: XOR<PlacesUpdateWithoutOther_placesInput, PlacesUncheckedUpdateWithoutOther_placesInput>
  }

  export type PlacesUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutPlacesInput>, Enumerable<PlacesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<PlacesUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: PlacesCreateManyPlacesInputEnvelope
    set?: Enumerable<PlacesWhereUniqueInput>
    disconnect?: Enumerable<PlacesWhereUniqueInput>
    delete?: Enumerable<PlacesWhereUniqueInput>
    connect?: Enumerable<PlacesWhereUniqueInput>
    update?: Enumerable<PlacesUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<PlacesUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<PlacesScalarWhereInput>
  }

  export type SubprojectsUpdateOneWithoutPlacesNestedInput = {
    create?: XOR<SubprojectsCreateWithoutPlacesInput, SubprojectsUncheckedCreateWithoutPlacesInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutPlacesInput
    upsert?: SubprojectsUpsertWithoutPlacesInput
    disconnect?: boolean
    delete?: boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<SubprojectsUpdateWithoutPlacesInput, SubprojectsUncheckedUpdateWithoutPlacesInput>
  }

  export type ActionsUncheckedUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<ActionsCreateWithoutPlacesInput>, Enumerable<ActionsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ActionsCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<ActionsUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: ActionsCreateManyPlacesInputEnvelope
    set?: Enumerable<ActionsWhereUniqueInput>
    disconnect?: Enumerable<ActionsWhereUniqueInput>
    delete?: Enumerable<ActionsWhereUniqueInput>
    connect?: Enumerable<ActionsWhereUniqueInput>
    update?: Enumerable<ActionsUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<ActionsUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<ActionsScalarWhereInput>
  }

  export type ChecksUncheckedUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<ChecksCreateWithoutPlacesInput>, Enumerable<ChecksUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ChecksCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<ChecksUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: ChecksCreateManyPlacesInputEnvelope
    set?: Enumerable<ChecksWhereUniqueInput>
    disconnect?: Enumerable<ChecksWhereUniqueInput>
    delete?: Enumerable<ChecksWhereUniqueInput>
    connect?: Enumerable<ChecksWhereUniqueInput>
    update?: Enumerable<ChecksUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<ChecksUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<ChecksScalarWhereInput>
  }

  export type FilesUncheckedUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutPlacesInput>, Enumerable<FilesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: FilesCreateManyPlacesInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type ObservationsUncheckedUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<ObservationsCreateWithoutPlacesInput>, Enumerable<ObservationsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<ObservationsCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<ObservationsUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: ObservationsCreateManyPlacesInputEnvelope
    set?: Enumerable<ObservationsWhereUniqueInput>
    disconnect?: Enumerable<ObservationsWhereUniqueInput>
    delete?: Enumerable<ObservationsWhereUniqueInput>
    connect?: Enumerable<ObservationsWhereUniqueInput>
    update?: Enumerable<ObservationsUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<ObservationsUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<ObservationsScalarWhereInput>
  }

  export type Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<Place_reportsCreateWithoutPlacesInput>, Enumerable<Place_reportsUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_reportsCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<Place_reportsUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: Place_reportsCreateManyPlacesInputEnvelope
    set?: Enumerable<Place_reportsWhereUniqueInput>
    disconnect?: Enumerable<Place_reportsWhereUniqueInput>
    delete?: Enumerable<Place_reportsWhereUniqueInput>
    connect?: Enumerable<Place_reportsWhereUniqueInput>
    update?: Enumerable<Place_reportsUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<Place_reportsUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<Place_reportsScalarWhereInput>
  }

  export type Place_usersUncheckedUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutPlacesInput>, Enumerable<Place_usersUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<Place_usersUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: Place_usersCreateManyPlacesInputEnvelope
    set?: Enumerable<Place_usersWhereUniqueInput>
    disconnect?: Enumerable<Place_usersWhereUniqueInput>
    delete?: Enumerable<Place_usersWhereUniqueInput>
    connect?: Enumerable<Place_usersWhereUniqueInput>
    update?: Enumerable<Place_usersUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<Place_usersUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<Place_usersScalarWhereInput>
  }

  export type PlacesUncheckedUpdateManyWithoutPlacesNestedInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutPlacesInput>, Enumerable<PlacesUncheckedCreateWithoutPlacesInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutPlacesInput>
    upsert?: Enumerable<PlacesUpsertWithWhereUniqueWithoutPlacesInput>
    createMany?: PlacesCreateManyPlacesInputEnvelope
    set?: Enumerable<PlacesWhereUniqueInput>
    disconnect?: Enumerable<PlacesWhereUniqueInput>
    delete?: Enumerable<PlacesWhereUniqueInput>
    connect?: Enumerable<PlacesWhereUniqueInput>
    update?: Enumerable<PlacesUpdateWithWhereUniqueWithoutPlacesInput>
    updateMany?: Enumerable<PlacesUpdateManyWithWhereWithoutPlacesInput>
    deleteMany?: Enumerable<PlacesScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutProject_reportsInput = {
    create?: XOR<AccountsCreateWithoutProject_reportsInput, AccountsUncheckedCreateWithoutProject_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProject_reportsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutProject_reportsInput = {
    create?: XOR<ProjectsCreateWithoutProject_reportsInput, ProjectsUncheckedCreateWithoutProject_reportsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutProject_reportsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutProject_reportsNestedInput = {
    create?: XOR<AccountsCreateWithoutProject_reportsInput, AccountsUncheckedCreateWithoutProject_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProject_reportsInput
    upsert?: AccountsUpsertWithoutProject_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutProject_reportsInput, AccountsUncheckedUpdateWithoutProject_reportsInput>
  }

  export type ProjectsUpdateOneWithoutProject_reportsNestedInput = {
    create?: XOR<ProjectsCreateWithoutProject_reportsInput, ProjectsUncheckedCreateWithoutProject_reportsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutProject_reportsInput
    upsert?: ProjectsUpsertWithoutProject_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutProject_reportsInput, ProjectsUncheckedUpdateWithoutProject_reportsInput>
  }

  export type AccountsCreateNestedOneWithoutProject_usersInput = {
    create?: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProject_usersInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutProject_usersInput = {
    create?: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutProject_usersInput
    connect?: ProjectsWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutProject_usersInput = {
    create?: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutProject_usersInput
    connect?: UsersWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutProject_usersNestedInput = {
    create?: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProject_usersInput
    upsert?: AccountsUpsertWithoutProject_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutProject_usersInput, AccountsUncheckedUpdateWithoutProject_usersInput>
  }

  export type ProjectsUpdateOneWithoutProject_usersNestedInput = {
    create?: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutProject_usersInput
    upsert?: ProjectsUpsertWithoutProject_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutProject_usersInput, ProjectsUncheckedUpdateWithoutProject_usersInput>
  }

  export type UsersUpdateOneWithoutProject_usersNestedInput = {
    create?: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutProject_usersInput
    upsert?: UsersUpsertWithoutProject_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<UsersUpdateWithoutProject_usersInput, UsersUncheckedUpdateWithoutProject_usersInput>
  }

  export type FieldsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutProjectsInput>, Enumerable<FieldsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutProjectsInput>
    createMany?: FieldsCreateManyProjectsInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type FilesCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutProjectsInput>, Enumerable<FilesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutProjectsInput>
    createMany?: FilesCreateManyProjectsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type ListsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type PersonsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Project_reportsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutProjectsInput>, Enumerable<Project_reportsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutProjectsInput>
    createMany?: Project_reportsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Project_reportsWhereUniqueInput>
  }

  export type Project_usersCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutProjectsInput = {
    create?: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProjectsInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxonomiesCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type UnitsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type FieldsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutProjectsInput>, Enumerable<FieldsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutProjectsInput>
    createMany?: FieldsCreateManyProjectsInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type FilesUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutProjectsInput>, Enumerable<FilesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutProjectsInput>
    createMany?: FilesCreateManyProjectsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type ListsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type PersonsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Project_reportsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutProjectsInput>, Enumerable<Project_reportsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutProjectsInput>
    createMany?: Project_reportsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Project_reportsWhereUniqueInput>
  }

  export type Project_usersUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type SubprojectsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type UnitsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type FieldsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutProjectsInput>, Enumerable<FieldsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: FieldsCreateManyProjectsInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type FilesUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutProjectsInput>, Enumerable<FilesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: FilesCreateManyProjectsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type ListsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type PersonsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Project_reportsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutProjectsInput>, Enumerable<Project_reportsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Project_reportsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Project_reportsCreateManyProjectsInputEnvelope
    set?: Enumerable<Project_reportsWhereUniqueInput>
    disconnect?: Enumerable<Project_reportsWhereUniqueInput>
    delete?: Enumerable<Project_reportsWhereUniqueInput>
    connect?: Enumerable<Project_reportsWhereUniqueInput>
    update?: Enumerable<Project_reportsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Project_reportsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Project_reportsScalarWhereInput>
  }

  export type Project_usersUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutProjectsNestedInput = {
    create?: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProjectsInput
    upsert?: AccountsUpsertWithoutProjectsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutProjectsInput, AccountsUncheckedUpdateWithoutProjectsInput>
  }

  export type SubprojectsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxonomiesUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type UnitsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type FieldsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutProjectsInput>, Enumerable<FieldsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: FieldsCreateManyProjectsInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type FilesUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutProjectsInput>, Enumerable<FilesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: FilesCreateManyProjectsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type ListsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type PersonsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Project_reportsCreateWithoutProjectsInput>, Enumerable<Project_reportsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_reportsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Project_reportsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Project_reportsCreateManyProjectsInputEnvelope
    set?: Enumerable<Project_reportsWhereUniqueInput>
    disconnect?: Enumerable<Project_reportsWhereUniqueInput>
    delete?: Enumerable<Project_reportsWhereUniqueInput>
    connect?: Enumerable<Project_reportsWhereUniqueInput>
    update?: Enumerable<Project_reportsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Project_reportsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Project_reportsScalarWhereInput>
  }

  export type Project_usersUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type UnitsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutSubproject_reportsInput = {
    create?: XOR<AccountsCreateWithoutSubproject_reportsInput, AccountsUncheckedCreateWithoutSubproject_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_reportsInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutSubproject_reportsInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_reportsInput, SubprojectsUncheckedCreateWithoutSubproject_reportsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_reportsInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutSubproject_reportsNestedInput = {
    create?: XOR<AccountsCreateWithoutSubproject_reportsInput, AccountsUncheckedCreateWithoutSubproject_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_reportsInput
    upsert?: AccountsUpsertWithoutSubproject_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutSubproject_reportsInput, AccountsUncheckedUpdateWithoutSubproject_reportsInput>
  }

  export type SubprojectsUpdateOneWithoutSubproject_reportsNestedInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_reportsInput, SubprojectsUncheckedCreateWithoutSubproject_reportsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_reportsInput
    upsert?: SubprojectsUpsertWithoutSubproject_reportsInput
    disconnect?: boolean
    delete?: boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<SubprojectsUpdateWithoutSubproject_reportsInput, SubprojectsUncheckedUpdateWithoutSubproject_reportsInput>
  }

  export type AccountsCreateNestedOneWithoutSubproject_taxaInput = {
    create?: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_taxaInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutSubproject_taxaInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_taxaInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type TaxaCreateNestedOneWithoutSubproject_taxaInput = {
    create?: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: TaxaCreateOrConnectWithoutSubproject_taxaInput
    connect?: TaxaWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutSubproject_taxaNestedInput = {
    create?: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_taxaInput
    upsert?: AccountsUpsertWithoutSubproject_taxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutSubproject_taxaInput, AccountsUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type SubprojectsUpdateOneWithoutSubproject_taxaNestedInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_taxaInput
    upsert?: SubprojectsUpsertWithoutSubproject_taxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<SubprojectsUpdateWithoutSubproject_taxaInput, SubprojectsUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type TaxaUpdateOneWithoutSubproject_taxaNestedInput = {
    create?: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: TaxaCreateOrConnectWithoutSubproject_taxaInput
    upsert?: TaxaUpsertWithoutSubproject_taxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: TaxaWhereUniqueInput
    update?: XOR<TaxaUpdateWithoutSubproject_taxaInput, TaxaUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type AccountsCreateNestedOneWithoutSubproject_usersInput = {
    create?: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_usersInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutSubproject_usersInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_usersInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutSubproject_usersInput = {
    create?: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutSubproject_usersInput
    connect?: UsersWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutSubproject_usersNestedInput = {
    create?: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_usersInput
    upsert?: AccountsUpsertWithoutSubproject_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutSubproject_usersInput, AccountsUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type SubprojectsUpdateOneWithoutSubproject_usersNestedInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_usersInput
    upsert?: SubprojectsUpsertWithoutSubproject_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<SubprojectsUpdateWithoutSubproject_usersInput, SubprojectsUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type UsersUpdateOneWithoutSubproject_usersNestedInput = {
    create?: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutSubproject_usersInput
    upsert?: UsersUpsertWithoutSubproject_usersInput
    disconnect?: boolean
    delete?: boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<UsersUpdateWithoutSubproject_usersInput, UsersUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type FilesCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutSubprojectsInput>, Enumerable<FilesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutSubprojectsInput>
    createMany?: FilesCreateManySubprojectsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type GoalsCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type PlacesCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutSubprojectsInput>, Enumerable<PlacesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutSubprojectsInput>
    createMany?: PlacesCreateManySubprojectsInputEnvelope
    connect?: Enumerable<PlacesWhereUniqueInput>
  }

  export type Subproject_reportsCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutSubprojectsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_reportsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
  }

  export type Subproject_taxaCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutSubprojectsInput = {
    create?: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubprojectsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutSubprojectsInput = {
    create?: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutSubprojectsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type FilesUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<FilesCreateWithoutSubprojectsInput>, Enumerable<FilesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutSubprojectsInput>
    createMany?: FilesCreateManySubprojectsInputEnvelope
    connect?: Enumerable<FilesWhereUniqueInput>
  }

  export type GoalsUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type PlacesUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutSubprojectsInput>, Enumerable<PlacesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutSubprojectsInput>
    createMany?: PlacesCreateManySubprojectsInputEnvelope
    connect?: Enumerable<PlacesWhereUniqueInput>
  }

  export type Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutSubprojectsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_reportsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
  }

  export type Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type FilesUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutSubprojectsInput>, Enumerable<FilesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: FilesCreateManySubprojectsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type GoalsUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type PlacesUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutSubprojectsInput>, Enumerable<PlacesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<PlacesUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: PlacesCreateManySubprojectsInputEnvelope
    set?: Enumerable<PlacesWhereUniqueInput>
    disconnect?: Enumerable<PlacesWhereUniqueInput>
    delete?: Enumerable<PlacesWhereUniqueInput>
    connect?: Enumerable<PlacesWhereUniqueInput>
    update?: Enumerable<PlacesUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<PlacesUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<PlacesScalarWhereInput>
  }

  export type Subproject_reportsUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutSubprojectsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_reportsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_reportsCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_reportsWhereUniqueInput>
    disconnect?: Enumerable<Subproject_reportsWhereUniqueInput>
    delete?: Enumerable<Subproject_reportsWhereUniqueInput>
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
    update?: Enumerable<Subproject_reportsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_reportsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_reportsScalarWhereInput>
  }

  export type Subproject_taxaUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutSubprojectsNestedInput = {
    create?: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubprojectsInput
    upsert?: AccountsUpsertWithoutSubprojectsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutSubprojectsInput, AccountsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type ProjectsUpdateOneWithoutSubprojectsNestedInput = {
    create?: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutSubprojectsInput
    upsert?: ProjectsUpsertWithoutSubprojectsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutSubprojectsInput, ProjectsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type FilesUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<FilesCreateWithoutSubprojectsInput>, Enumerable<FilesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<FilesCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<FilesUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: FilesCreateManySubprojectsInputEnvelope
    set?: Enumerable<FilesWhereUniqueInput>
    disconnect?: Enumerable<FilesWhereUniqueInput>
    delete?: Enumerable<FilesWhereUniqueInput>
    connect?: Enumerable<FilesWhereUniqueInput>
    update?: Enumerable<FilesUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<FilesUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<FilesScalarWhereInput>
  }

  export type GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<PlacesCreateWithoutSubprojectsInput>, Enumerable<PlacesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<PlacesCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<PlacesUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: PlacesCreateManySubprojectsInputEnvelope
    set?: Enumerable<PlacesWhereUniqueInput>
    disconnect?: Enumerable<PlacesWhereUniqueInput>
    delete?: Enumerable<PlacesWhereUniqueInput>
    connect?: Enumerable<PlacesWhereUniqueInput>
    update?: Enumerable<PlacesUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<PlacesUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<PlacesScalarWhereInput>
  }

  export type Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_reportsCreateWithoutSubprojectsInput>, Enumerable<Subproject_reportsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_reportsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_reportsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_reportsCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_reportsWhereUniqueInput>
    disconnect?: Enumerable<Subproject_reportsWhereUniqueInput>
    delete?: Enumerable<Subproject_reportsWhereUniqueInput>
    connect?: Enumerable<Subproject_reportsWhereUniqueInput>
    update?: Enumerable<Subproject_reportsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_reportsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_reportsScalarWhereInput>
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type Check_taxaCreateNestedManyWithoutTaxaInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutTaxaInput>, Enumerable<Check_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutTaxaInput>
    createMany?: Check_taxaCreateManyTaxaInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Subproject_taxaCreateNestedManyWithoutTaxaInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutTaxaInput = {
    create?: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxaInput
    connect?: AccountsWhereUniqueInput
  }

  export type TaxonomiesCreateNestedOneWithoutTaxaInput = {
    create?: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: TaxonomiesCreateOrConnectWithoutTaxaInput
    connect?: TaxonomiesWhereUniqueInput
  }

  export type Check_taxaUncheckedCreateNestedManyWithoutTaxaInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutTaxaInput>, Enumerable<Check_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutTaxaInput>
    createMany?: Check_taxaCreateManyTaxaInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Check_taxaUpdateManyWithoutTaxaNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutTaxaInput>, Enumerable<Check_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutTaxaInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutTaxaInput>
    createMany?: Check_taxaCreateManyTaxaInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutTaxaInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutTaxaInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Subproject_taxaUpdateManyWithoutTaxaNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutTaxaInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutTaxaInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutTaxaNestedInput = {
    create?: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxaInput
    upsert?: AccountsUpsertWithoutTaxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutTaxaInput, AccountsUncheckedUpdateWithoutTaxaInput>
  }

  export type TaxonomiesUpdateOneWithoutTaxaNestedInput = {
    create?: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: TaxonomiesCreateOrConnectWithoutTaxaInput
    upsert?: TaxonomiesUpsertWithoutTaxaInput
    disconnect?: boolean
    delete?: boolean
    connect?: TaxonomiesWhereUniqueInput
    update?: XOR<TaxonomiesUpdateWithoutTaxaInput, TaxonomiesUncheckedUpdateWithoutTaxaInput>
  }

  export type Check_taxaUncheckedUpdateManyWithoutTaxaNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutTaxaInput>, Enumerable<Check_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutTaxaInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutTaxaInput>
    createMany?: Check_taxaCreateManyTaxaInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutTaxaInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutTaxaInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutTaxaInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutTaxaInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type TaxaCreateNestedManyWithoutTaxonomiesInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutTaxonomiesInput = {
    create?: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxonomiesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutTaxonomiesInput = {
    create?: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutTaxonomiesInput
    connect?: ProjectsWhereUniqueInput
  }

  export type TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type TaxaUpdateManyWithoutTaxonomiesNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutTaxonomiesInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutTaxonomiesInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutTaxonomiesNestedInput = {
    create?: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxonomiesInput
    upsert?: AccountsUpsertWithoutTaxonomiesInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutTaxonomiesInput, AccountsUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type ProjectsUpdateOneWithoutTaxonomiesNestedInput = {
    create?: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutTaxonomiesInput
    upsert?: ProjectsUpsertWithoutTaxonomiesInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutTaxonomiesInput, ProjectsUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutTaxonomiesInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutTaxonomiesInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type Action_report_valuesCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutUnitsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Action_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
  }

  export type Action_valuesCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutUnitsInput>, Enumerable<Action_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Action_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Action_valuesWhereUniqueInput>
  }

  export type Check_taxaCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutUnitsInput>, Enumerable<Check_taxaUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutUnitsInput>
    createMany?: Check_taxaCreateManyUnitsInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Check_valuesCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutUnitsInput>, Enumerable<Check_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Check_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Check_valuesWhereUniqueInput>
  }

  export type Goal_report_valuesCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Place_report_valuesCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutUnitsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Place_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutUnitsInput = {
    create?: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUnitsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ListsCreateNestedOneWithoutUnitsInput = {
    create?: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ListsCreateOrConnectWithoutUnitsInput
    connect?: ListsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutUnitsInput = {
    create?: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutUnitsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutUnitsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Action_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
  }

  export type Action_valuesUncheckedCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutUnitsInput>, Enumerable<Action_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Action_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Action_valuesWhereUniqueInput>
  }

  export type Check_taxaUncheckedCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutUnitsInput>, Enumerable<Check_taxaUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutUnitsInput>
    createMany?: Check_taxaCreateManyUnitsInputEnvelope
    connect?: Enumerable<Check_taxaWhereUniqueInput>
  }

  export type Check_valuesUncheckedCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutUnitsInput>, Enumerable<Check_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Check_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Check_valuesWhereUniqueInput>
  }

  export type Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutUnitsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Place_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
  }

  export type Action_report_valuesUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutUnitsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Action_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Action_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Action_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_report_valuesWhereUniqueInput>
    delete?: Enumerable<Action_report_valuesWhereUniqueInput>
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
    update?: Enumerable<Action_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Action_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Action_report_valuesScalarWhereInput>
  }

  export type Action_valuesUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutUnitsInput>, Enumerable<Action_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Action_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Action_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Action_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_valuesWhereUniqueInput>
    delete?: Enumerable<Action_valuesWhereUniqueInput>
    connect?: Enumerable<Action_valuesWhereUniqueInput>
    update?: Enumerable<Action_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Action_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Action_valuesScalarWhereInput>
  }

  export type Check_taxaUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutUnitsInput>, Enumerable<Check_taxaUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Check_taxaCreateManyUnitsInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Check_valuesUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutUnitsInput>, Enumerable<Check_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Check_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Check_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Check_valuesWhereUniqueInput>
    disconnect?: Enumerable<Check_valuesWhereUniqueInput>
    delete?: Enumerable<Check_valuesWhereUniqueInput>
    connect?: Enumerable<Check_valuesWhereUniqueInput>
    update?: Enumerable<Check_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Check_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Check_valuesScalarWhereInput>
  }

  export type Goal_report_valuesUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Place_report_valuesUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutUnitsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Place_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Place_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Place_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Place_report_valuesWhereUniqueInput>
    delete?: Enumerable<Place_report_valuesWhereUniqueInput>
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
    update?: Enumerable<Place_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Place_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Place_report_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUnitsInput
    upsert?: AccountsUpsertWithoutUnitsInput
    disconnect?: boolean
    delete?: boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<AccountsUpdateWithoutUnitsInput, AccountsUncheckedUpdateWithoutUnitsInput>
  }

  export type ListsUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ListsCreateOrConnectWithoutUnitsInput
    upsert?: ListsUpsertWithoutUnitsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ListsWhereUniqueInput
    update?: XOR<ListsUpdateWithoutUnitsInput, ListsUncheckedUpdateWithoutUnitsInput>
  }

  export type ProjectsUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutUnitsInput
    upsert?: ProjectsUpsertWithoutUnitsInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<ProjectsUpdateWithoutUnitsInput, ProjectsUncheckedUpdateWithoutUnitsInput>
  }

  export type Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Action_report_valuesCreateWithoutUnitsInput>, Enumerable<Action_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Action_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Action_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Action_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_report_valuesWhereUniqueInput>
    delete?: Enumerable<Action_report_valuesWhereUniqueInput>
    connect?: Enumerable<Action_report_valuesWhereUniqueInput>
    update?: Enumerable<Action_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Action_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Action_report_valuesScalarWhereInput>
  }

  export type Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Action_valuesCreateWithoutUnitsInput>, Enumerable<Action_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Action_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Action_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Action_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Action_valuesWhereUniqueInput>
    disconnect?: Enumerable<Action_valuesWhereUniqueInput>
    delete?: Enumerable<Action_valuesWhereUniqueInput>
    connect?: Enumerable<Action_valuesWhereUniqueInput>
    update?: Enumerable<Action_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Action_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Action_valuesScalarWhereInput>
  }

  export type Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Check_taxaCreateWithoutUnitsInput>, Enumerable<Check_taxaUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_taxaCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Check_taxaUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Check_taxaCreateManyUnitsInputEnvelope
    set?: Enumerable<Check_taxaWhereUniqueInput>
    disconnect?: Enumerable<Check_taxaWhereUniqueInput>
    delete?: Enumerable<Check_taxaWhereUniqueInput>
    connect?: Enumerable<Check_taxaWhereUniqueInput>
    update?: Enumerable<Check_taxaUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Check_taxaUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Check_taxaScalarWhereInput>
  }

  export type Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Check_valuesCreateWithoutUnitsInput>, Enumerable<Check_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Check_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Check_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Check_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Check_valuesWhereUniqueInput>
    disconnect?: Enumerable<Check_valuesWhereUniqueInput>
    delete?: Enumerable<Check_valuesWhereUniqueInput>
    connect?: Enumerable<Check_valuesWhereUniqueInput>
    update?: Enumerable<Check_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Check_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Check_valuesScalarWhereInput>
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Place_report_valuesCreateWithoutUnitsInput>, Enumerable<Place_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Place_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Place_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Place_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Place_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Place_report_valuesWhereUniqueInput>
    delete?: Enumerable<Place_report_valuesWhereUniqueInput>
    connect?: Enumerable<Place_report_valuesWhereUniqueInput>
    update?: Enumerable<Place_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Place_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Place_report_valuesScalarWhereInput>
  }

  export type MessagesCreateNestedOneWithoutUser_messagesInput = {
    create?: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: MessagesCreateOrConnectWithoutUser_messagesInput
    connect?: MessagesWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutUser_messagesInput = {
    create?: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUser_messagesInput
    connect?: UsersWhereUniqueInput
  }

  export type MessagesUpdateOneWithoutUser_messagesNestedInput = {
    create?: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: MessagesCreateOrConnectWithoutUser_messagesInput
    upsert?: MessagesUpsertWithoutUser_messagesInput
    disconnect?: boolean
    delete?: boolean
    connect?: MessagesWhereUniqueInput
    update?: XOR<MessagesUpdateWithoutUser_messagesInput, MessagesUncheckedUpdateWithoutUser_messagesInput>
  }

  export type UsersUpdateOneWithoutUser_messagesNestedInput = {
    create?: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUser_messagesInput
    upsert?: UsersUpsertWithoutUser_messagesInput
    disconnect?: boolean
    delete?: boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<UsersUpdateWithoutUser_messagesInput, UsersUncheckedUpdateWithoutUser_messagesInput>
  }

  export type AccountsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    connect?: Enumerable<AccountsWhereUniqueInput>
  }

  export type Place_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutUsersInput>, Enumerable<Place_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutUsersInput>
    createMany?: Place_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Place_usersWhereUniqueInput>
  }

  export type Project_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type Subproject_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type User_messagesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type AccountsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    connect?: Enumerable<AccountsWhereUniqueInput>
  }

  export type Place_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutUsersInput>, Enumerable<Place_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutUsersInput>
    createMany?: Place_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Place_usersWhereUniqueInput>
  }

  export type Project_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type Subproject_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type User_messagesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type AccountsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<AccountsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    set?: Enumerable<AccountsWhereUniqueInput>
    disconnect?: Enumerable<AccountsWhereUniqueInput>
    delete?: Enumerable<AccountsWhereUniqueInput>
    connect?: Enumerable<AccountsWhereUniqueInput>
    update?: Enumerable<AccountsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<AccountsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<AccountsScalarWhereInput>
  }

  export type Place_usersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutUsersInput>, Enumerable<Place_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Place_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Place_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Place_usersWhereUniqueInput>
    disconnect?: Enumerable<Place_usersWhereUniqueInput>
    delete?: Enumerable<Place_usersWhereUniqueInput>
    connect?: Enumerable<Place_usersWhereUniqueInput>
    update?: Enumerable<Place_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Place_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Place_usersScalarWhereInput>
  }

  export type Project_usersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type Subproject_usersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type User_messagesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type AccountsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<AccountsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    set?: Enumerable<AccountsWhereUniqueInput>
    disconnect?: Enumerable<AccountsWhereUniqueInput>
    delete?: Enumerable<AccountsWhereUniqueInput>
    connect?: Enumerable<AccountsWhereUniqueInput>
    update?: Enumerable<AccountsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<AccountsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<AccountsScalarWhereInput>
  }

  export type Place_usersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Place_usersCreateWithoutUsersInput>, Enumerable<Place_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Place_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Place_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Place_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Place_usersWhereUniqueInput>
    disconnect?: Enumerable<Place_usersWhereUniqueInput>
    delete?: Enumerable<Place_usersWhereUniqueInput>
    connect?: Enumerable<Place_usersWhereUniqueInput>
    update?: Enumerable<Place_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Place_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Place_usersScalarWhereInput>
  }

  export type Project_usersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type User_messagesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type FieldsCreateNestedManyWithoutWidget_typesInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutWidget_typesInput>, Enumerable<FieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutWidget_typesInput>
    createMany?: FieldsCreateManyWidget_typesInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type Widgets_for_fieldsCreateNestedManyWithoutWidget_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type FieldsUncheckedCreateNestedManyWithoutWidget_typesInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutWidget_typesInput>, Enumerable<FieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutWidget_typesInput>
    createMany?: FieldsCreateManyWidget_typesInputEnvelope
    connect?: Enumerable<FieldsWhereUniqueInput>
  }

  export type Widgets_for_fieldsUncheckedCreateNestedManyWithoutWidget_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type FieldsUpdateManyWithoutWidget_typesNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutWidget_typesInput>, Enumerable<FieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutWidget_typesInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutWidget_typesInput>
    createMany?: FieldsCreateManyWidget_typesInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutWidget_typesInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutWidget_typesInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type Widgets_for_fieldsUpdateManyWithoutWidget_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutWidget_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutWidget_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type FieldsUncheckedUpdateManyWithoutWidget_typesNestedInput = {
    create?: XOR<Enumerable<FieldsCreateWithoutWidget_typesInput>, Enumerable<FieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<FieldsCreateOrConnectWithoutWidget_typesInput>
    upsert?: Enumerable<FieldsUpsertWithWhereUniqueWithoutWidget_typesInput>
    createMany?: FieldsCreateManyWidget_typesInputEnvelope
    set?: Enumerable<FieldsWhereUniqueInput>
    disconnect?: Enumerable<FieldsWhereUniqueInput>
    delete?: Enumerable<FieldsWhereUniqueInput>
    connect?: Enumerable<FieldsWhereUniqueInput>
    update?: Enumerable<FieldsUpdateWithWhereUniqueWithoutWidget_typesInput>
    updateMany?: Enumerable<FieldsUpdateManyWithWhereWithoutWidget_typesInput>
    deleteMany?: Enumerable<FieldsScalarWhereInput>
  }

  export type Widgets_for_fieldsUncheckedUpdateManyWithoutWidget_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutWidget_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutWidget_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type Field_typesCreateNestedOneWithoutWidgets_for_fieldsInput = {
    create?: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Field_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    connect?: Field_typesWhereUniqueInput
  }

  export type Widget_typesCreateNestedOneWithoutWidgets_for_fieldsInput = {
    create?: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Widget_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    connect?: Widget_typesWhereUniqueInput
  }

  export type Field_typesUpdateOneWithoutWidgets_for_fieldsNestedInput = {
    create?: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Field_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    upsert?: Field_typesUpsertWithoutWidgets_for_fieldsInput
    disconnect?: boolean
    delete?: boolean
    connect?: Field_typesWhereUniqueInput
    update?: XOR<Field_typesUpdateWithoutWidgets_for_fieldsInput, Field_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
  }

  export type Widget_typesUpdateOneWithoutWidgets_for_fieldsNestedInput = {
    create?: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Widget_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    upsert?: Widget_typesUpsertWithoutWidgets_for_fieldsInput
    disconnect?: boolean
    delete?: boolean
    connect?: Widget_typesWhereUniqueInput
    update?: XOR<Widget_typesUpdateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
  }

  export type NestedUuidFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    not?: NestedUuidFilter | string
  }

  export type NestedUuidNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    not?: NestedUuidNullableFilter | string | null
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    not?: NestedUuidWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedUuidNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    not?: NestedUuidNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedBoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type NestedFloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type NestedBoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }
  export type NestedJsonNullableFilter = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase>, Exclude<keyof Required<NestedJsonNullableFilterBase>, 'path'>>,
        Required<NestedJsonNullableFilterBase>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase>, 'path'>>

  export type NestedJsonNullableFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: string[]
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type UsersCreateWithoutAccountsInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    place_users?: Place_usersCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutAccountsInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    place_users?: Place_usersUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutAccountsInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
  }

  export type Action_report_valuesCreateWithoutAccountsInput = {
    action_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsCreateNestedOneWithoutAction_report_valuesInput
    units?: UnitsCreateNestedOneWithoutAction_report_valuesInput
  }

  export type Action_report_valuesUncheckedCreateWithoutAccountsInput = {
    action_report_value_id: string
    action_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesCreateOrConnectWithoutAccountsInput = {
    where: Action_report_valuesWhereUniqueInput
    create: XOR<Action_report_valuesCreateWithoutAccountsInput, Action_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Action_report_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Action_report_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Action_reportsCreateWithoutAccountsInput = {
    action_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAction_reportsInput
    actions?: ActionsCreateNestedOneWithoutAction_reportsInput
  }

  export type Action_reportsUncheckedCreateWithoutAccountsInput = {
    action_report_id: string
    action_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAction_reportsInput
  }

  export type Action_reportsCreateOrConnectWithoutAccountsInput = {
    where: Action_reportsWhereUniqueInput
    create: XOR<Action_reportsCreateWithoutAccountsInput, Action_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Action_reportsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Action_reportsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Action_valuesCreateWithoutAccountsInput = {
    action_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedOneWithoutAction_valuesInput
    units?: UnitsCreateNestedOneWithoutAction_valuesInput
  }

  export type Action_valuesUncheckedCreateWithoutAccountsInput = {
    action_value_id: string
    action_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesCreateOrConnectWithoutAccountsInput = {
    where: Action_valuesWhereUniqueInput
    create: XOR<Action_valuesCreateWithoutAccountsInput, Action_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Action_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Action_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type ActionsCreateWithoutAccountsInput = {
    action_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesCreateNestedManyWithoutActionsInput
    places?: PlacesCreateNestedOneWithoutActionsInput
    files?: FilesCreateNestedManyWithoutActionsInput
  }

  export type ActionsUncheckedCreateWithoutAccountsInput = {
    action_id: string
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutActionsInput
    files?: FilesUncheckedCreateNestedManyWithoutActionsInput
  }

  export type ActionsCreateOrConnectWithoutAccountsInput = {
    where: ActionsWhereUniqueInput
    create: XOR<ActionsCreateWithoutAccountsInput, ActionsUncheckedCreateWithoutAccountsInput>
  }

  export type ActionsCreateManyAccountsInputEnvelope = {
    data: Enumerable<ActionsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Check_taxaCreateWithoutAccountsInput = {
    check_taxon_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    checks?: ChecksCreateNestedOneWithoutCheck_taxaInput
    taxa?: TaxaCreateNestedOneWithoutCheck_taxaInput
    units?: UnitsCreateNestedOneWithoutCheck_taxaInput
  }

  export type Check_taxaUncheckedCreateWithoutAccountsInput = {
    check_taxon_id: string
    check_id?: string | null
    taxon_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaCreateOrConnectWithoutAccountsInput = {
    where: Check_taxaWhereUniqueInput
    create: XOR<Check_taxaCreateWithoutAccountsInput, Check_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Check_taxaCreateManyAccountsInputEnvelope = {
    data: Enumerable<Check_taxaCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Check_valuesCreateWithoutAccountsInput = {
    check_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    checks?: ChecksCreateNestedOneWithoutCheck_valuesInput
    units?: UnitsCreateNestedOneWithoutCheck_valuesInput
  }

  export type Check_valuesUncheckedCreateWithoutAccountsInput = {
    check_value_id: string
    check_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesCreateOrConnectWithoutAccountsInput = {
    where: Check_valuesWhereUniqueInput
    create: XOR<Check_valuesCreateWithoutAccountsInput, Check_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Check_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Check_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type ChecksCreateWithoutAccountsInput = {
    check_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesCreateNestedManyWithoutChecksInput
    places?: PlacesCreateNestedOneWithoutChecksInput
    files?: FilesCreateNestedManyWithoutChecksInput
  }

  export type ChecksUncheckedCreateWithoutAccountsInput = {
    check_id: string
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutChecksInput
    files?: FilesUncheckedCreateNestedManyWithoutChecksInput
  }

  export type ChecksCreateOrConnectWithoutAccountsInput = {
    where: ChecksWhereUniqueInput
    create: XOR<ChecksCreateWithoutAccountsInput, ChecksUncheckedCreateWithoutAccountsInput>
  }

  export type ChecksCreateManyAccountsInputEnvelope = {
    data: Enumerable<ChecksCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type FieldsCreateWithoutAccountsInput = {
    field_id: string
    table_name?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    field_types?: Field_typesCreateNestedOneWithoutFieldsInput
    lists?: ListsCreateNestedOneWithoutFieldsInput
    projects?: ProjectsCreateNestedOneWithoutFieldsInput
    widget_types?: Widget_typesCreateNestedOneWithoutFieldsInput
  }

  export type FieldsUncheckedCreateWithoutAccountsInput = {
    field_id: string
    project_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsCreateOrConnectWithoutAccountsInput = {
    where: FieldsWhereUniqueInput
    create: XOR<FieldsCreateWithoutAccountsInput, FieldsUncheckedCreateWithoutAccountsInput>
  }

  export type FieldsCreateManyAccountsInputEnvelope = {
    data: Enumerable<FieldsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type FilesCreateWithoutAccountsInput = {
    file_id: string
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedOneWithoutFilesInput
    checks?: ChecksCreateNestedOneWithoutFilesInput
    places?: PlacesCreateNestedOneWithoutFilesInput
    projects?: ProjectsCreateNestedOneWithoutFilesInput
    subprojects?: SubprojectsCreateNestedOneWithoutFilesInput
  }

  export type FilesUncheckedCreateWithoutAccountsInput = {
    file_id: string
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateOrConnectWithoutAccountsInput = {
    where: FilesWhereUniqueInput
    create: XOR<FilesCreateWithoutAccountsInput, FilesUncheckedCreateWithoutAccountsInput>
  }

  export type FilesCreateManyAccountsInputEnvelope = {
    data: Enumerable<FilesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Goal_report_valuesCreateWithoutAccountsInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput
    units?: UnitsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateWithoutAccountsInput = {
    goal_report_value_id: string
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateOrConnectWithoutAccountsInput = {
    where: Goal_report_valuesWhereUniqueInput
    create: XOR<Goal_report_valuesCreateWithoutAccountsInput, Goal_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_report_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Goal_report_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Goal_reportsCreateWithoutAccountsInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput
    goals?: GoalsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateWithoutAccountsInput = {
    goal_report_id: string
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput
  }

  export type Goal_reportsCreateOrConnectWithoutAccountsInput = {
    where: Goal_reportsWhereUniqueInput
    create: XOR<Goal_reportsCreateWithoutAccountsInput, Goal_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_reportsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Goal_reportsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type GoalsCreateWithoutAccountsInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedManyWithoutGoalsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateWithoutAccountsInput = {
    goal_id: string
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput
  }

  export type GoalsCreateOrConnectWithoutAccountsInput = {
    where: GoalsWhereUniqueInput
    create: XOR<GoalsCreateWithoutAccountsInput, GoalsUncheckedCreateWithoutAccountsInput>
  }

  export type GoalsCreateManyAccountsInputEnvelope = {
    data: Enumerable<GoalsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type List_valuesCreateWithoutAccountsInput = {
    list_value_id: string
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    lists?: ListsCreateNestedOneWithoutList_valuesInput
  }

  export type List_valuesUncheckedCreateWithoutAccountsInput = {
    list_value_id: string
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type List_valuesCreateOrConnectWithoutAccountsInput = {
    where: List_valuesWhereUniqueInput
    create: XOR<List_valuesCreateWithoutAccountsInput, List_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type List_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<List_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type ListsCreateWithoutAccountsInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutListsInput
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutAccountsInput = {
    list_id: string
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutListsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutAccountsInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutAccountsInput, ListsUncheckedCreateWithoutAccountsInput>
  }

  export type ListsCreateManyAccountsInputEnvelope = {
    data: Enumerable<ListsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Observation_sourcesCreateWithoutAccountsInput = {
    observation_source_id: string
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutObservation_sourcesInput
    observations?: ObservationsCreateNestedManyWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUncheckedCreateWithoutAccountsInput = {
    observation_source_id: string
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    observations?: ObservationsUncheckedCreateNestedManyWithoutObservation_sourcesInput
  }

  export type Observation_sourcesCreateOrConnectWithoutAccountsInput = {
    where: Observation_sourcesWhereUniqueInput
    create: XOR<Observation_sourcesCreateWithoutAccountsInput, Observation_sourcesUncheckedCreateWithoutAccountsInput>
  }

  export type Observation_sourcesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Observation_sourcesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type ObservationsCreateWithoutAccountsInput = {
    observation_id: string
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    observation_sources?: Observation_sourcesCreateNestedOneWithoutObservationsInput
    places?: PlacesCreateNestedOneWithoutObservationsInput
  }

  export type ObservationsUncheckedCreateWithoutAccountsInput = {
    observation_id: string
    observation_source_id?: string | null
    place_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type ObservationsCreateOrConnectWithoutAccountsInput = {
    where: ObservationsWhereUniqueInput
    create: XOR<ObservationsCreateWithoutAccountsInput, ObservationsUncheckedCreateWithoutAccountsInput>
  }

  export type ObservationsCreateManyAccountsInputEnvelope = {
    data: Enumerable<ObservationsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type PersonsCreateWithoutAccountsInput = {
    person_id: string
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutPersonsInput
  }

  export type PersonsUncheckedCreateWithoutAccountsInput = {
    person_id: string
    project_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateOrConnectWithoutAccountsInput = {
    where: PersonsWhereUniqueInput
    create: XOR<PersonsCreateWithoutAccountsInput, PersonsUncheckedCreateWithoutAccountsInput>
  }

  export type PersonsCreateManyAccountsInputEnvelope = {
    data: Enumerable<PersonsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Place_levelsCreateWithoutAccountsInput = {
    place_level_id: string
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutPlace_levelsInput
  }

  export type Place_levelsUncheckedCreateWithoutAccountsInput = {
    place_level_id: string
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateOrConnectWithoutAccountsInput = {
    where: Place_levelsWhereUniqueInput
    create: XOR<Place_levelsCreateWithoutAccountsInput, Place_levelsUncheckedCreateWithoutAccountsInput>
  }

  export type Place_levelsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Place_levelsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Place_report_valuesCreateWithoutAccountsInput = {
    place_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    place_reports?: Place_reportsCreateNestedOneWithoutPlace_report_valuesInput
    units?: UnitsCreateNestedOneWithoutPlace_report_valuesInput
  }

  export type Place_report_valuesUncheckedCreateWithoutAccountsInput = {
    place_report_value_id: string
    place_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesCreateOrConnectWithoutAccountsInput = {
    where: Place_report_valuesWhereUniqueInput
    create: XOR<Place_report_valuesCreateWithoutAccountsInput, Place_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Place_report_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Place_report_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Place_reportsCreateWithoutAccountsInput = {
    place_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    place_report_values?: Place_report_valuesCreateNestedManyWithoutPlace_reportsInput
    places?: PlacesCreateNestedOneWithoutPlace_reportsInput
  }

  export type Place_reportsUncheckedCreateWithoutAccountsInput = {
    place_report_id: string
    place_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutPlace_reportsInput
  }

  export type Place_reportsCreateOrConnectWithoutAccountsInput = {
    where: Place_reportsWhereUniqueInput
    create: XOR<Place_reportsCreateWithoutAccountsInput, Place_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Place_reportsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Place_reportsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Place_usersCreateWithoutAccountsInput = {
    place_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    places?: PlacesCreateNestedOneWithoutPlace_usersInput
    users?: UsersCreateNestedOneWithoutPlace_usersInput
  }

  export type Place_usersUncheckedCreateWithoutAccountsInput = {
    place_user_id: string
    place_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_usersCreateOrConnectWithoutAccountsInput = {
    where: Place_usersWhereUniqueInput
    create: XOR<Place_usersCreateWithoutAccountsInput, Place_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Place_usersCreateManyAccountsInputEnvelope = {
    data: Enumerable<Place_usersCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type PlacesCreateWithoutAccountsInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutAccountsInput = {
    place_id: string
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutAccountsInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutAccountsInput, PlacesUncheckedCreateWithoutAccountsInput>
  }

  export type PlacesCreateManyAccountsInputEnvelope = {
    data: Enumerable<PlacesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Project_reportsCreateWithoutAccountsInput = {
    project_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutProject_reportsInput
  }

  export type Project_reportsUncheckedCreateWithoutAccountsInput = {
    project_report_id: string
    project_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_reportsCreateOrConnectWithoutAccountsInput = {
    where: Project_reportsWhereUniqueInput
    create: XOR<Project_reportsCreateWithoutAccountsInput, Project_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Project_reportsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Project_reportsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Project_usersCreateWithoutAccountsInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutProject_usersInput
    users?: UsersCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateWithoutAccountsInput = {
    project_user_id: string
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateOrConnectWithoutAccountsInput = {
    where: Project_usersWhereUniqueInput
    create: XOR<Project_usersCreateWithoutAccountsInput, Project_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Project_usersCreateManyAccountsInputEnvelope = {
    data: Enumerable<Project_usersCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type ProjectsCreateWithoutAccountsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutAccountsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutAccountsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutAccountsInput, ProjectsUncheckedCreateWithoutAccountsInput>
  }

  export type ProjectsCreateManyAccountsInputEnvelope = {
    data: Enumerable<ProjectsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_reportsCreateWithoutAccountsInput = {
    subproject_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_reportsInput
  }

  export type Subproject_reportsUncheckedCreateWithoutAccountsInput = {
    subproject_report_id: string
    subproject_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_reportsCreateOrConnectWithoutAccountsInput = {
    where: Subproject_reportsWhereUniqueInput
    create: XOR<Subproject_reportsCreateWithoutAccountsInput, Subproject_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_reportsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Subproject_reportsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_taxaCreateWithoutAccountsInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_taxaInput
    taxa?: TaxaCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateWithoutAccountsInput = {
    subproject_taxon_id: string
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateOrConnectWithoutAccountsInput = {
    where: Subproject_taxaWhereUniqueInput
    create: XOR<Subproject_taxaCreateWithoutAccountsInput, Subproject_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_taxaCreateManyAccountsInputEnvelope = {
    data: Enumerable<Subproject_taxaCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_usersCreateWithoutAccountsInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_usersInput
    users?: UsersCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateWithoutAccountsInput = {
    subproject_user_id: string
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateOrConnectWithoutAccountsInput = {
    where: Subproject_usersWhereUniqueInput
    create: XOR<Subproject_usersCreateWithoutAccountsInput, Subproject_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_usersCreateManyAccountsInputEnvelope = {
    data: Enumerable<Subproject_usersCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type SubprojectsCreateWithoutAccountsInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutAccountsInput = {
    subproject_id: string
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutAccountsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutAccountsInput, SubprojectsUncheckedCreateWithoutAccountsInput>
  }

  export type SubprojectsCreateManyAccountsInputEnvelope = {
    data: Enumerable<SubprojectsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type TaxaCreateWithoutAccountsInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutTaxaInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutTaxaInput
    taxonomies?: TaxonomiesCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateWithoutAccountsInput = {
    taxon_id: string
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutTaxaInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaCreateOrConnectWithoutAccountsInput = {
    where: TaxaWhereUniqueInput
    create: XOR<TaxaCreateWithoutAccountsInput, TaxaUncheckedCreateWithoutAccountsInput>
  }

  export type TaxaCreateManyAccountsInputEnvelope = {
    data: Enumerable<TaxaCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type TaxonomiesCreateWithoutAccountsInput = {
    taxonomy_id: string
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    taxa?: TaxaCreateNestedManyWithoutTaxonomiesInput
    projects?: ProjectsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateWithoutAccountsInput = {
    taxonomy_id: string
    project_id?: string | null
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    taxa?: TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput
  }

  export type TaxonomiesCreateOrConnectWithoutAccountsInput = {
    where: TaxonomiesWhereUniqueInput
    create: XOR<TaxonomiesCreateWithoutAccountsInput, TaxonomiesUncheckedCreateWithoutAccountsInput>
  }

  export type TaxonomiesCreateManyAccountsInputEnvelope = {
    data: Enumerable<TaxonomiesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type UnitsCreateWithoutAccountsInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutAccountsInput = {
    unit_id: string
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutAccountsInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutAccountsInput, UnitsUncheckedCreateWithoutAccountsInput>
  }

  export type UnitsCreateManyAccountsInputEnvelope = {
    data: Enumerable<UnitsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type UsersUpsertWithoutAccountsInput = {
    update: XOR<UsersUpdateWithoutAccountsInput, UsersUncheckedUpdateWithoutAccountsInput>
    create: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
  }

  export type UsersUpdateWithoutAccountsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_users?: Place_usersUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutAccountsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_users?: Place_usersUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type Action_report_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Action_report_valuesWhereUniqueInput
    update: XOR<Action_report_valuesUpdateWithoutAccountsInput, Action_report_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Action_report_valuesCreateWithoutAccountsInput, Action_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Action_report_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Action_report_valuesWhereUniqueInput
    data: XOR<Action_report_valuesUpdateWithoutAccountsInput, Action_report_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type Action_report_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: Action_report_valuesScalarWhereInput
    data: XOR<Action_report_valuesUpdateManyMutationInput, Action_report_valuesUncheckedUpdateManyWithoutAction_report_valuesInput>
  }

  export type Action_report_valuesScalarWhereInput = {
    AND?: Enumerable<Action_report_valuesScalarWhereInput>
    OR?: Enumerable<Action_report_valuesScalarWhereInput>
    NOT?: Enumerable<Action_report_valuesScalarWhereInput>
    action_report_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    action_report_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Action_reportsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Action_reportsWhereUniqueInput
    update: XOR<Action_reportsUpdateWithoutAccountsInput, Action_reportsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Action_reportsCreateWithoutAccountsInput, Action_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Action_reportsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Action_reportsWhereUniqueInput
    data: XOR<Action_reportsUpdateWithoutAccountsInput, Action_reportsUncheckedUpdateWithoutAccountsInput>
  }

  export type Action_reportsUpdateManyWithWhereWithoutAccountsInput = {
    where: Action_reportsScalarWhereInput
    data: XOR<Action_reportsUpdateManyMutationInput, Action_reportsUncheckedUpdateManyWithoutAction_reportsInput>
  }

  export type Action_reportsScalarWhereInput = {
    AND?: Enumerable<Action_reportsScalarWhereInput>
    OR?: Enumerable<Action_reportsScalarWhereInput>
    NOT?: Enumerable<Action_reportsScalarWhereInput>
    action_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    action_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Action_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Action_valuesWhereUniqueInput
    update: XOR<Action_valuesUpdateWithoutAccountsInput, Action_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Action_valuesCreateWithoutAccountsInput, Action_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Action_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Action_valuesWhereUniqueInput
    data: XOR<Action_valuesUpdateWithoutAccountsInput, Action_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type Action_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: Action_valuesScalarWhereInput
    data: XOR<Action_valuesUpdateManyMutationInput, Action_valuesUncheckedUpdateManyWithoutAction_valuesInput>
  }

  export type Action_valuesScalarWhereInput = {
    AND?: Enumerable<Action_valuesScalarWhereInput>
    OR?: Enumerable<Action_valuesScalarWhereInput>
    NOT?: Enumerable<Action_valuesScalarWhereInput>
    action_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    action_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type ActionsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: ActionsWhereUniqueInput
    update: XOR<ActionsUpdateWithoutAccountsInput, ActionsUncheckedUpdateWithoutAccountsInput>
    create: XOR<ActionsCreateWithoutAccountsInput, ActionsUncheckedCreateWithoutAccountsInput>
  }

  export type ActionsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: ActionsWhereUniqueInput
    data: XOR<ActionsUpdateWithoutAccountsInput, ActionsUncheckedUpdateWithoutAccountsInput>
  }

  export type ActionsUpdateManyWithWhereWithoutAccountsInput = {
    where: ActionsScalarWhereInput
    data: XOR<ActionsUpdateManyMutationInput, ActionsUncheckedUpdateManyWithoutActionsInput>
  }

  export type ActionsScalarWhereInput = {
    AND?: Enumerable<ActionsScalarWhereInput>
    OR?: Enumerable<ActionsScalarWhereInput>
    NOT?: Enumerable<ActionsScalarWhereInput>
    action_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    date?: DateTimeNullableFilter | Date | string | null
    data?: JsonNullableFilter
    relevant_for_reports?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Check_taxaUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Check_taxaWhereUniqueInput
    update: XOR<Check_taxaUpdateWithoutAccountsInput, Check_taxaUncheckedUpdateWithoutAccountsInput>
    create: XOR<Check_taxaCreateWithoutAccountsInput, Check_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Check_taxaUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Check_taxaWhereUniqueInput
    data: XOR<Check_taxaUpdateWithoutAccountsInput, Check_taxaUncheckedUpdateWithoutAccountsInput>
  }

  export type Check_taxaUpdateManyWithWhereWithoutAccountsInput = {
    where: Check_taxaScalarWhereInput
    data: XOR<Check_taxaUpdateManyMutationInput, Check_taxaUncheckedUpdateManyWithoutCheck_taxaInput>
  }

  export type Check_taxaScalarWhereInput = {
    AND?: Enumerable<Check_taxaScalarWhereInput>
    OR?: Enumerable<Check_taxaScalarWhereInput>
    NOT?: Enumerable<Check_taxaScalarWhereInput>
    check_taxon_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    check_id?: UuidNullableFilter | string | null
    taxon_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Check_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Check_valuesWhereUniqueInput
    update: XOR<Check_valuesUpdateWithoutAccountsInput, Check_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Check_valuesCreateWithoutAccountsInput, Check_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Check_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Check_valuesWhereUniqueInput
    data: XOR<Check_valuesUpdateWithoutAccountsInput, Check_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type Check_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: Check_valuesScalarWhereInput
    data: XOR<Check_valuesUpdateManyMutationInput, Check_valuesUncheckedUpdateManyWithoutCheck_valuesInput>
  }

  export type Check_valuesScalarWhereInput = {
    AND?: Enumerable<Check_valuesScalarWhereInput>
    OR?: Enumerable<Check_valuesScalarWhereInput>
    NOT?: Enumerable<Check_valuesScalarWhereInput>
    check_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    check_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type ChecksUpsertWithWhereUniqueWithoutAccountsInput = {
    where: ChecksWhereUniqueInput
    update: XOR<ChecksUpdateWithoutAccountsInput, ChecksUncheckedUpdateWithoutAccountsInput>
    create: XOR<ChecksCreateWithoutAccountsInput, ChecksUncheckedCreateWithoutAccountsInput>
  }

  export type ChecksUpdateWithWhereUniqueWithoutAccountsInput = {
    where: ChecksWhereUniqueInput
    data: XOR<ChecksUpdateWithoutAccountsInput, ChecksUncheckedUpdateWithoutAccountsInput>
  }

  export type ChecksUpdateManyWithWhereWithoutAccountsInput = {
    where: ChecksScalarWhereInput
    data: XOR<ChecksUpdateManyMutationInput, ChecksUncheckedUpdateManyWithoutChecksInput>
  }

  export type ChecksScalarWhereInput = {
    AND?: Enumerable<ChecksScalarWhereInput>
    OR?: Enumerable<ChecksScalarWhereInput>
    NOT?: Enumerable<ChecksScalarWhereInput>
    check_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    date?: DateTimeNullableFilter | Date | string | null
    data?: JsonNullableFilter
    relevant_for_reports?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type FieldsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: FieldsWhereUniqueInput
    update: XOR<FieldsUpdateWithoutAccountsInput, FieldsUncheckedUpdateWithoutAccountsInput>
    create: XOR<FieldsCreateWithoutAccountsInput, FieldsUncheckedCreateWithoutAccountsInput>
  }

  export type FieldsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: FieldsWhereUniqueInput
    data: XOR<FieldsUpdateWithoutAccountsInput, FieldsUncheckedUpdateWithoutAccountsInput>
  }

  export type FieldsUpdateManyWithWhereWithoutAccountsInput = {
    where: FieldsScalarWhereInput
    data: XOR<FieldsUpdateManyMutationInput, FieldsUncheckedUpdateManyWithoutFieldsInput>
  }

  export type FieldsScalarWhereInput = {
    AND?: Enumerable<FieldsScalarWhereInput>
    OR?: Enumerable<FieldsScalarWhereInput>
    NOT?: Enumerable<FieldsScalarWhereInput>
    field_id?: UuidFilter | string
    project_id?: UuidNullableFilter | string | null
    account_id?: UuidNullableFilter | string | null
    table_name?: StringNullableFilter | string | null
    field_type_id?: UuidNullableFilter | string | null
    widget_type_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    field_label?: StringNullableFilter | string | null
    list_id?: UuidNullableFilter | string | null
    preset?: StringNullableFilter | string | null
    obsolete?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type FilesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: FilesWhereUniqueInput
    update: XOR<FilesUpdateWithoutAccountsInput, FilesUncheckedUpdateWithoutAccountsInput>
    create: XOR<FilesCreateWithoutAccountsInput, FilesUncheckedCreateWithoutAccountsInput>
  }

  export type FilesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: FilesWhereUniqueInput
    data: XOR<FilesUpdateWithoutAccountsInput, FilesUncheckedUpdateWithoutAccountsInput>
  }

  export type FilesUpdateManyWithWhereWithoutAccountsInput = {
    where: FilesScalarWhereInput
    data: XOR<FilesUpdateManyMutationInput, FilesUncheckedUpdateManyWithoutFilesInput>
  }

  export type FilesScalarWhereInput = {
    AND?: Enumerable<FilesScalarWhereInput>
    OR?: Enumerable<FilesScalarWhereInput>
    NOT?: Enumerable<FilesScalarWhereInput>
    file_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    action_id?: UuidNullableFilter | string | null
    check_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    mimetype?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Goal_report_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Goal_report_valuesWhereUniqueInput
    update: XOR<Goal_report_valuesUpdateWithoutAccountsInput, Goal_report_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Goal_report_valuesCreateWithoutAccountsInput, Goal_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_report_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Goal_report_valuesWhereUniqueInput
    data: XOR<Goal_report_valuesUpdateWithoutAccountsInput, Goal_report_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type Goal_report_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: Goal_report_valuesScalarWhereInput
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyWithoutGoal_report_valuesInput>
  }

  export type Goal_report_valuesScalarWhereInput = {
    AND?: Enumerable<Goal_report_valuesScalarWhereInput>
    OR?: Enumerable<Goal_report_valuesScalarWhereInput>
    NOT?: Enumerable<Goal_report_valuesScalarWhereInput>
    goal_report_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    goal_report_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Goal_reportsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Goal_reportsWhereUniqueInput
    update: XOR<Goal_reportsUpdateWithoutAccountsInput, Goal_reportsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Goal_reportsCreateWithoutAccountsInput, Goal_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_reportsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Goal_reportsWhereUniqueInput
    data: XOR<Goal_reportsUpdateWithoutAccountsInput, Goal_reportsUncheckedUpdateWithoutAccountsInput>
  }

  export type Goal_reportsUpdateManyWithWhereWithoutAccountsInput = {
    where: Goal_reportsScalarWhereInput
    data: XOR<Goal_reportsUpdateManyMutationInput, Goal_reportsUncheckedUpdateManyWithoutGoal_reportsInput>
  }

  export type Goal_reportsScalarWhereInput = {
    AND?: Enumerable<Goal_reportsScalarWhereInput>
    OR?: Enumerable<Goal_reportsScalarWhereInput>
    NOT?: Enumerable<Goal_reportsScalarWhereInput>
    goal_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    goal_id?: UuidNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type GoalsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: GoalsWhereUniqueInput
    update: XOR<GoalsUpdateWithoutAccountsInput, GoalsUncheckedUpdateWithoutAccountsInput>
    create: XOR<GoalsCreateWithoutAccountsInput, GoalsUncheckedCreateWithoutAccountsInput>
  }

  export type GoalsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: GoalsWhereUniqueInput
    data: XOR<GoalsUpdateWithoutAccountsInput, GoalsUncheckedUpdateWithoutAccountsInput>
  }

  export type GoalsUpdateManyWithWhereWithoutAccountsInput = {
    where: GoalsScalarWhereInput
    data: XOR<GoalsUpdateManyMutationInput, GoalsUncheckedUpdateManyWithoutGoalsInput>
  }

  export type GoalsScalarWhereInput = {
    AND?: Enumerable<GoalsScalarWhereInput>
    OR?: Enumerable<GoalsScalarWhereInput>
    NOT?: Enumerable<GoalsScalarWhereInput>
    goal_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    name?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type List_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: List_valuesWhereUniqueInput
    update: XOR<List_valuesUpdateWithoutAccountsInput, List_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<List_valuesCreateWithoutAccountsInput, List_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type List_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: List_valuesWhereUniqueInput
    data: XOR<List_valuesUpdateWithoutAccountsInput, List_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type List_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: List_valuesScalarWhereInput
    data: XOR<List_valuesUpdateManyMutationInput, List_valuesUncheckedUpdateManyWithoutList_valuesInput>
  }

  export type List_valuesScalarWhereInput = {
    AND?: Enumerable<List_valuesScalarWhereInput>
    OR?: Enumerable<List_valuesScalarWhereInput>
    NOT?: Enumerable<List_valuesScalarWhereInput>
    list_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    list_id?: UuidNullableFilter | string | null
    value?: StringNullableFilter | string | null
    obsolete?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type ListsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: ListsWhereUniqueInput
    update: XOR<ListsUpdateWithoutAccountsInput, ListsUncheckedUpdateWithoutAccountsInput>
    create: XOR<ListsCreateWithoutAccountsInput, ListsUncheckedCreateWithoutAccountsInput>
  }

  export type ListsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: ListsWhereUniqueInput
    data: XOR<ListsUpdateWithoutAccountsInput, ListsUncheckedUpdateWithoutAccountsInput>
  }

  export type ListsUpdateManyWithWhereWithoutAccountsInput = {
    where: ListsScalarWhereInput
    data: XOR<ListsUpdateManyMutationInput, ListsUncheckedUpdateManyWithoutListsInput>
  }

  export type ListsScalarWhereInput = {
    AND?: Enumerable<ListsScalarWhereInput>
    OR?: Enumerable<ListsScalarWhereInput>
    NOT?: Enumerable<ListsScalarWhereInput>
    list_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    obsolete?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Observation_sourcesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Observation_sourcesWhereUniqueInput
    update: XOR<Observation_sourcesUpdateWithoutAccountsInput, Observation_sourcesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Observation_sourcesCreateWithoutAccountsInput, Observation_sourcesUncheckedCreateWithoutAccountsInput>
  }

  export type Observation_sourcesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Observation_sourcesWhereUniqueInput
    data: XOR<Observation_sourcesUpdateWithoutAccountsInput, Observation_sourcesUncheckedUpdateWithoutAccountsInput>
  }

  export type Observation_sourcesUpdateManyWithWhereWithoutAccountsInput = {
    where: Observation_sourcesScalarWhereInput
    data: XOR<Observation_sourcesUpdateManyMutationInput, Observation_sourcesUncheckedUpdateManyWithoutObservation_sourcesInput>
  }

  export type Observation_sourcesScalarWhereInput = {
    AND?: Enumerable<Observation_sourcesScalarWhereInput>
    OR?: Enumerable<Observation_sourcesScalarWhereInput>
    NOT?: Enumerable<Observation_sourcesScalarWhereInput>
    observation_source_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type ObservationsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: ObservationsWhereUniqueInput
    update: XOR<ObservationsUpdateWithoutAccountsInput, ObservationsUncheckedUpdateWithoutAccountsInput>
    create: XOR<ObservationsCreateWithoutAccountsInput, ObservationsUncheckedCreateWithoutAccountsInput>
  }

  export type ObservationsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: ObservationsWhereUniqueInput
    data: XOR<ObservationsUpdateWithoutAccountsInput, ObservationsUncheckedUpdateWithoutAccountsInput>
  }

  export type ObservationsUpdateManyWithWhereWithoutAccountsInput = {
    where: ObservationsScalarWhereInput
    data: XOR<ObservationsUpdateManyMutationInput, ObservationsUncheckedUpdateManyWithoutObservationsInput>
  }

  export type ObservationsScalarWhereInput = {
    AND?: Enumerable<ObservationsScalarWhereInput>
    OR?: Enumerable<ObservationsScalarWhereInput>
    NOT?: Enumerable<ObservationsScalarWhereInput>
    observation_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    observation_source_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    id_in_source?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    observation_data?: JsonNullableFilter
    date?: DateTimeNullableFilter | Date | string | null
    author?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type PersonsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: PersonsWhereUniqueInput
    update: XOR<PersonsUpdateWithoutAccountsInput, PersonsUncheckedUpdateWithoutAccountsInput>
    create: XOR<PersonsCreateWithoutAccountsInput, PersonsUncheckedCreateWithoutAccountsInput>
  }

  export type PersonsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: PersonsWhereUniqueInput
    data: XOR<PersonsUpdateWithoutAccountsInput, PersonsUncheckedUpdateWithoutAccountsInput>
  }

  export type PersonsUpdateManyWithWhereWithoutAccountsInput = {
    where: PersonsScalarWhereInput
    data: XOR<PersonsUpdateManyMutationInput, PersonsUncheckedUpdateManyWithoutPersonsInput>
  }

  export type PersonsScalarWhereInput = {
    AND?: Enumerable<PersonsScalarWhereInput>
    OR?: Enumerable<PersonsScalarWhereInput>
    NOT?: Enumerable<PersonsScalarWhereInput>
    person_id?: UuidFilter | string
    project_id?: UuidNullableFilter | string | null
    account_id?: UuidNullableFilter | string | null
    email?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Place_levelsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Place_levelsWhereUniqueInput
    update: XOR<Place_levelsUpdateWithoutAccountsInput, Place_levelsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Place_levelsCreateWithoutAccountsInput, Place_levelsUncheckedCreateWithoutAccountsInput>
  }

  export type Place_levelsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Place_levelsWhereUniqueInput
    data: XOR<Place_levelsUpdateWithoutAccountsInput, Place_levelsUncheckedUpdateWithoutAccountsInput>
  }

  export type Place_levelsUpdateManyWithWhereWithoutAccountsInput = {
    where: Place_levelsScalarWhereInput
    data: XOR<Place_levelsUpdateManyMutationInput, Place_levelsUncheckedUpdateManyWithoutPlace_levelsInput>
  }

  export type Place_levelsScalarWhereInput = {
    AND?: Enumerable<Place_levelsScalarWhereInput>
    OR?: Enumerable<Place_levelsScalarWhereInput>
    NOT?: Enumerable<Place_levelsScalarWhereInput>
    place_level_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    level?: IntNullableFilter | number | null
    name_singular?: StringNullableFilter | string | null
    name_plural?: StringNullableFilter | string | null
    name_short?: StringNullableFilter | string | null
    reports?: BoolNullableFilter | boolean | null
    report_values?: BoolNullableFilter | boolean | null
    actions?: BoolNullableFilter | boolean | null
    action_values?: BoolNullableFilter | boolean | null
    action_reports?: BoolNullableFilter | boolean | null
    checks?: BoolNullableFilter | boolean | null
    check_values?: BoolNullableFilter | boolean | null
    check_taxa?: BoolNullableFilter | boolean | null
    observation_references?: BoolNullableFilter | boolean | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Place_report_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Place_report_valuesWhereUniqueInput
    update: XOR<Place_report_valuesUpdateWithoutAccountsInput, Place_report_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Place_report_valuesCreateWithoutAccountsInput, Place_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Place_report_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Place_report_valuesWhereUniqueInput
    data: XOR<Place_report_valuesUpdateWithoutAccountsInput, Place_report_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type Place_report_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: Place_report_valuesScalarWhereInput
    data: XOR<Place_report_valuesUpdateManyMutationInput, Place_report_valuesUncheckedUpdateManyWithoutPlace_report_valuesInput>
  }

  export type Place_report_valuesScalarWhereInput = {
    AND?: Enumerable<Place_report_valuesScalarWhereInput>
    OR?: Enumerable<Place_report_valuesScalarWhereInput>
    NOT?: Enumerable<Place_report_valuesScalarWhereInput>
    place_report_value_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_report_id?: UuidNullableFilter | string | null
    unit_id?: UuidNullableFilter | string | null
    value_integer?: IntNullableFilter | number | null
    value_numeric?: FloatNullableFilter | number | null
    value_text?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Place_reportsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Place_reportsWhereUniqueInput
    update: XOR<Place_reportsUpdateWithoutAccountsInput, Place_reportsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Place_reportsCreateWithoutAccountsInput, Place_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Place_reportsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Place_reportsWhereUniqueInput
    data: XOR<Place_reportsUpdateWithoutAccountsInput, Place_reportsUncheckedUpdateWithoutAccountsInput>
  }

  export type Place_reportsUpdateManyWithWhereWithoutAccountsInput = {
    where: Place_reportsScalarWhereInput
    data: XOR<Place_reportsUpdateManyMutationInput, Place_reportsUncheckedUpdateManyWithoutPlace_reportsInput>
  }

  export type Place_reportsScalarWhereInput = {
    AND?: Enumerable<Place_reportsScalarWhereInput>
    OR?: Enumerable<Place_reportsScalarWhereInput>
    NOT?: Enumerable<Place_reportsScalarWhereInput>
    place_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Place_usersUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Place_usersWhereUniqueInput
    update: XOR<Place_usersUpdateWithoutAccountsInput, Place_usersUncheckedUpdateWithoutAccountsInput>
    create: XOR<Place_usersCreateWithoutAccountsInput, Place_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Place_usersUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Place_usersWhereUniqueInput
    data: XOR<Place_usersUpdateWithoutAccountsInput, Place_usersUncheckedUpdateWithoutAccountsInput>
  }

  export type Place_usersUpdateManyWithWhereWithoutAccountsInput = {
    where: Place_usersScalarWhereInput
    data: XOR<Place_usersUpdateManyMutationInput, Place_usersUncheckedUpdateManyWithoutPlace_usersInput>
  }

  export type Place_usersScalarWhereInput = {
    AND?: Enumerable<Place_usersScalarWhereInput>
    OR?: Enumerable<Place_usersScalarWhereInput>
    NOT?: Enumerable<Place_usersScalarWhereInput>
    place_user_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    place_id?: UuidNullableFilter | string | null
    user_id?: UuidNullableFilter | string | null
    role?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type PlacesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: PlacesWhereUniqueInput
    update: XOR<PlacesUpdateWithoutAccountsInput, PlacesUncheckedUpdateWithoutAccountsInput>
    create: XOR<PlacesCreateWithoutAccountsInput, PlacesUncheckedCreateWithoutAccountsInput>
  }

  export type PlacesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: PlacesWhereUniqueInput
    data: XOR<PlacesUpdateWithoutAccountsInput, PlacesUncheckedUpdateWithoutAccountsInput>
  }

  export type PlacesUpdateManyWithWhereWithoutAccountsInput = {
    where: PlacesScalarWhereInput
    data: XOR<PlacesUpdateManyMutationInput, PlacesUncheckedUpdateManyWithoutPlacesInput>
  }

  export type PlacesScalarWhereInput = {
    AND?: Enumerable<PlacesScalarWhereInput>
    OR?: Enumerable<PlacesScalarWhereInput>
    NOT?: Enumerable<PlacesScalarWhereInput>
    place_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    parent_id?: UuidNullableFilter | string | null
    level?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    files_active_places?: BoolNullableFilter | boolean | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Project_reportsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Project_reportsWhereUniqueInput
    update: XOR<Project_reportsUpdateWithoutAccountsInput, Project_reportsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Project_reportsCreateWithoutAccountsInput, Project_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Project_reportsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Project_reportsWhereUniqueInput
    data: XOR<Project_reportsUpdateWithoutAccountsInput, Project_reportsUncheckedUpdateWithoutAccountsInput>
  }

  export type Project_reportsUpdateManyWithWhereWithoutAccountsInput = {
    where: Project_reportsScalarWhereInput
    data: XOR<Project_reportsUpdateManyMutationInput, Project_reportsUncheckedUpdateManyWithoutProject_reportsInput>
  }

  export type Project_reportsScalarWhereInput = {
    AND?: Enumerable<Project_reportsScalarWhereInput>
    OR?: Enumerable<Project_reportsScalarWhereInput>
    NOT?: Enumerable<Project_reportsScalarWhereInput>
    project_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Project_usersUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Project_usersWhereUniqueInput
    update: XOR<Project_usersUpdateWithoutAccountsInput, Project_usersUncheckedUpdateWithoutAccountsInput>
    create: XOR<Project_usersCreateWithoutAccountsInput, Project_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Project_usersUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Project_usersWhereUniqueInput
    data: XOR<Project_usersUpdateWithoutAccountsInput, Project_usersUncheckedUpdateWithoutAccountsInput>
  }

  export type Project_usersUpdateManyWithWhereWithoutAccountsInput = {
    where: Project_usersScalarWhereInput
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyWithoutProject_usersInput>
  }

  export type Project_usersScalarWhereInput = {
    AND?: Enumerable<Project_usersScalarWhereInput>
    OR?: Enumerable<Project_usersScalarWhereInput>
    NOT?: Enumerable<Project_usersScalarWhereInput>
    project_user_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    user_id?: UuidNullableFilter | string | null
    role?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type ProjectsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: ProjectsWhereUniqueInput
    update: XOR<ProjectsUpdateWithoutAccountsInput, ProjectsUncheckedUpdateWithoutAccountsInput>
    create: XOR<ProjectsCreateWithoutAccountsInput, ProjectsUncheckedCreateWithoutAccountsInput>
  }

  export type ProjectsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: ProjectsWhereUniqueInput
    data: XOR<ProjectsUpdateWithoutAccountsInput, ProjectsUncheckedUpdateWithoutAccountsInput>
  }

  export type ProjectsUpdateManyWithWhereWithoutAccountsInput = {
    where: ProjectsScalarWhereInput
    data: XOR<ProjectsUpdateManyMutationInput, ProjectsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type ProjectsScalarWhereInput = {
    AND?: Enumerable<ProjectsScalarWhereInput>
    OR?: Enumerable<ProjectsScalarWhereInput>
    NOT?: Enumerable<ProjectsScalarWhereInput>
    project_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    subproject_name_singular?: StringNullableFilter | string | null
    subproject_name_plural?: StringNullableFilter | string | null
    subproject_order_by?: StringNullableFilter | string | null
    places_label_by?: StringNullableFilter | string | null
    places_order_by?: JsonNullableFilter
    persons_label_by?: StringNullableFilter | string | null
    persons_order_by?: StringNullableFilter | string | null
    goal_reports_label_by?: StringNullableFilter | string | null
    goal_reports_order_by?: StringNullableFilter | string | null
    values_on_multiple_levels?: StringNullableFilter | string | null
    multiple_action_values_on_same_level?: StringNullableFilter | string | null
    multiple_check_values_on_same_level?: StringNullableFilter | string | null
    data?: JsonNullableFilter
    files_active_projects?: BoolNullableFilter | boolean | null
    files_active_projects_reports?: BoolNullableFilter | boolean | null
    files_active_subprojects?: BoolNullableFilter | boolean | null
    files_active_subproject_reports?: BoolNullableFilter | boolean | null
    files_active_places?: BoolNullableFilter | boolean | null
    files_active_actions?: BoolNullableFilter | boolean | null
    files_active_checks?: BoolNullableFilter | boolean | null
    files_active_check_reports?: BoolNullableFilter | boolean | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Subproject_reportsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_reportsWhereUniqueInput
    update: XOR<Subproject_reportsUpdateWithoutAccountsInput, Subproject_reportsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Subproject_reportsCreateWithoutAccountsInput, Subproject_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_reportsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_reportsWhereUniqueInput
    data: XOR<Subproject_reportsUpdateWithoutAccountsInput, Subproject_reportsUncheckedUpdateWithoutAccountsInput>
  }

  export type Subproject_reportsUpdateManyWithWhereWithoutAccountsInput = {
    where: Subproject_reportsScalarWhereInput
    data: XOR<Subproject_reportsUpdateManyMutationInput, Subproject_reportsUncheckedUpdateManyWithoutSubproject_reportsInput>
  }

  export type Subproject_reportsScalarWhereInput = {
    AND?: Enumerable<Subproject_reportsScalarWhereInput>
    OR?: Enumerable<Subproject_reportsScalarWhereInput>
    NOT?: Enumerable<Subproject_reportsScalarWhereInput>
    subproject_report_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Subproject_taxaUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_taxaWhereUniqueInput
    update: XOR<Subproject_taxaUpdateWithoutAccountsInput, Subproject_taxaUncheckedUpdateWithoutAccountsInput>
    create: XOR<Subproject_taxaCreateWithoutAccountsInput, Subproject_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_taxaUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_taxaWhereUniqueInput
    data: XOR<Subproject_taxaUpdateWithoutAccountsInput, Subproject_taxaUncheckedUpdateWithoutAccountsInput>
  }

  export type Subproject_taxaUpdateManyWithWhereWithoutAccountsInput = {
    where: Subproject_taxaScalarWhereInput
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyWithoutSubproject_taxaInput>
  }

  export type Subproject_taxaScalarWhereInput = {
    AND?: Enumerable<Subproject_taxaScalarWhereInput>
    OR?: Enumerable<Subproject_taxaScalarWhereInput>
    NOT?: Enumerable<Subproject_taxaScalarWhereInput>
    subproject_taxon_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    taxon_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type Subproject_usersUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_usersWhereUniqueInput
    update: XOR<Subproject_usersUpdateWithoutAccountsInput, Subproject_usersUncheckedUpdateWithoutAccountsInput>
    create: XOR<Subproject_usersCreateWithoutAccountsInput, Subproject_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_usersUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_usersWhereUniqueInput
    data: XOR<Subproject_usersUpdateWithoutAccountsInput, Subproject_usersUncheckedUpdateWithoutAccountsInput>
  }

  export type Subproject_usersUpdateManyWithWhereWithoutAccountsInput = {
    where: Subproject_usersScalarWhereInput
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyWithoutSubproject_usersInput>
  }

  export type Subproject_usersScalarWhereInput = {
    AND?: Enumerable<Subproject_usersScalarWhereInput>
    OR?: Enumerable<Subproject_usersScalarWhereInput>
    NOT?: Enumerable<Subproject_usersScalarWhereInput>
    subproject_user_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    subproject_id?: UuidNullableFilter | string | null
    user_id?: UuidNullableFilter | string | null
    role?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type SubprojectsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: SubprojectsWhereUniqueInput
    update: XOR<SubprojectsUpdateWithoutAccountsInput, SubprojectsUncheckedUpdateWithoutAccountsInput>
    create: XOR<SubprojectsCreateWithoutAccountsInput, SubprojectsUncheckedCreateWithoutAccountsInput>
  }

  export type SubprojectsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: SubprojectsWhereUniqueInput
    data: XOR<SubprojectsUpdateWithoutAccountsInput, SubprojectsUncheckedUpdateWithoutAccountsInput>
  }

  export type SubprojectsUpdateManyWithWhereWithoutAccountsInput = {
    where: SubprojectsScalarWhereInput
    data: XOR<SubprojectsUpdateManyMutationInput, SubprojectsUncheckedUpdateManyWithoutSubprojectsInput>
  }

  export type SubprojectsScalarWhereInput = {
    AND?: Enumerable<SubprojectsScalarWhereInput>
    OR?: Enumerable<SubprojectsScalarWhereInput>
    NOT?: Enumerable<SubprojectsScalarWhereInput>
    subproject_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    since_year?: IntNullableFilter | number | null
    data?: JsonNullableFilter
    deleted?: BoolNullableFilter | boolean | null
  }

  export type TaxaUpsertWithWhereUniqueWithoutAccountsInput = {
    where: TaxaWhereUniqueInput
    update: XOR<TaxaUpdateWithoutAccountsInput, TaxaUncheckedUpdateWithoutAccountsInput>
    create: XOR<TaxaCreateWithoutAccountsInput, TaxaUncheckedCreateWithoutAccountsInput>
  }

  export type TaxaUpdateWithWhereUniqueWithoutAccountsInput = {
    where: TaxaWhereUniqueInput
    data: XOR<TaxaUpdateWithoutAccountsInput, TaxaUncheckedUpdateWithoutAccountsInput>
  }

  export type TaxaUpdateManyWithWhereWithoutAccountsInput = {
    where: TaxaScalarWhereInput
    data: XOR<TaxaUpdateManyMutationInput, TaxaUncheckedUpdateManyWithoutTaxaInput>
  }

  export type TaxaScalarWhereInput = {
    AND?: Enumerable<TaxaScalarWhereInput>
    OR?: Enumerable<TaxaScalarWhereInput>
    NOT?: Enumerable<TaxaScalarWhereInput>
    taxon_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    taxonomy_id?: UuidNullableFilter | string | null
    name?: StringNullableFilter | string | null
    id_in_source?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type TaxonomiesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: TaxonomiesWhereUniqueInput
    update: XOR<TaxonomiesUpdateWithoutAccountsInput, TaxonomiesUncheckedUpdateWithoutAccountsInput>
    create: XOR<TaxonomiesCreateWithoutAccountsInput, TaxonomiesUncheckedCreateWithoutAccountsInput>
  }

  export type TaxonomiesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: TaxonomiesWhereUniqueInput
    data: XOR<TaxonomiesUpdateWithoutAccountsInput, TaxonomiesUncheckedUpdateWithoutAccountsInput>
  }

  export type TaxonomiesUpdateManyWithWhereWithoutAccountsInput = {
    where: TaxonomiesScalarWhereInput
    data: XOR<TaxonomiesUpdateManyMutationInput, TaxonomiesUncheckedUpdateManyWithoutTaxonomiesInput>
  }

  export type TaxonomiesScalarWhereInput = {
    AND?: Enumerable<TaxonomiesScalarWhereInput>
    OR?: Enumerable<TaxonomiesScalarWhereInput>
    NOT?: Enumerable<TaxonomiesScalarWhereInput>
    taxonomy_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    type?: StringNullableFilter | string | null
    name?: StringNullableFilter | string | null
    url?: StringNullableFilter | string | null
    obsolete?: BoolNullableFilter | boolean | null
    data?: JsonNullableFilter
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type UnitsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: UnitsWhereUniqueInput
    update: XOR<UnitsUpdateWithoutAccountsInput, UnitsUncheckedUpdateWithoutAccountsInput>
    create: XOR<UnitsCreateWithoutAccountsInput, UnitsUncheckedCreateWithoutAccountsInput>
  }

  export type UnitsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: UnitsWhereUniqueInput
    data: XOR<UnitsUpdateWithoutAccountsInput, UnitsUncheckedUpdateWithoutAccountsInput>
  }

  export type UnitsUpdateManyWithWhereWithoutAccountsInput = {
    where: UnitsScalarWhereInput
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyWithoutUnitsInput>
  }

  export type UnitsScalarWhereInput = {
    AND?: Enumerable<UnitsScalarWhereInput>
    OR?: Enumerable<UnitsScalarWhereInput>
    NOT?: Enumerable<UnitsScalarWhereInput>
    unit_id?: UuidFilter | string
    account_id?: UuidNullableFilter | string | null
    project_id?: UuidNullableFilter | string | null
    use_for_action_values?: BoolNullableFilter | boolean | null
    use_for_action_report_values?: BoolNullableFilter | boolean | null
    use_for_check_values?: BoolNullableFilter | boolean | null
    use_for_place_report_values?: BoolNullableFilter | boolean | null
    use_for_goal_report_values?: BoolNullableFilter | boolean | null
    use_for_subproject_taxa?: BoolNullableFilter | boolean | null
    use_for_check_taxa?: BoolNullableFilter | boolean | null
    name?: StringNullableFilter | string | null
    summable?: BoolNullableFilter | boolean | null
    sort?: IntNullableFilter | number | null
    type?: StringNullableFilter | string | null
    list_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type AccountsCreateWithoutAction_report_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutAction_report_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutAction_report_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutAction_report_valuesInput, AccountsUncheckedCreateWithoutAction_report_valuesInput>
  }

  export type Action_reportsCreateWithoutAction_report_valuesInput = {
    action_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutAction_reportsInput
    actions?: ActionsCreateNestedOneWithoutAction_reportsInput
  }

  export type Action_reportsUncheckedCreateWithoutAction_report_valuesInput = {
    action_report_id: string
    account_id?: string | null
    action_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_reportsCreateOrConnectWithoutAction_report_valuesInput = {
    where: Action_reportsWhereUniqueInput
    create: XOR<Action_reportsCreateWithoutAction_report_valuesInput, Action_reportsUncheckedCreateWithoutAction_report_valuesInput>
  }

  export type UnitsCreateWithoutAction_report_valuesInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutAction_report_valuesInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutAction_report_valuesInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutAction_report_valuesInput, UnitsUncheckedCreateWithoutAction_report_valuesInput>
  }

  export type AccountsUpsertWithoutAction_report_valuesInput = {
    update: XOR<AccountsUpdateWithoutAction_report_valuesInput, AccountsUncheckedUpdateWithoutAction_report_valuesInput>
    create: XOR<AccountsCreateWithoutAction_report_valuesInput, AccountsUncheckedCreateWithoutAction_report_valuesInput>
  }

  export type AccountsUpdateWithoutAction_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutAction_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type Action_reportsUpsertWithoutAction_report_valuesInput = {
    update: XOR<Action_reportsUpdateWithoutAction_report_valuesInput, Action_reportsUncheckedUpdateWithoutAction_report_valuesInput>
    create: XOR<Action_reportsCreateWithoutAction_report_valuesInput, Action_reportsUncheckedCreateWithoutAction_report_valuesInput>
  }

  export type Action_reportsUpdateWithoutAction_report_valuesInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutAction_reportsNestedInput
    actions?: ActionsUpdateOneWithoutAction_reportsNestedInput
  }

  export type Action_reportsUncheckedUpdateWithoutAction_report_valuesInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpsertWithoutAction_report_valuesInput = {
    update: XOR<UnitsUpdateWithoutAction_report_valuesInput, UnitsUncheckedUpdateWithoutAction_report_valuesInput>
    create: XOR<UnitsCreateWithoutAction_report_valuesInput, UnitsUncheckedCreateWithoutAction_report_valuesInput>
  }

  export type UnitsUpdateWithoutAction_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutAction_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type Action_report_valuesCreateWithoutAction_reportsInput = {
    action_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutAction_report_valuesInput
    units?: UnitsCreateNestedOneWithoutAction_report_valuesInput
  }

  export type Action_report_valuesUncheckedCreateWithoutAction_reportsInput = {
    action_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesCreateOrConnectWithoutAction_reportsInput = {
    where: Action_report_valuesWhereUniqueInput
    create: XOR<Action_report_valuesCreateWithoutAction_reportsInput, Action_report_valuesUncheckedCreateWithoutAction_reportsInput>
  }

  export type Action_report_valuesCreateManyAction_reportsInputEnvelope = {
    data: Enumerable<Action_report_valuesCreateManyAction_reportsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutAction_reportsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutAction_reportsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutAction_reportsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutAction_reportsInput, AccountsUncheckedCreateWithoutAction_reportsInput>
  }

  export type ActionsCreateWithoutAction_reportsInput = {
    action_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_values?: Action_valuesCreateNestedManyWithoutActionsInput
    accounts?: AccountsCreateNestedOneWithoutActionsInput
    places?: PlacesCreateNestedOneWithoutActionsInput
    files?: FilesCreateNestedManyWithoutActionsInput
  }

  export type ActionsUncheckedCreateWithoutAction_reportsInput = {
    action_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutActionsInput
    files?: FilesUncheckedCreateNestedManyWithoutActionsInput
  }

  export type ActionsCreateOrConnectWithoutAction_reportsInput = {
    where: ActionsWhereUniqueInput
    create: XOR<ActionsCreateWithoutAction_reportsInput, ActionsUncheckedCreateWithoutAction_reportsInput>
  }

  export type Action_report_valuesUpsertWithWhereUniqueWithoutAction_reportsInput = {
    where: Action_report_valuesWhereUniqueInput
    update: XOR<Action_report_valuesUpdateWithoutAction_reportsInput, Action_report_valuesUncheckedUpdateWithoutAction_reportsInput>
    create: XOR<Action_report_valuesCreateWithoutAction_reportsInput, Action_report_valuesUncheckedCreateWithoutAction_reportsInput>
  }

  export type Action_report_valuesUpdateWithWhereUniqueWithoutAction_reportsInput = {
    where: Action_report_valuesWhereUniqueInput
    data: XOR<Action_report_valuesUpdateWithoutAction_reportsInput, Action_report_valuesUncheckedUpdateWithoutAction_reportsInput>
  }

  export type Action_report_valuesUpdateManyWithWhereWithoutAction_reportsInput = {
    where: Action_report_valuesScalarWhereInput
    data: XOR<Action_report_valuesUpdateManyMutationInput, Action_report_valuesUncheckedUpdateManyWithoutAction_report_valuesInput>
  }

  export type AccountsUpsertWithoutAction_reportsInput = {
    update: XOR<AccountsUpdateWithoutAction_reportsInput, AccountsUncheckedUpdateWithoutAction_reportsInput>
    create: XOR<AccountsCreateWithoutAction_reportsInput, AccountsUncheckedCreateWithoutAction_reportsInput>
  }

  export type AccountsUpdateWithoutAction_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutAction_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ActionsUpsertWithoutAction_reportsInput = {
    update: XOR<ActionsUpdateWithoutAction_reportsInput, ActionsUncheckedUpdateWithoutAction_reportsInput>
    create: XOR<ActionsCreateWithoutAction_reportsInput, ActionsUncheckedCreateWithoutAction_reportsInput>
  }

  export type ActionsUpdateWithoutAction_reportsInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: Action_valuesUpdateManyWithoutActionsNestedInput
    accounts?: AccountsUpdateOneWithoutActionsNestedInput
    places?: PlacesUpdateOneWithoutActionsNestedInput
    files?: FilesUpdateManyWithoutActionsNestedInput
  }

  export type ActionsUncheckedUpdateWithoutAction_reportsInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: Action_valuesUncheckedUpdateManyWithoutActionsNestedInput
    files?: FilesUncheckedUpdateManyWithoutActionsNestedInput
  }

  export type AccountsCreateWithoutAction_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutAction_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutAction_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutAction_valuesInput, AccountsUncheckedCreateWithoutAction_valuesInput>
  }

  export type ActionsCreateWithoutAction_valuesInput = {
    action_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsCreateNestedManyWithoutActionsInput
    accounts?: AccountsCreateNestedOneWithoutActionsInput
    places?: PlacesCreateNestedOneWithoutActionsInput
    files?: FilesCreateNestedManyWithoutActionsInput
  }

  export type ActionsUncheckedCreateWithoutAction_valuesInput = {
    action_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutActionsInput
    files?: FilesUncheckedCreateNestedManyWithoutActionsInput
  }

  export type ActionsCreateOrConnectWithoutAction_valuesInput = {
    where: ActionsWhereUniqueInput
    create: XOR<ActionsCreateWithoutAction_valuesInput, ActionsUncheckedCreateWithoutAction_valuesInput>
  }

  export type UnitsCreateWithoutAction_valuesInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutAction_valuesInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutAction_valuesInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutAction_valuesInput, UnitsUncheckedCreateWithoutAction_valuesInput>
  }

  export type AccountsUpsertWithoutAction_valuesInput = {
    update: XOR<AccountsUpdateWithoutAction_valuesInput, AccountsUncheckedUpdateWithoutAction_valuesInput>
    create: XOR<AccountsCreateWithoutAction_valuesInput, AccountsUncheckedCreateWithoutAction_valuesInput>
  }

  export type AccountsUpdateWithoutAction_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutAction_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ActionsUpsertWithoutAction_valuesInput = {
    update: XOR<ActionsUpdateWithoutAction_valuesInput, ActionsUncheckedUpdateWithoutAction_valuesInput>
    create: XOR<ActionsCreateWithoutAction_valuesInput, ActionsUncheckedCreateWithoutAction_valuesInput>
  }

  export type ActionsUpdateWithoutAction_valuesInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUpdateManyWithoutActionsNestedInput
    accounts?: AccountsUpdateOneWithoutActionsNestedInput
    places?: PlacesUpdateOneWithoutActionsNestedInput
    files?: FilesUpdateManyWithoutActionsNestedInput
  }

  export type ActionsUncheckedUpdateWithoutAction_valuesInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUncheckedUpdateManyWithoutActionsNestedInput
    files?: FilesUncheckedUpdateManyWithoutActionsNestedInput
  }

  export type UnitsUpsertWithoutAction_valuesInput = {
    update: XOR<UnitsUpdateWithoutAction_valuesInput, UnitsUncheckedUpdateWithoutAction_valuesInput>
    create: XOR<UnitsCreateWithoutAction_valuesInput, UnitsUncheckedCreateWithoutAction_valuesInput>
  }

  export type UnitsUpdateWithoutAction_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutAction_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type Action_reportsCreateWithoutActionsInput = {
    action_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAction_reportsInput
    accounts?: AccountsCreateNestedOneWithoutAction_reportsInput
  }

  export type Action_reportsUncheckedCreateWithoutActionsInput = {
    action_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAction_reportsInput
  }

  export type Action_reportsCreateOrConnectWithoutActionsInput = {
    where: Action_reportsWhereUniqueInput
    create: XOR<Action_reportsCreateWithoutActionsInput, Action_reportsUncheckedCreateWithoutActionsInput>
  }

  export type Action_reportsCreateManyActionsInputEnvelope = {
    data: Enumerable<Action_reportsCreateManyActionsInput>
    skipDuplicates?: boolean
  }

  export type Action_valuesCreateWithoutActionsInput = {
    action_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutAction_valuesInput
    units?: UnitsCreateNestedOneWithoutAction_valuesInput
  }

  export type Action_valuesUncheckedCreateWithoutActionsInput = {
    action_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesCreateOrConnectWithoutActionsInput = {
    where: Action_valuesWhereUniqueInput
    create: XOR<Action_valuesCreateWithoutActionsInput, Action_valuesUncheckedCreateWithoutActionsInput>
  }

  export type Action_valuesCreateManyActionsInputEnvelope = {
    data: Enumerable<Action_valuesCreateManyActionsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutActionsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutActionsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutActionsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutActionsInput, AccountsUncheckedCreateWithoutActionsInput>
  }

  export type PlacesCreateWithoutActionsInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutActionsInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutActionsInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutActionsInput, PlacesUncheckedCreateWithoutActionsInput>
  }

  export type FilesCreateWithoutActionsInput = {
    file_id: string
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFilesInput
    checks?: ChecksCreateNestedOneWithoutFilesInput
    places?: PlacesCreateNestedOneWithoutFilesInput
    projects?: ProjectsCreateNestedOneWithoutFilesInput
    subprojects?: SubprojectsCreateNestedOneWithoutFilesInput
  }

  export type FilesUncheckedCreateWithoutActionsInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateOrConnectWithoutActionsInput = {
    where: FilesWhereUniqueInput
    create: XOR<FilesCreateWithoutActionsInput, FilesUncheckedCreateWithoutActionsInput>
  }

  export type FilesCreateManyActionsInputEnvelope = {
    data: Enumerable<FilesCreateManyActionsInput>
    skipDuplicates?: boolean
  }

  export type Action_reportsUpsertWithWhereUniqueWithoutActionsInput = {
    where: Action_reportsWhereUniqueInput
    update: XOR<Action_reportsUpdateWithoutActionsInput, Action_reportsUncheckedUpdateWithoutActionsInput>
    create: XOR<Action_reportsCreateWithoutActionsInput, Action_reportsUncheckedCreateWithoutActionsInput>
  }

  export type Action_reportsUpdateWithWhereUniqueWithoutActionsInput = {
    where: Action_reportsWhereUniqueInput
    data: XOR<Action_reportsUpdateWithoutActionsInput, Action_reportsUncheckedUpdateWithoutActionsInput>
  }

  export type Action_reportsUpdateManyWithWhereWithoutActionsInput = {
    where: Action_reportsScalarWhereInput
    data: XOR<Action_reportsUpdateManyMutationInput, Action_reportsUncheckedUpdateManyWithoutAction_reportsInput>
  }

  export type Action_valuesUpsertWithWhereUniqueWithoutActionsInput = {
    where: Action_valuesWhereUniqueInput
    update: XOR<Action_valuesUpdateWithoutActionsInput, Action_valuesUncheckedUpdateWithoutActionsInput>
    create: XOR<Action_valuesCreateWithoutActionsInput, Action_valuesUncheckedCreateWithoutActionsInput>
  }

  export type Action_valuesUpdateWithWhereUniqueWithoutActionsInput = {
    where: Action_valuesWhereUniqueInput
    data: XOR<Action_valuesUpdateWithoutActionsInput, Action_valuesUncheckedUpdateWithoutActionsInput>
  }

  export type Action_valuesUpdateManyWithWhereWithoutActionsInput = {
    where: Action_valuesScalarWhereInput
    data: XOR<Action_valuesUpdateManyMutationInput, Action_valuesUncheckedUpdateManyWithoutAction_valuesInput>
  }

  export type AccountsUpsertWithoutActionsInput = {
    update: XOR<AccountsUpdateWithoutActionsInput, AccountsUncheckedUpdateWithoutActionsInput>
    create: XOR<AccountsCreateWithoutActionsInput, AccountsUncheckedCreateWithoutActionsInput>
  }

  export type AccountsUpdateWithoutActionsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutActionsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type PlacesUpsertWithoutActionsInput = {
    update: XOR<PlacesUpdateWithoutActionsInput, PlacesUncheckedUpdateWithoutActionsInput>
    create: XOR<PlacesCreateWithoutActionsInput, PlacesUncheckedCreateWithoutActionsInput>
  }

  export type PlacesUpdateWithoutActionsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutActionsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type FilesUpsertWithWhereUniqueWithoutActionsInput = {
    where: FilesWhereUniqueInput
    update: XOR<FilesUpdateWithoutActionsInput, FilesUncheckedUpdateWithoutActionsInput>
    create: XOR<FilesCreateWithoutActionsInput, FilesUncheckedCreateWithoutActionsInput>
  }

  export type FilesUpdateWithWhereUniqueWithoutActionsInput = {
    where: FilesWhereUniqueInput
    data: XOR<FilesUpdateWithoutActionsInput, FilesUncheckedUpdateWithoutActionsInput>
  }

  export type FilesUpdateManyWithWhereWithoutActionsInput = {
    where: FilesScalarWhereInput
    data: XOR<FilesUpdateManyMutationInput, FilesUncheckedUpdateManyWithoutFilesInput>
  }

  export type AccountsCreateWithoutCheck_taxaInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutCheck_taxaInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutCheck_taxaInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutCheck_taxaInput, AccountsUncheckedCreateWithoutCheck_taxaInput>
  }

  export type ChecksCreateWithoutCheck_taxaInput = {
    check_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_values?: Check_valuesCreateNestedManyWithoutChecksInput
    accounts?: AccountsCreateNestedOneWithoutChecksInput
    places?: PlacesCreateNestedOneWithoutChecksInput
    files?: FilesCreateNestedManyWithoutChecksInput
  }

  export type ChecksUncheckedCreateWithoutCheck_taxaInput = {
    check_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutChecksInput
    files?: FilesUncheckedCreateNestedManyWithoutChecksInput
  }

  export type ChecksCreateOrConnectWithoutCheck_taxaInput = {
    where: ChecksWhereUniqueInput
    create: XOR<ChecksCreateWithoutCheck_taxaInput, ChecksUncheckedCreateWithoutCheck_taxaInput>
  }

  export type TaxaCreateWithoutCheck_taxaInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutTaxaInput
    accounts?: AccountsCreateNestedOneWithoutTaxaInput
    taxonomies?: TaxonomiesCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateWithoutCheck_taxaInput = {
    taxon_id: string
    account_id?: string | null
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaCreateOrConnectWithoutCheck_taxaInput = {
    where: TaxaWhereUniqueInput
    create: XOR<TaxaCreateWithoutCheck_taxaInput, TaxaUncheckedCreateWithoutCheck_taxaInput>
  }

  export type UnitsCreateWithoutCheck_taxaInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutCheck_taxaInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutCheck_taxaInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutCheck_taxaInput, UnitsUncheckedCreateWithoutCheck_taxaInput>
  }

  export type AccountsUpsertWithoutCheck_taxaInput = {
    update: XOR<AccountsUpdateWithoutCheck_taxaInput, AccountsUncheckedUpdateWithoutCheck_taxaInput>
    create: XOR<AccountsCreateWithoutCheck_taxaInput, AccountsUncheckedCreateWithoutCheck_taxaInput>
  }

  export type AccountsUpdateWithoutCheck_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutCheck_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ChecksUpsertWithoutCheck_taxaInput = {
    update: XOR<ChecksUpdateWithoutCheck_taxaInput, ChecksUncheckedUpdateWithoutCheck_taxaInput>
    create: XOR<ChecksCreateWithoutCheck_taxaInput, ChecksUncheckedCreateWithoutCheck_taxaInput>
  }

  export type ChecksUpdateWithoutCheck_taxaInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: Check_valuesUpdateManyWithoutChecksNestedInput
    accounts?: AccountsUpdateOneWithoutChecksNestedInput
    places?: PlacesUpdateOneWithoutChecksNestedInput
    files?: FilesUpdateManyWithoutChecksNestedInput
  }

  export type ChecksUncheckedUpdateWithoutCheck_taxaInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: Check_valuesUncheckedUpdateManyWithoutChecksNestedInput
    files?: FilesUncheckedUpdateManyWithoutChecksNestedInput
  }

  export type TaxaUpsertWithoutCheck_taxaInput = {
    update: XOR<TaxaUpdateWithoutCheck_taxaInput, TaxaUncheckedUpdateWithoutCheck_taxaInput>
    create: XOR<TaxaCreateWithoutCheck_taxaInput, TaxaUncheckedCreateWithoutCheck_taxaInput>
  }

  export type TaxaUpdateWithoutCheck_taxaInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUpdateManyWithoutTaxaNestedInput
    accounts?: AccountsUpdateOneWithoutTaxaNestedInput
    taxonomies?: TaxonomiesUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateWithoutCheck_taxaInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type UnitsUpsertWithoutCheck_taxaInput = {
    update: XOR<UnitsUpdateWithoutCheck_taxaInput, UnitsUncheckedUpdateWithoutCheck_taxaInput>
    create: XOR<UnitsCreateWithoutCheck_taxaInput, UnitsUncheckedCreateWithoutCheck_taxaInput>
  }

  export type UnitsUpdateWithoutCheck_taxaInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutCheck_taxaInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type AccountsCreateWithoutCheck_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutCheck_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutCheck_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutCheck_valuesInput, AccountsUncheckedCreateWithoutCheck_valuesInput>
  }

  export type ChecksCreateWithoutCheck_valuesInput = {
    check_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutChecksInput
    accounts?: AccountsCreateNestedOneWithoutChecksInput
    places?: PlacesCreateNestedOneWithoutChecksInput
    files?: FilesCreateNestedManyWithoutChecksInput
  }

  export type ChecksUncheckedCreateWithoutCheck_valuesInput = {
    check_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutChecksInput
    files?: FilesUncheckedCreateNestedManyWithoutChecksInput
  }

  export type ChecksCreateOrConnectWithoutCheck_valuesInput = {
    where: ChecksWhereUniqueInput
    create: XOR<ChecksCreateWithoutCheck_valuesInput, ChecksUncheckedCreateWithoutCheck_valuesInput>
  }

  export type UnitsCreateWithoutCheck_valuesInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutCheck_valuesInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutCheck_valuesInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutCheck_valuesInput, UnitsUncheckedCreateWithoutCheck_valuesInput>
  }

  export type AccountsUpsertWithoutCheck_valuesInput = {
    update: XOR<AccountsUpdateWithoutCheck_valuesInput, AccountsUncheckedUpdateWithoutCheck_valuesInput>
    create: XOR<AccountsCreateWithoutCheck_valuesInput, AccountsUncheckedCreateWithoutCheck_valuesInput>
  }

  export type AccountsUpdateWithoutCheck_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutCheck_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ChecksUpsertWithoutCheck_valuesInput = {
    update: XOR<ChecksUpdateWithoutCheck_valuesInput, ChecksUncheckedUpdateWithoutCheck_valuesInput>
    create: XOR<ChecksCreateWithoutCheck_valuesInput, ChecksUncheckedCreateWithoutCheck_valuesInput>
  }

  export type ChecksUpdateWithoutCheck_valuesInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutChecksNestedInput
    accounts?: AccountsUpdateOneWithoutChecksNestedInput
    places?: PlacesUpdateOneWithoutChecksNestedInput
    files?: FilesUpdateManyWithoutChecksNestedInput
  }

  export type ChecksUncheckedUpdateWithoutCheck_valuesInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutChecksNestedInput
    files?: FilesUncheckedUpdateManyWithoutChecksNestedInput
  }

  export type UnitsUpsertWithoutCheck_valuesInput = {
    update: XOR<UnitsUpdateWithoutCheck_valuesInput, UnitsUncheckedUpdateWithoutCheck_valuesInput>
    create: XOR<UnitsCreateWithoutCheck_valuesInput, UnitsUncheckedCreateWithoutCheck_valuesInput>
  }

  export type UnitsUpdateWithoutCheck_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutCheck_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type Check_taxaCreateWithoutChecksInput = {
    check_taxon_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutCheck_taxaInput
    taxa?: TaxaCreateNestedOneWithoutCheck_taxaInput
    units?: UnitsCreateNestedOneWithoutCheck_taxaInput
  }

  export type Check_taxaUncheckedCreateWithoutChecksInput = {
    check_taxon_id: string
    account_id?: string | null
    taxon_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaCreateOrConnectWithoutChecksInput = {
    where: Check_taxaWhereUniqueInput
    create: XOR<Check_taxaCreateWithoutChecksInput, Check_taxaUncheckedCreateWithoutChecksInput>
  }

  export type Check_taxaCreateManyChecksInputEnvelope = {
    data: Enumerable<Check_taxaCreateManyChecksInput>
    skipDuplicates?: boolean
  }

  export type Check_valuesCreateWithoutChecksInput = {
    check_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutCheck_valuesInput
    units?: UnitsCreateNestedOneWithoutCheck_valuesInput
  }

  export type Check_valuesUncheckedCreateWithoutChecksInput = {
    check_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesCreateOrConnectWithoutChecksInput = {
    where: Check_valuesWhereUniqueInput
    create: XOR<Check_valuesCreateWithoutChecksInput, Check_valuesUncheckedCreateWithoutChecksInput>
  }

  export type Check_valuesCreateManyChecksInputEnvelope = {
    data: Enumerable<Check_valuesCreateManyChecksInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutChecksInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutChecksInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutChecksInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutChecksInput, AccountsUncheckedCreateWithoutChecksInput>
  }

  export type PlacesCreateWithoutChecksInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutChecksInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutChecksInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutChecksInput, PlacesUncheckedCreateWithoutChecksInput>
  }

  export type FilesCreateWithoutChecksInput = {
    file_id: string
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFilesInput
    actions?: ActionsCreateNestedOneWithoutFilesInput
    places?: PlacesCreateNestedOneWithoutFilesInput
    projects?: ProjectsCreateNestedOneWithoutFilesInput
    subprojects?: SubprojectsCreateNestedOneWithoutFilesInput
  }

  export type FilesUncheckedCreateWithoutChecksInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateOrConnectWithoutChecksInput = {
    where: FilesWhereUniqueInput
    create: XOR<FilesCreateWithoutChecksInput, FilesUncheckedCreateWithoutChecksInput>
  }

  export type FilesCreateManyChecksInputEnvelope = {
    data: Enumerable<FilesCreateManyChecksInput>
    skipDuplicates?: boolean
  }

  export type Check_taxaUpsertWithWhereUniqueWithoutChecksInput = {
    where: Check_taxaWhereUniqueInput
    update: XOR<Check_taxaUpdateWithoutChecksInput, Check_taxaUncheckedUpdateWithoutChecksInput>
    create: XOR<Check_taxaCreateWithoutChecksInput, Check_taxaUncheckedCreateWithoutChecksInput>
  }

  export type Check_taxaUpdateWithWhereUniqueWithoutChecksInput = {
    where: Check_taxaWhereUniqueInput
    data: XOR<Check_taxaUpdateWithoutChecksInput, Check_taxaUncheckedUpdateWithoutChecksInput>
  }

  export type Check_taxaUpdateManyWithWhereWithoutChecksInput = {
    where: Check_taxaScalarWhereInput
    data: XOR<Check_taxaUpdateManyMutationInput, Check_taxaUncheckedUpdateManyWithoutCheck_taxaInput>
  }

  export type Check_valuesUpsertWithWhereUniqueWithoutChecksInput = {
    where: Check_valuesWhereUniqueInput
    update: XOR<Check_valuesUpdateWithoutChecksInput, Check_valuesUncheckedUpdateWithoutChecksInput>
    create: XOR<Check_valuesCreateWithoutChecksInput, Check_valuesUncheckedCreateWithoutChecksInput>
  }

  export type Check_valuesUpdateWithWhereUniqueWithoutChecksInput = {
    where: Check_valuesWhereUniqueInput
    data: XOR<Check_valuesUpdateWithoutChecksInput, Check_valuesUncheckedUpdateWithoutChecksInput>
  }

  export type Check_valuesUpdateManyWithWhereWithoutChecksInput = {
    where: Check_valuesScalarWhereInput
    data: XOR<Check_valuesUpdateManyMutationInput, Check_valuesUncheckedUpdateManyWithoutCheck_valuesInput>
  }

  export type AccountsUpsertWithoutChecksInput = {
    update: XOR<AccountsUpdateWithoutChecksInput, AccountsUncheckedUpdateWithoutChecksInput>
    create: XOR<AccountsCreateWithoutChecksInput, AccountsUncheckedCreateWithoutChecksInput>
  }

  export type AccountsUpdateWithoutChecksInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutChecksInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type PlacesUpsertWithoutChecksInput = {
    update: XOR<PlacesUpdateWithoutChecksInput, PlacesUncheckedUpdateWithoutChecksInput>
    create: XOR<PlacesCreateWithoutChecksInput, PlacesUncheckedCreateWithoutChecksInput>
  }

  export type PlacesUpdateWithoutChecksInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutChecksInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type FilesUpsertWithWhereUniqueWithoutChecksInput = {
    where: FilesWhereUniqueInput
    update: XOR<FilesUpdateWithoutChecksInput, FilesUncheckedUpdateWithoutChecksInput>
    create: XOR<FilesCreateWithoutChecksInput, FilesUncheckedCreateWithoutChecksInput>
  }

  export type FilesUpdateWithWhereUniqueWithoutChecksInput = {
    where: FilesWhereUniqueInput
    data: XOR<FilesUpdateWithoutChecksInput, FilesUncheckedUpdateWithoutChecksInput>
  }

  export type FilesUpdateManyWithWhereWithoutChecksInput = {
    where: FilesScalarWhereInput
    data: XOR<FilesUpdateManyMutationInput, FilesUncheckedUpdateManyWithoutFilesInput>
  }

  export type FieldsCreateWithoutField_typesInput = {
    field_id: string
    table_name?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFieldsInput
    lists?: ListsCreateNestedOneWithoutFieldsInput
    projects?: ProjectsCreateNestedOneWithoutFieldsInput
    widget_types?: Widget_typesCreateNestedOneWithoutFieldsInput
  }

  export type FieldsUncheckedCreateWithoutField_typesInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsCreateOrConnectWithoutField_typesInput = {
    where: FieldsWhereUniqueInput
    create: XOR<FieldsCreateWithoutField_typesInput, FieldsUncheckedCreateWithoutField_typesInput>
  }

  export type FieldsCreateManyField_typesInputEnvelope = {
    data: Enumerable<FieldsCreateManyField_typesInput>
    skipDuplicates?: boolean
  }

  export type Widgets_for_fieldsCreateWithoutField_typesInput = {
    widget_for_field_id: string
    label?: string | null
    deleted?: boolean | null
    widget_types?: Widget_typesCreateNestedOneWithoutWidgets_for_fieldsInput
  }

  export type Widgets_for_fieldsUncheckedCreateWithoutField_typesInput = {
    widget_for_field_id: string
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsCreateOrConnectWithoutField_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    create: XOR<Widgets_for_fieldsCreateWithoutField_typesInput, Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>
  }

  export type Widgets_for_fieldsCreateManyField_typesInputEnvelope = {
    data: Enumerable<Widgets_for_fieldsCreateManyField_typesInput>
    skipDuplicates?: boolean
  }

  export type FieldsUpsertWithWhereUniqueWithoutField_typesInput = {
    where: FieldsWhereUniqueInput
    update: XOR<FieldsUpdateWithoutField_typesInput, FieldsUncheckedUpdateWithoutField_typesInput>
    create: XOR<FieldsCreateWithoutField_typesInput, FieldsUncheckedCreateWithoutField_typesInput>
  }

  export type FieldsUpdateWithWhereUniqueWithoutField_typesInput = {
    where: FieldsWhereUniqueInput
    data: XOR<FieldsUpdateWithoutField_typesInput, FieldsUncheckedUpdateWithoutField_typesInput>
  }

  export type FieldsUpdateManyWithWhereWithoutField_typesInput = {
    where: FieldsScalarWhereInput
    data: XOR<FieldsUpdateManyMutationInput, FieldsUncheckedUpdateManyWithoutFieldsInput>
  }

  export type Widgets_for_fieldsUpsertWithWhereUniqueWithoutField_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    update: XOR<Widgets_for_fieldsUpdateWithoutField_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutField_typesInput>
    create: XOR<Widgets_for_fieldsCreateWithoutField_typesInput, Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>
  }

  export type Widgets_for_fieldsUpdateWithWhereUniqueWithoutField_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    data: XOR<Widgets_for_fieldsUpdateWithoutField_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutField_typesInput>
  }

  export type Widgets_for_fieldsUpdateManyWithWhereWithoutField_typesInput = {
    where: Widgets_for_fieldsScalarWhereInput
    data: XOR<Widgets_for_fieldsUpdateManyMutationInput, Widgets_for_fieldsUncheckedUpdateManyWithoutWidgets_for_fieldsInput>
  }

  export type Widgets_for_fieldsScalarWhereInput = {
    AND?: Enumerable<Widgets_for_fieldsScalarWhereInput>
    OR?: Enumerable<Widgets_for_fieldsScalarWhereInput>
    NOT?: Enumerable<Widgets_for_fieldsScalarWhereInput>
    widget_for_field_id?: UuidFilter | string
    field_type_id?: UuidNullableFilter | string | null
    widget_type_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    deleted?: BoolNullableFilter | boolean | null
  }

  export type AccountsCreateWithoutFieldsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutFieldsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutFieldsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutFieldsInput, AccountsUncheckedCreateWithoutFieldsInput>
  }

  export type Field_typesCreateWithoutFieldsInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesUncheckedCreateWithoutFieldsInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesCreateOrConnectWithoutFieldsInput = {
    where: Field_typesWhereUniqueInput
    create: XOR<Field_typesCreateWithoutFieldsInput, Field_typesUncheckedCreateWithoutFieldsInput>
  }

  export type ListsCreateWithoutFieldsInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutFieldsInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutFieldsInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutFieldsInput, ListsUncheckedCreateWithoutFieldsInput>
  }

  export type ProjectsCreateWithoutFieldsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutFieldsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutFieldsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutFieldsInput, ProjectsUncheckedCreateWithoutFieldsInput>
  }

  export type Widget_typesCreateWithoutFieldsInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesUncheckedCreateWithoutFieldsInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesCreateOrConnectWithoutFieldsInput = {
    where: Widget_typesWhereUniqueInput
    create: XOR<Widget_typesCreateWithoutFieldsInput, Widget_typesUncheckedCreateWithoutFieldsInput>
  }

  export type AccountsUpsertWithoutFieldsInput = {
    update: XOR<AccountsUpdateWithoutFieldsInput, AccountsUncheckedUpdateWithoutFieldsInput>
    create: XOR<AccountsCreateWithoutFieldsInput, AccountsUncheckedCreateWithoutFieldsInput>
  }

  export type AccountsUpdateWithoutFieldsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutFieldsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type Field_typesUpsertWithoutFieldsInput = {
    update: XOR<Field_typesUpdateWithoutFieldsInput, Field_typesUncheckedUpdateWithoutFieldsInput>
    create: XOR<Field_typesCreateWithoutFieldsInput, Field_typesUncheckedCreateWithoutFieldsInput>
  }

  export type Field_typesUpdateWithoutFieldsInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUpdateManyWithoutField_typesNestedInput
  }

  export type Field_typesUncheckedUpdateWithoutFieldsInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedUpdateManyWithoutField_typesNestedInput
  }

  export type ListsUpsertWithoutFieldsInput = {
    update: XOR<ListsUpdateWithoutFieldsInput, ListsUncheckedUpdateWithoutFieldsInput>
    create: XOR<ListsCreateWithoutFieldsInput, ListsUncheckedCreateWithoutFieldsInput>
  }

  export type ListsUpdateWithoutFieldsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutFieldsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ProjectsUpsertWithoutFieldsInput = {
    update: XOR<ProjectsUpdateWithoutFieldsInput, ProjectsUncheckedUpdateWithoutFieldsInput>
    create: XOR<ProjectsCreateWithoutFieldsInput, ProjectsUncheckedCreateWithoutFieldsInput>
  }

  export type ProjectsUpdateWithoutFieldsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutFieldsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type Widget_typesUpsertWithoutFieldsInput = {
    update: XOR<Widget_typesUpdateWithoutFieldsInput, Widget_typesUncheckedUpdateWithoutFieldsInput>
    create: XOR<Widget_typesCreateWithoutFieldsInput, Widget_typesUncheckedCreateWithoutFieldsInput>
  }

  export type Widget_typesUpdateWithoutFieldsInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUpdateManyWithoutWidget_typesNestedInput
  }

  export type Widget_typesUncheckedUpdateWithoutFieldsInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedUpdateManyWithoutWidget_typesNestedInput
  }

  export type AccountsCreateWithoutFilesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutFilesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutFilesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutFilesInput, AccountsUncheckedCreateWithoutFilesInput>
  }

  export type ActionsCreateWithoutFilesInput = {
    action_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesCreateNestedManyWithoutActionsInput
    accounts?: AccountsCreateNestedOneWithoutActionsInput
    places?: PlacesCreateNestedOneWithoutActionsInput
  }

  export type ActionsUncheckedCreateWithoutFilesInput = {
    action_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutActionsInput
  }

  export type ActionsCreateOrConnectWithoutFilesInput = {
    where: ActionsWhereUniqueInput
    create: XOR<ActionsCreateWithoutFilesInput, ActionsUncheckedCreateWithoutFilesInput>
  }

  export type ChecksCreateWithoutFilesInput = {
    check_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesCreateNestedManyWithoutChecksInput
    accounts?: AccountsCreateNestedOneWithoutChecksInput
    places?: PlacesCreateNestedOneWithoutChecksInput
  }

  export type ChecksUncheckedCreateWithoutFilesInput = {
    check_id: string
    account_id?: string | null
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutChecksInput
  }

  export type ChecksCreateOrConnectWithoutFilesInput = {
    where: ChecksWhereUniqueInput
    create: XOR<ChecksCreateWithoutFilesInput, ChecksUncheckedCreateWithoutFilesInput>
  }

  export type PlacesCreateWithoutFilesInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutFilesInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutFilesInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutFilesInput, PlacesUncheckedCreateWithoutFilesInput>
  }

  export type ProjectsCreateWithoutFilesInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutFilesInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutFilesInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutFilesInput, ProjectsUncheckedCreateWithoutFilesInput>
  }

  export type SubprojectsCreateWithoutFilesInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutFilesInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutFilesInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutFilesInput, SubprojectsUncheckedCreateWithoutFilesInput>
  }

  export type AccountsUpsertWithoutFilesInput = {
    update: XOR<AccountsUpdateWithoutFilesInput, AccountsUncheckedUpdateWithoutFilesInput>
    create: XOR<AccountsCreateWithoutFilesInput, AccountsUncheckedCreateWithoutFilesInput>
  }

  export type AccountsUpdateWithoutFilesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutFilesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ActionsUpsertWithoutFilesInput = {
    update: XOR<ActionsUpdateWithoutFilesInput, ActionsUncheckedUpdateWithoutFilesInput>
    create: XOR<ActionsCreateWithoutFilesInput, ActionsUncheckedCreateWithoutFilesInput>
  }

  export type ActionsUpdateWithoutFilesInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUpdateManyWithoutActionsNestedInput
    accounts?: AccountsUpdateOneWithoutActionsNestedInput
    places?: PlacesUpdateOneWithoutActionsNestedInput
  }

  export type ActionsUncheckedUpdateWithoutFilesInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUncheckedUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutActionsNestedInput
  }

  export type ChecksUpsertWithoutFilesInput = {
    update: XOR<ChecksUpdateWithoutFilesInput, ChecksUncheckedUpdateWithoutFilesInput>
    create: XOR<ChecksCreateWithoutFilesInput, ChecksUncheckedCreateWithoutFilesInput>
  }

  export type ChecksUpdateWithoutFilesInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUpdateManyWithoutChecksNestedInput
    accounts?: AccountsUpdateOneWithoutChecksNestedInput
    places?: PlacesUpdateOneWithoutChecksNestedInput
  }

  export type ChecksUncheckedUpdateWithoutFilesInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutChecksNestedInput
  }

  export type PlacesUpsertWithoutFilesInput = {
    update: XOR<PlacesUpdateWithoutFilesInput, PlacesUncheckedUpdateWithoutFilesInput>
    create: XOR<PlacesCreateWithoutFilesInput, PlacesUncheckedCreateWithoutFilesInput>
  }

  export type PlacesUpdateWithoutFilesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutFilesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type ProjectsUpsertWithoutFilesInput = {
    update: XOR<ProjectsUpdateWithoutFilesInput, ProjectsUncheckedUpdateWithoutFilesInput>
    create: XOR<ProjectsCreateWithoutFilesInput, ProjectsUncheckedCreateWithoutFilesInput>
  }

  export type ProjectsUpdateWithoutFilesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutFilesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type SubprojectsUpsertWithoutFilesInput = {
    update: XOR<SubprojectsUpdateWithoutFilesInput, SubprojectsUncheckedUpdateWithoutFilesInput>
    create: XOR<SubprojectsCreateWithoutFilesInput, SubprojectsUncheckedCreateWithoutFilesInput>
  }

  export type SubprojectsUpdateWithoutFilesInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutFilesInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type AccountsCreateWithoutGoal_report_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGoal_report_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGoal_report_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type Goal_reportsCreateWithoutGoal_report_valuesInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_reportsInput
    goals?: GoalsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput = {
    goal_report_id: string
    account_id?: string | null
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsCreateOrConnectWithoutGoal_report_valuesInput = {
    where: Goal_reportsWhereUniqueInput
    create: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type UnitsCreateWithoutGoal_report_valuesInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutGoal_report_valuesInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutGoal_report_valuesInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type AccountsUpsertWithoutGoal_report_valuesInput = {
    update: XOR<AccountsUpdateWithoutGoal_report_valuesInput, AccountsUncheckedUpdateWithoutGoal_report_valuesInput>
    create: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type AccountsUpdateWithoutGoal_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGoal_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type Goal_reportsUpsertWithoutGoal_report_valuesInput = {
    update: XOR<Goal_reportsUpdateWithoutGoal_report_valuesInput, Goal_reportsUncheckedUpdateWithoutGoal_report_valuesInput>
    create: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type Goal_reportsUpdateWithoutGoal_report_valuesInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_reportsNestedInput
    goals?: GoalsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateWithoutGoal_report_valuesInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpsertWithoutGoal_report_valuesInput = {
    update: XOR<UnitsUpdateWithoutGoal_report_valuesInput, UnitsUncheckedUpdateWithoutGoal_report_valuesInput>
    create: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type UnitsUpdateWithoutGoal_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutGoal_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type Goal_report_valuesCreateWithoutGoal_reportsInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_report_valuesInput
    units?: UnitsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput = {
    goal_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput = {
    where: Goal_report_valuesWhereUniqueInput
    create: XOR<Goal_report_valuesCreateWithoutGoal_reportsInput, Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesCreateManyGoal_reportsInputEnvelope = {
    data: Enumerable<Goal_report_valuesCreateManyGoal_reportsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutGoal_reportsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGoal_reportsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGoal_reportsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
  }

  export type GoalsCreateWithoutGoal_reportsInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoalsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateWithoutGoal_reportsInput = {
    goal_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type GoalsCreateOrConnectWithoutGoal_reportsInput = {
    where: GoalsWhereUniqueInput
    create: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUpsertWithWhereUniqueWithoutGoal_reportsInput = {
    where: Goal_report_valuesWhereUniqueInput
    update: XOR<Goal_report_valuesUpdateWithoutGoal_reportsInput, Goal_report_valuesUncheckedUpdateWithoutGoal_reportsInput>
    create: XOR<Goal_report_valuesCreateWithoutGoal_reportsInput, Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUpdateWithWhereUniqueWithoutGoal_reportsInput = {
    where: Goal_report_valuesWhereUniqueInput
    data: XOR<Goal_report_valuesUpdateWithoutGoal_reportsInput, Goal_report_valuesUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUpdateManyWithWhereWithoutGoal_reportsInput = {
    where: Goal_report_valuesScalarWhereInput
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyWithoutGoal_report_valuesInput>
  }

  export type AccountsUpsertWithoutGoal_reportsInput = {
    update: XOR<AccountsUpdateWithoutGoal_reportsInput, AccountsUncheckedUpdateWithoutGoal_reportsInput>
    create: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
  }

  export type AccountsUpdateWithoutGoal_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGoal_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type GoalsUpsertWithoutGoal_reportsInput = {
    update: XOR<GoalsUpdateWithoutGoal_reportsInput, GoalsUncheckedUpdateWithoutGoal_reportsInput>
    create: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
  }

  export type GoalsUpdateWithoutGoal_reportsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoalsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateWithoutGoal_reportsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsCreateWithoutGoalsInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput
    accounts?: AccountsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateWithoutGoalsInput = {
    goal_report_id: string
    account_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput
  }

  export type Goal_reportsCreateOrConnectWithoutGoalsInput = {
    where: Goal_reportsWhereUniqueInput
    create: XOR<Goal_reportsCreateWithoutGoalsInput, Goal_reportsUncheckedCreateWithoutGoalsInput>
  }

  export type Goal_reportsCreateManyGoalsInputEnvelope = {
    data: Enumerable<Goal_reportsCreateManyGoalsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutGoalsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGoalsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGoalsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
  }

  export type SubprojectsCreateWithoutGoalsInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutGoalsInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutGoalsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
  }

  export type Goal_reportsUpsertWithWhereUniqueWithoutGoalsInput = {
    where: Goal_reportsWhereUniqueInput
    update: XOR<Goal_reportsUpdateWithoutGoalsInput, Goal_reportsUncheckedUpdateWithoutGoalsInput>
    create: XOR<Goal_reportsCreateWithoutGoalsInput, Goal_reportsUncheckedCreateWithoutGoalsInput>
  }

  export type Goal_reportsUpdateWithWhereUniqueWithoutGoalsInput = {
    where: Goal_reportsWhereUniqueInput
    data: XOR<Goal_reportsUpdateWithoutGoalsInput, Goal_reportsUncheckedUpdateWithoutGoalsInput>
  }

  export type Goal_reportsUpdateManyWithWhereWithoutGoalsInput = {
    where: Goal_reportsScalarWhereInput
    data: XOR<Goal_reportsUpdateManyMutationInput, Goal_reportsUncheckedUpdateManyWithoutGoal_reportsInput>
  }

  export type AccountsUpsertWithoutGoalsInput = {
    update: XOR<AccountsUpdateWithoutGoalsInput, AccountsUncheckedUpdateWithoutGoalsInput>
    create: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
  }

  export type AccountsUpdateWithoutGoalsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGoalsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithoutGoalsInput = {
    update: XOR<SubprojectsUpdateWithoutGoalsInput, SubprojectsUncheckedUpdateWithoutGoalsInput>
    create: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
  }

  export type SubprojectsUpdateWithoutGoalsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutGoalsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type AccountsCreateWithoutList_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutList_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutList_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
  }

  export type ListsCreateWithoutList_valuesInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutList_valuesInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutList_valuesInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
  }

  export type AccountsUpsertWithoutList_valuesInput = {
    update: XOR<AccountsUpdateWithoutList_valuesInput, AccountsUncheckedUpdateWithoutList_valuesInput>
    create: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
  }

  export type AccountsUpdateWithoutList_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutList_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ListsUpsertWithoutList_valuesInput = {
    update: XOR<ListsUpdateWithoutList_valuesInput, ListsUncheckedUpdateWithoutList_valuesInput>
    create: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
  }

  export type ListsUpdateWithoutList_valuesInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutList_valuesInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type FieldsCreateWithoutListsInput = {
    field_id: string
    table_name?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFieldsInput
    field_types?: Field_typesCreateNestedOneWithoutFieldsInput
    projects?: ProjectsCreateNestedOneWithoutFieldsInput
    widget_types?: Widget_typesCreateNestedOneWithoutFieldsInput
  }

  export type FieldsUncheckedCreateWithoutListsInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsCreateOrConnectWithoutListsInput = {
    where: FieldsWhereUniqueInput
    create: XOR<FieldsCreateWithoutListsInput, FieldsUncheckedCreateWithoutListsInput>
  }

  export type FieldsCreateManyListsInputEnvelope = {
    data: Enumerable<FieldsCreateManyListsInput>
    skipDuplicates?: boolean
  }

  export type List_valuesCreateWithoutListsInput = {
    list_value_id: string
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutList_valuesInput
  }

  export type List_valuesUncheckedCreateWithoutListsInput = {
    list_value_id: string
    account_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type List_valuesCreateOrConnectWithoutListsInput = {
    where: List_valuesWhereUniqueInput
    create: XOR<List_valuesCreateWithoutListsInput, List_valuesUncheckedCreateWithoutListsInput>
  }

  export type List_valuesCreateManyListsInputEnvelope = {
    data: Enumerable<List_valuesCreateManyListsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutListsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutListsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutListsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
  }

  export type ProjectsCreateWithoutListsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutListsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutListsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
  }

  export type UnitsCreateWithoutListsInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutListsInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutListsInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutListsInput, UnitsUncheckedCreateWithoutListsInput>
  }

  export type UnitsCreateManyListsInputEnvelope = {
    data: Enumerable<UnitsCreateManyListsInput>
    skipDuplicates?: boolean
  }

  export type FieldsUpsertWithWhereUniqueWithoutListsInput = {
    where: FieldsWhereUniqueInput
    update: XOR<FieldsUpdateWithoutListsInput, FieldsUncheckedUpdateWithoutListsInput>
    create: XOR<FieldsCreateWithoutListsInput, FieldsUncheckedCreateWithoutListsInput>
  }

  export type FieldsUpdateWithWhereUniqueWithoutListsInput = {
    where: FieldsWhereUniqueInput
    data: XOR<FieldsUpdateWithoutListsInput, FieldsUncheckedUpdateWithoutListsInput>
  }

  export type FieldsUpdateManyWithWhereWithoutListsInput = {
    where: FieldsScalarWhereInput
    data: XOR<FieldsUpdateManyMutationInput, FieldsUncheckedUpdateManyWithoutFieldsInput>
  }

  export type List_valuesUpsertWithWhereUniqueWithoutListsInput = {
    where: List_valuesWhereUniqueInput
    update: XOR<List_valuesUpdateWithoutListsInput, List_valuesUncheckedUpdateWithoutListsInput>
    create: XOR<List_valuesCreateWithoutListsInput, List_valuesUncheckedCreateWithoutListsInput>
  }

  export type List_valuesUpdateWithWhereUniqueWithoutListsInput = {
    where: List_valuesWhereUniqueInput
    data: XOR<List_valuesUpdateWithoutListsInput, List_valuesUncheckedUpdateWithoutListsInput>
  }

  export type List_valuesUpdateManyWithWhereWithoutListsInput = {
    where: List_valuesScalarWhereInput
    data: XOR<List_valuesUpdateManyMutationInput, List_valuesUncheckedUpdateManyWithoutList_valuesInput>
  }

  export type AccountsUpsertWithoutListsInput = {
    update: XOR<AccountsUpdateWithoutListsInput, AccountsUncheckedUpdateWithoutListsInput>
    create: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
  }

  export type AccountsUpdateWithoutListsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutListsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutListsInput = {
    update: XOR<ProjectsUpdateWithoutListsInput, ProjectsUncheckedUpdateWithoutListsInput>
    create: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
  }

  export type ProjectsUpdateWithoutListsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutListsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type UnitsUpsertWithWhereUniqueWithoutListsInput = {
    where: UnitsWhereUniqueInput
    update: XOR<UnitsUpdateWithoutListsInput, UnitsUncheckedUpdateWithoutListsInput>
    create: XOR<UnitsCreateWithoutListsInput, UnitsUncheckedCreateWithoutListsInput>
  }

  export type UnitsUpdateWithWhereUniqueWithoutListsInput = {
    where: UnitsWhereUniqueInput
    data: XOR<UnitsUpdateWithoutListsInput, UnitsUncheckedUpdateWithoutListsInput>
  }

  export type UnitsUpdateManyWithWhereWithoutListsInput = {
    where: UnitsScalarWhereInput
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyWithoutUnitsInput>
  }

  export type User_messagesCreateWithoutMessagesInput = {
    user_message_id: string
    label?: string | null
    read?: boolean | null
    users?: UsersCreateNestedOneWithoutUser_messagesInput
  }

  export type User_messagesUncheckedCreateWithoutMessagesInput = {
    user_message_id: string
    user_id?: string | null
    label?: string | null
    read?: boolean | null
  }

  export type User_messagesCreateOrConnectWithoutMessagesInput = {
    where: User_messagesWhereUniqueInput
    create: XOR<User_messagesCreateWithoutMessagesInput, User_messagesUncheckedCreateWithoutMessagesInput>
  }

  export type User_messagesCreateManyMessagesInputEnvelope = {
    data: Enumerable<User_messagesCreateManyMessagesInput>
    skipDuplicates?: boolean
  }

  export type User_messagesUpsertWithWhereUniqueWithoutMessagesInput = {
    where: User_messagesWhereUniqueInput
    update: XOR<User_messagesUpdateWithoutMessagesInput, User_messagesUncheckedUpdateWithoutMessagesInput>
    create: XOR<User_messagesCreateWithoutMessagesInput, User_messagesUncheckedCreateWithoutMessagesInput>
  }

  export type User_messagesUpdateWithWhereUniqueWithoutMessagesInput = {
    where: User_messagesWhereUniqueInput
    data: XOR<User_messagesUpdateWithoutMessagesInput, User_messagesUncheckedUpdateWithoutMessagesInput>
  }

  export type User_messagesUpdateManyWithWhereWithoutMessagesInput = {
    where: User_messagesScalarWhereInput
    data: XOR<User_messagesUpdateManyMutationInput, User_messagesUncheckedUpdateManyWithoutUser_messagesInput>
  }

  export type User_messagesScalarWhereInput = {
    AND?: Enumerable<User_messagesScalarWhereInput>
    OR?: Enumerable<User_messagesScalarWhereInput>
    NOT?: Enumerable<User_messagesScalarWhereInput>
    user_message_id?: UuidFilter | string
    user_id?: UuidNullableFilter | string | null
    message_id?: UuidNullableFilter | string | null
    label?: StringNullableFilter | string | null
    read?: BoolNullableFilter | boolean | null
  }

  export type AccountsCreateWithoutObservation_sourcesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutObservation_sourcesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutObservation_sourcesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type ProjectsCreateWithoutObservation_sourcesInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutObservation_sourcesInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutObservation_sourcesInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type ObservationsCreateWithoutObservation_sourcesInput = {
    observation_id: string
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservationsInput
    places?: PlacesCreateNestedOneWithoutObservationsInput
  }

  export type ObservationsUncheckedCreateWithoutObservation_sourcesInput = {
    observation_id: string
    account_id?: string | null
    place_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type ObservationsCreateOrConnectWithoutObservation_sourcesInput = {
    where: ObservationsWhereUniqueInput
    create: XOR<ObservationsCreateWithoutObservation_sourcesInput, ObservationsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type ObservationsCreateManyObservation_sourcesInputEnvelope = {
    data: Enumerable<ObservationsCreateManyObservation_sourcesInput>
    skipDuplicates?: boolean
  }

  export type AccountsUpsertWithoutObservation_sourcesInput = {
    update: XOR<AccountsUpdateWithoutObservation_sourcesInput, AccountsUncheckedUpdateWithoutObservation_sourcesInput>
    create: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type AccountsUpdateWithoutObservation_sourcesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutObservation_sourcesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutObservation_sourcesInput = {
    update: XOR<ProjectsUpdateWithoutObservation_sourcesInput, ProjectsUncheckedUpdateWithoutObservation_sourcesInput>
    create: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type ProjectsUpdateWithoutObservation_sourcesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutObservation_sourcesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type ObservationsUpsertWithWhereUniqueWithoutObservation_sourcesInput = {
    where: ObservationsWhereUniqueInput
    update: XOR<ObservationsUpdateWithoutObservation_sourcesInput, ObservationsUncheckedUpdateWithoutObservation_sourcesInput>
    create: XOR<ObservationsCreateWithoutObservation_sourcesInput, ObservationsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type ObservationsUpdateWithWhereUniqueWithoutObservation_sourcesInput = {
    where: ObservationsWhereUniqueInput
    data: XOR<ObservationsUpdateWithoutObservation_sourcesInput, ObservationsUncheckedUpdateWithoutObservation_sourcesInput>
  }

  export type ObservationsUpdateManyWithWhereWithoutObservation_sourcesInput = {
    where: ObservationsScalarWhereInput
    data: XOR<ObservationsUpdateManyMutationInput, ObservationsUncheckedUpdateManyWithoutObservationsInput>
  }

  export type AccountsCreateWithoutObservationsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutObservationsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutObservationsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutObservationsInput, AccountsUncheckedCreateWithoutObservationsInput>
  }

  export type Observation_sourcesCreateWithoutObservationsInput = {
    observation_source_id: string
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservation_sourcesInput
    projects?: ProjectsCreateNestedOneWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUncheckedCreateWithoutObservationsInput = {
    observation_source_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesCreateOrConnectWithoutObservationsInput = {
    where: Observation_sourcesWhereUniqueInput
    create: XOR<Observation_sourcesCreateWithoutObservationsInput, Observation_sourcesUncheckedCreateWithoutObservationsInput>
  }

  export type PlacesCreateWithoutObservationsInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutObservationsInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutObservationsInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutObservationsInput, PlacesUncheckedCreateWithoutObservationsInput>
  }

  export type AccountsUpsertWithoutObservationsInput = {
    update: XOR<AccountsUpdateWithoutObservationsInput, AccountsUncheckedUpdateWithoutObservationsInput>
    create: XOR<AccountsCreateWithoutObservationsInput, AccountsUncheckedCreateWithoutObservationsInput>
  }

  export type AccountsUpdateWithoutObservationsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutObservationsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type Observation_sourcesUpsertWithoutObservationsInput = {
    update: XOR<Observation_sourcesUpdateWithoutObservationsInput, Observation_sourcesUncheckedUpdateWithoutObservationsInput>
    create: XOR<Observation_sourcesCreateWithoutObservationsInput, Observation_sourcesUncheckedCreateWithoutObservationsInput>
  }

  export type Observation_sourcesUpdateWithoutObservationsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservation_sourcesNestedInput
    projects?: ProjectsUpdateOneWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateWithoutObservationsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PlacesUpsertWithoutObservationsInput = {
    update: XOR<PlacesUpdateWithoutObservationsInput, PlacesUncheckedUpdateWithoutObservationsInput>
    create: XOR<PlacesCreateWithoutObservationsInput, PlacesUncheckedCreateWithoutObservationsInput>
  }

  export type PlacesUpdateWithoutObservationsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutObservationsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type AccountsCreateWithoutPersonsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPersonsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPersonsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
  }

  export type ProjectsCreateWithoutPersonsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutPersonsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutPersonsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
  }

  export type AccountsUpsertWithoutPersonsInput = {
    update: XOR<AccountsUpdateWithoutPersonsInput, AccountsUncheckedUpdateWithoutPersonsInput>
    create: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
  }

  export type AccountsUpdateWithoutPersonsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPersonsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutPersonsInput = {
    update: XOR<ProjectsUpdateWithoutPersonsInput, ProjectsUncheckedUpdateWithoutPersonsInput>
    create: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
  }

  export type ProjectsUpdateWithoutPersonsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutPersonsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutPlace_levelsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPlace_levelsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPlace_levelsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
  }

  export type ProjectsCreateWithoutPlace_levelsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutPlace_levelsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutPlace_levelsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
  }

  export type AccountsUpsertWithoutPlace_levelsInput = {
    update: XOR<AccountsUpdateWithoutPlace_levelsInput, AccountsUncheckedUpdateWithoutPlace_levelsInput>
    create: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
  }

  export type AccountsUpdateWithoutPlace_levelsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPlace_levelsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutPlace_levelsInput = {
    update: XOR<ProjectsUpdateWithoutPlace_levelsInput, ProjectsUncheckedUpdateWithoutPlace_levelsInput>
    create: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
  }

  export type ProjectsUpdateWithoutPlace_levelsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutPlace_levelsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutPlace_report_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPlace_report_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPlace_report_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPlace_report_valuesInput, AccountsUncheckedCreateWithoutPlace_report_valuesInput>
  }

  export type Place_reportsCreateWithoutPlace_report_valuesInput = {
    place_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_reportsInput
    places?: PlacesCreateNestedOneWithoutPlace_reportsInput
  }

  export type Place_reportsUncheckedCreateWithoutPlace_report_valuesInput = {
    place_report_id: string
    account_id?: string | null
    place_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_reportsCreateOrConnectWithoutPlace_report_valuesInput = {
    where: Place_reportsWhereUniqueInput
    create: XOR<Place_reportsCreateWithoutPlace_report_valuesInput, Place_reportsUncheckedCreateWithoutPlace_report_valuesInput>
  }

  export type UnitsCreateWithoutPlace_report_valuesInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutPlace_report_valuesInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutPlace_report_valuesInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutPlace_report_valuesInput, UnitsUncheckedCreateWithoutPlace_report_valuesInput>
  }

  export type AccountsUpsertWithoutPlace_report_valuesInput = {
    update: XOR<AccountsUpdateWithoutPlace_report_valuesInput, AccountsUncheckedUpdateWithoutPlace_report_valuesInput>
    create: XOR<AccountsCreateWithoutPlace_report_valuesInput, AccountsUncheckedCreateWithoutPlace_report_valuesInput>
  }

  export type AccountsUpdateWithoutPlace_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPlace_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type Place_reportsUpsertWithoutPlace_report_valuesInput = {
    update: XOR<Place_reportsUpdateWithoutPlace_report_valuesInput, Place_reportsUncheckedUpdateWithoutPlace_report_valuesInput>
    create: XOR<Place_reportsCreateWithoutPlace_report_valuesInput, Place_reportsUncheckedCreateWithoutPlace_report_valuesInput>
  }

  export type Place_reportsUpdateWithoutPlace_report_valuesInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_reportsNestedInput
    places?: PlacesUpdateOneWithoutPlace_reportsNestedInput
  }

  export type Place_reportsUncheckedUpdateWithoutPlace_report_valuesInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpsertWithoutPlace_report_valuesInput = {
    update: XOR<UnitsUpdateWithoutPlace_report_valuesInput, UnitsUncheckedUpdateWithoutPlace_report_valuesInput>
    create: XOR<UnitsCreateWithoutPlace_report_valuesInput, UnitsUncheckedCreateWithoutPlace_report_valuesInput>
  }

  export type UnitsUpdateWithoutPlace_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutPlace_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type Place_report_valuesCreateWithoutPlace_reportsInput = {
    place_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_report_valuesInput
    units?: UnitsCreateNestedOneWithoutPlace_report_valuesInput
  }

  export type Place_report_valuesUncheckedCreateWithoutPlace_reportsInput = {
    place_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesCreateOrConnectWithoutPlace_reportsInput = {
    where: Place_report_valuesWhereUniqueInput
    create: XOR<Place_report_valuesCreateWithoutPlace_reportsInput, Place_report_valuesUncheckedCreateWithoutPlace_reportsInput>
  }

  export type Place_report_valuesCreateManyPlace_reportsInputEnvelope = {
    data: Enumerable<Place_report_valuesCreateManyPlace_reportsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutPlace_reportsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPlace_reportsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPlace_reportsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPlace_reportsInput, AccountsUncheckedCreateWithoutPlace_reportsInput>
  }

  export type PlacesCreateWithoutPlace_reportsInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutPlace_reportsInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutPlace_reportsInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutPlace_reportsInput, PlacesUncheckedCreateWithoutPlace_reportsInput>
  }

  export type Place_report_valuesUpsertWithWhereUniqueWithoutPlace_reportsInput = {
    where: Place_report_valuesWhereUniqueInput
    update: XOR<Place_report_valuesUpdateWithoutPlace_reportsInput, Place_report_valuesUncheckedUpdateWithoutPlace_reportsInput>
    create: XOR<Place_report_valuesCreateWithoutPlace_reportsInput, Place_report_valuesUncheckedCreateWithoutPlace_reportsInput>
  }

  export type Place_report_valuesUpdateWithWhereUniqueWithoutPlace_reportsInput = {
    where: Place_report_valuesWhereUniqueInput
    data: XOR<Place_report_valuesUpdateWithoutPlace_reportsInput, Place_report_valuesUncheckedUpdateWithoutPlace_reportsInput>
  }

  export type Place_report_valuesUpdateManyWithWhereWithoutPlace_reportsInput = {
    where: Place_report_valuesScalarWhereInput
    data: XOR<Place_report_valuesUpdateManyMutationInput, Place_report_valuesUncheckedUpdateManyWithoutPlace_report_valuesInput>
  }

  export type AccountsUpsertWithoutPlace_reportsInput = {
    update: XOR<AccountsUpdateWithoutPlace_reportsInput, AccountsUncheckedUpdateWithoutPlace_reportsInput>
    create: XOR<AccountsCreateWithoutPlace_reportsInput, AccountsUncheckedCreateWithoutPlace_reportsInput>
  }

  export type AccountsUpdateWithoutPlace_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPlace_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type PlacesUpsertWithoutPlace_reportsInput = {
    update: XOR<PlacesUpdateWithoutPlace_reportsInput, PlacesUncheckedUpdateWithoutPlace_reportsInput>
    create: XOR<PlacesCreateWithoutPlace_reportsInput, PlacesUncheckedCreateWithoutPlace_reportsInput>
  }

  export type PlacesUpdateWithoutPlace_reportsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutPlace_reportsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type AccountsCreateWithoutPlace_usersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPlace_usersInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPlace_usersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPlace_usersInput, AccountsUncheckedCreateWithoutPlace_usersInput>
  }

  export type PlacesCreateWithoutPlace_usersInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutPlace_usersInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutPlace_usersInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutPlace_usersInput, PlacesUncheckedCreateWithoutPlace_usersInput>
  }

  export type UsersCreateWithoutPlace_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutPlace_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutPlace_usersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutPlace_usersInput, UsersUncheckedCreateWithoutPlace_usersInput>
  }

  export type AccountsUpsertWithoutPlace_usersInput = {
    update: XOR<AccountsUpdateWithoutPlace_usersInput, AccountsUncheckedUpdateWithoutPlace_usersInput>
    create: XOR<AccountsCreateWithoutPlace_usersInput, AccountsUncheckedCreateWithoutPlace_usersInput>
  }

  export type AccountsUpdateWithoutPlace_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPlace_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type PlacesUpsertWithoutPlace_usersInput = {
    update: XOR<PlacesUpdateWithoutPlace_usersInput, PlacesUncheckedUpdateWithoutPlace_usersInput>
    create: XOR<PlacesCreateWithoutPlace_usersInput, PlacesUncheckedCreateWithoutPlace_usersInput>
  }

  export type PlacesUpdateWithoutPlace_usersInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutPlace_usersInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type UsersUpsertWithoutPlace_usersInput = {
    update: XOR<UsersUpdateWithoutPlace_usersInput, UsersUncheckedUpdateWithoutPlace_usersInput>
    create: XOR<UsersCreateWithoutPlace_usersInput, UsersUncheckedCreateWithoutPlace_usersInput>
  }

  export type UsersUpdateWithoutPlace_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutPlace_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type ActionsCreateWithoutPlacesInput = {
    action_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesCreateNestedManyWithoutActionsInput
    accounts?: AccountsCreateNestedOneWithoutActionsInput
    files?: FilesCreateNestedManyWithoutActionsInput
  }

  export type ActionsUncheckedCreateWithoutPlacesInput = {
    action_id: string
    account_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutActionsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutActionsInput
    files?: FilesUncheckedCreateNestedManyWithoutActionsInput
  }

  export type ActionsCreateOrConnectWithoutPlacesInput = {
    where: ActionsWhereUniqueInput
    create: XOR<ActionsCreateWithoutPlacesInput, ActionsUncheckedCreateWithoutPlacesInput>
  }

  export type ActionsCreateManyPlacesInputEnvelope = {
    data: Enumerable<ActionsCreateManyPlacesInput>
    skipDuplicates?: boolean
  }

  export type ChecksCreateWithoutPlacesInput = {
    check_id: string
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesCreateNestedManyWithoutChecksInput
    accounts?: AccountsCreateNestedOneWithoutChecksInput
    files?: FilesCreateNestedManyWithoutChecksInput
  }

  export type ChecksUncheckedCreateWithoutPlacesInput = {
    check_id: string
    account_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutChecksInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutChecksInput
    files?: FilesUncheckedCreateNestedManyWithoutChecksInput
  }

  export type ChecksCreateOrConnectWithoutPlacesInput = {
    where: ChecksWhereUniqueInput
    create: XOR<ChecksCreateWithoutPlacesInput, ChecksUncheckedCreateWithoutPlacesInput>
  }

  export type ChecksCreateManyPlacesInputEnvelope = {
    data: Enumerable<ChecksCreateManyPlacesInput>
    skipDuplicates?: boolean
  }

  export type FilesCreateWithoutPlacesInput = {
    file_id: string
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFilesInput
    actions?: ActionsCreateNestedOneWithoutFilesInput
    checks?: ChecksCreateNestedOneWithoutFilesInput
    projects?: ProjectsCreateNestedOneWithoutFilesInput
    subprojects?: SubprojectsCreateNestedOneWithoutFilesInput
  }

  export type FilesUncheckedCreateWithoutPlacesInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateOrConnectWithoutPlacesInput = {
    where: FilesWhereUniqueInput
    create: XOR<FilesCreateWithoutPlacesInput, FilesUncheckedCreateWithoutPlacesInput>
  }

  export type FilesCreateManyPlacesInputEnvelope = {
    data: Enumerable<FilesCreateManyPlacesInput>
    skipDuplicates?: boolean
  }

  export type ObservationsCreateWithoutPlacesInput = {
    observation_id: string
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservationsInput
    observation_sources?: Observation_sourcesCreateNestedOneWithoutObservationsInput
  }

  export type ObservationsUncheckedCreateWithoutPlacesInput = {
    observation_id: string
    account_id?: string | null
    observation_source_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type ObservationsCreateOrConnectWithoutPlacesInput = {
    where: ObservationsWhereUniqueInput
    create: XOR<ObservationsCreateWithoutPlacesInput, ObservationsUncheckedCreateWithoutPlacesInput>
  }

  export type ObservationsCreateManyPlacesInputEnvelope = {
    data: Enumerable<ObservationsCreateManyPlacesInput>
    skipDuplicates?: boolean
  }

  export type Place_reportsCreateWithoutPlacesInput = {
    place_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    place_report_values?: Place_report_valuesCreateNestedManyWithoutPlace_reportsInput
    accounts?: AccountsCreateNestedOneWithoutPlace_reportsInput
  }

  export type Place_reportsUncheckedCreateWithoutPlacesInput = {
    place_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutPlace_reportsInput
  }

  export type Place_reportsCreateOrConnectWithoutPlacesInput = {
    where: Place_reportsWhereUniqueInput
    create: XOR<Place_reportsCreateWithoutPlacesInput, Place_reportsUncheckedCreateWithoutPlacesInput>
  }

  export type Place_reportsCreateManyPlacesInputEnvelope = {
    data: Enumerable<Place_reportsCreateManyPlacesInput>
    skipDuplicates?: boolean
  }

  export type Place_usersCreateWithoutPlacesInput = {
    place_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_usersInput
    users?: UsersCreateNestedOneWithoutPlace_usersInput
  }

  export type Place_usersUncheckedCreateWithoutPlacesInput = {
    place_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_usersCreateOrConnectWithoutPlacesInput = {
    where: Place_usersWhereUniqueInput
    create: XOR<Place_usersCreateWithoutPlacesInput, Place_usersUncheckedCreateWithoutPlacesInput>
  }

  export type Place_usersCreateManyPlacesInputEnvelope = {
    data: Enumerable<Place_usersCreateManyPlacesInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutPlacesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPlacesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPlacesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPlacesInput, AccountsUncheckedCreateWithoutPlacesInput>
  }

  export type PlacesCreateWithoutOther_placesInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutOther_placesInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutOther_placesInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutOther_placesInput, PlacesUncheckedCreateWithoutOther_placesInput>
  }

  export type PlacesCreateWithoutPlacesInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
    subprojects?: SubprojectsCreateNestedOneWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutPlacesInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutPlacesInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutPlacesInput, PlacesUncheckedCreateWithoutPlacesInput>
  }

  export type PlacesCreateManyPlacesInputEnvelope = {
    data: Enumerable<PlacesCreateManyPlacesInput>
    skipDuplicates?: boolean
  }

  export type SubprojectsCreateWithoutPlacesInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutPlacesInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutPlacesInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutPlacesInput, SubprojectsUncheckedCreateWithoutPlacesInput>
  }

  export type ActionsUpsertWithWhereUniqueWithoutPlacesInput = {
    where: ActionsWhereUniqueInput
    update: XOR<ActionsUpdateWithoutPlacesInput, ActionsUncheckedUpdateWithoutPlacesInput>
    create: XOR<ActionsCreateWithoutPlacesInput, ActionsUncheckedCreateWithoutPlacesInput>
  }

  export type ActionsUpdateWithWhereUniqueWithoutPlacesInput = {
    where: ActionsWhereUniqueInput
    data: XOR<ActionsUpdateWithoutPlacesInput, ActionsUncheckedUpdateWithoutPlacesInput>
  }

  export type ActionsUpdateManyWithWhereWithoutPlacesInput = {
    where: ActionsScalarWhereInput
    data: XOR<ActionsUpdateManyMutationInput, ActionsUncheckedUpdateManyWithoutActionsInput>
  }

  export type ChecksUpsertWithWhereUniqueWithoutPlacesInput = {
    where: ChecksWhereUniqueInput
    update: XOR<ChecksUpdateWithoutPlacesInput, ChecksUncheckedUpdateWithoutPlacesInput>
    create: XOR<ChecksCreateWithoutPlacesInput, ChecksUncheckedCreateWithoutPlacesInput>
  }

  export type ChecksUpdateWithWhereUniqueWithoutPlacesInput = {
    where: ChecksWhereUniqueInput
    data: XOR<ChecksUpdateWithoutPlacesInput, ChecksUncheckedUpdateWithoutPlacesInput>
  }

  export type ChecksUpdateManyWithWhereWithoutPlacesInput = {
    where: ChecksScalarWhereInput
    data: XOR<ChecksUpdateManyMutationInput, ChecksUncheckedUpdateManyWithoutChecksInput>
  }

  export type FilesUpsertWithWhereUniqueWithoutPlacesInput = {
    where: FilesWhereUniqueInput
    update: XOR<FilesUpdateWithoutPlacesInput, FilesUncheckedUpdateWithoutPlacesInput>
    create: XOR<FilesCreateWithoutPlacesInput, FilesUncheckedCreateWithoutPlacesInput>
  }

  export type FilesUpdateWithWhereUniqueWithoutPlacesInput = {
    where: FilesWhereUniqueInput
    data: XOR<FilesUpdateWithoutPlacesInput, FilesUncheckedUpdateWithoutPlacesInput>
  }

  export type FilesUpdateManyWithWhereWithoutPlacesInput = {
    where: FilesScalarWhereInput
    data: XOR<FilesUpdateManyMutationInput, FilesUncheckedUpdateManyWithoutFilesInput>
  }

  export type ObservationsUpsertWithWhereUniqueWithoutPlacesInput = {
    where: ObservationsWhereUniqueInput
    update: XOR<ObservationsUpdateWithoutPlacesInput, ObservationsUncheckedUpdateWithoutPlacesInput>
    create: XOR<ObservationsCreateWithoutPlacesInput, ObservationsUncheckedCreateWithoutPlacesInput>
  }

  export type ObservationsUpdateWithWhereUniqueWithoutPlacesInput = {
    where: ObservationsWhereUniqueInput
    data: XOR<ObservationsUpdateWithoutPlacesInput, ObservationsUncheckedUpdateWithoutPlacesInput>
  }

  export type ObservationsUpdateManyWithWhereWithoutPlacesInput = {
    where: ObservationsScalarWhereInput
    data: XOR<ObservationsUpdateManyMutationInput, ObservationsUncheckedUpdateManyWithoutObservationsInput>
  }

  export type Place_reportsUpsertWithWhereUniqueWithoutPlacesInput = {
    where: Place_reportsWhereUniqueInput
    update: XOR<Place_reportsUpdateWithoutPlacesInput, Place_reportsUncheckedUpdateWithoutPlacesInput>
    create: XOR<Place_reportsCreateWithoutPlacesInput, Place_reportsUncheckedCreateWithoutPlacesInput>
  }

  export type Place_reportsUpdateWithWhereUniqueWithoutPlacesInput = {
    where: Place_reportsWhereUniqueInput
    data: XOR<Place_reportsUpdateWithoutPlacesInput, Place_reportsUncheckedUpdateWithoutPlacesInput>
  }

  export type Place_reportsUpdateManyWithWhereWithoutPlacesInput = {
    where: Place_reportsScalarWhereInput
    data: XOR<Place_reportsUpdateManyMutationInput, Place_reportsUncheckedUpdateManyWithoutPlace_reportsInput>
  }

  export type Place_usersUpsertWithWhereUniqueWithoutPlacesInput = {
    where: Place_usersWhereUniqueInput
    update: XOR<Place_usersUpdateWithoutPlacesInput, Place_usersUncheckedUpdateWithoutPlacesInput>
    create: XOR<Place_usersCreateWithoutPlacesInput, Place_usersUncheckedCreateWithoutPlacesInput>
  }

  export type Place_usersUpdateWithWhereUniqueWithoutPlacesInput = {
    where: Place_usersWhereUniqueInput
    data: XOR<Place_usersUpdateWithoutPlacesInput, Place_usersUncheckedUpdateWithoutPlacesInput>
  }

  export type Place_usersUpdateManyWithWhereWithoutPlacesInput = {
    where: Place_usersScalarWhereInput
    data: XOR<Place_usersUpdateManyMutationInput, Place_usersUncheckedUpdateManyWithoutPlace_usersInput>
  }

  export type AccountsUpsertWithoutPlacesInput = {
    update: XOR<AccountsUpdateWithoutPlacesInput, AccountsUncheckedUpdateWithoutPlacesInput>
    create: XOR<AccountsCreateWithoutPlacesInput, AccountsUncheckedCreateWithoutPlacesInput>
  }

  export type AccountsUpdateWithoutPlacesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPlacesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type PlacesUpsertWithoutOther_placesInput = {
    update: XOR<PlacesUpdateWithoutOther_placesInput, PlacesUncheckedUpdateWithoutOther_placesInput>
    create: XOR<PlacesCreateWithoutOther_placesInput, PlacesUncheckedCreateWithoutOther_placesInput>
  }

  export type PlacesUpdateWithoutOther_placesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutOther_placesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type PlacesUpsertWithWhereUniqueWithoutPlacesInput = {
    where: PlacesWhereUniqueInput
    update: XOR<PlacesUpdateWithoutPlacesInput, PlacesUncheckedUpdateWithoutPlacesInput>
    create: XOR<PlacesCreateWithoutPlacesInput, PlacesUncheckedCreateWithoutPlacesInput>
  }

  export type PlacesUpdateWithWhereUniqueWithoutPlacesInput = {
    where: PlacesWhereUniqueInput
    data: XOR<PlacesUpdateWithoutPlacesInput, PlacesUncheckedUpdateWithoutPlacesInput>
  }

  export type PlacesUpdateManyWithWhereWithoutPlacesInput = {
    where: PlacesScalarWhereInput
    data: XOR<PlacesUpdateManyMutationInput, PlacesUncheckedUpdateManyWithoutOther_placesInput>
  }

  export type SubprojectsUpsertWithoutPlacesInput = {
    update: XOR<SubprojectsUpdateWithoutPlacesInput, SubprojectsUncheckedUpdateWithoutPlacesInput>
    create: XOR<SubprojectsCreateWithoutPlacesInput, SubprojectsUncheckedCreateWithoutPlacesInput>
  }

  export type SubprojectsUpdateWithoutPlacesInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutPlacesInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type AccountsCreateWithoutProject_reportsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutProject_reportsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutProject_reportsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutProject_reportsInput, AccountsUncheckedCreateWithoutProject_reportsInput>
  }

  export type ProjectsCreateWithoutProject_reportsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutProject_reportsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutProject_reportsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutProject_reportsInput, ProjectsUncheckedCreateWithoutProject_reportsInput>
  }

  export type AccountsUpsertWithoutProject_reportsInput = {
    update: XOR<AccountsUpdateWithoutProject_reportsInput, AccountsUncheckedUpdateWithoutProject_reportsInput>
    create: XOR<AccountsCreateWithoutProject_reportsInput, AccountsUncheckedCreateWithoutProject_reportsInput>
  }

  export type AccountsUpdateWithoutProject_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutProject_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutProject_reportsInput = {
    update: XOR<ProjectsUpdateWithoutProject_reportsInput, ProjectsUncheckedUpdateWithoutProject_reportsInput>
    create: XOR<ProjectsCreateWithoutProject_reportsInput, ProjectsUncheckedCreateWithoutProject_reportsInput>
  }

  export type ProjectsUpdateWithoutProject_reportsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutProject_reportsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutProject_usersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutProject_usersInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutProject_usersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
  }

  export type ProjectsCreateWithoutProject_usersInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutProject_usersInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutProject_usersInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
  }

  export type UsersCreateWithoutProject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    place_users?: Place_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutProject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutProject_usersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
  }

  export type AccountsUpsertWithoutProject_usersInput = {
    update: XOR<AccountsUpdateWithoutProject_usersInput, AccountsUncheckedUpdateWithoutProject_usersInput>
    create: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
  }

  export type AccountsUpdateWithoutProject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutProject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutProject_usersInput = {
    update: XOR<ProjectsUpdateWithoutProject_usersInput, ProjectsUncheckedUpdateWithoutProject_usersInput>
    create: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
  }

  export type ProjectsUpdateWithoutProject_usersInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutProject_usersInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type UsersUpsertWithoutProject_usersInput = {
    update: XOR<UsersUpdateWithoutProject_usersInput, UsersUncheckedUpdateWithoutProject_usersInput>
    create: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
  }

  export type UsersUpdateWithoutProject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutProject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type FieldsCreateWithoutProjectsInput = {
    field_id: string
    table_name?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFieldsInput
    field_types?: Field_typesCreateNestedOneWithoutFieldsInput
    lists?: ListsCreateNestedOneWithoutFieldsInput
    widget_types?: Widget_typesCreateNestedOneWithoutFieldsInput
  }

  export type FieldsUncheckedCreateWithoutProjectsInput = {
    field_id: string
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsCreateOrConnectWithoutProjectsInput = {
    where: FieldsWhereUniqueInput
    create: XOR<FieldsCreateWithoutProjectsInput, FieldsUncheckedCreateWithoutProjectsInput>
  }

  export type FieldsCreateManyProjectsInputEnvelope = {
    data: Enumerable<FieldsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type FilesCreateWithoutProjectsInput = {
    file_id: string
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFilesInput
    actions?: ActionsCreateNestedOneWithoutFilesInput
    checks?: ChecksCreateNestedOneWithoutFilesInput
    places?: PlacesCreateNestedOneWithoutFilesInput
    subprojects?: SubprojectsCreateNestedOneWithoutFilesInput
  }

  export type FilesUncheckedCreateWithoutProjectsInput = {
    file_id: string
    account_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateOrConnectWithoutProjectsInput = {
    where: FilesWhereUniqueInput
    create: XOR<FilesCreateWithoutProjectsInput, FilesUncheckedCreateWithoutProjectsInput>
  }

  export type FilesCreateManyProjectsInputEnvelope = {
    data: Enumerable<FilesCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type ListsCreateWithoutProjectsInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutListsInput
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutProjectsInput = {
    list_id: string
    account_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutListsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutProjectsInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutProjectsInput, ListsUncheckedCreateWithoutProjectsInput>
  }

  export type ListsCreateManyProjectsInputEnvelope = {
    data: Enumerable<ListsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Observation_sourcesCreateWithoutProjectsInput = {
    observation_source_id: string
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservation_sourcesInput
    observations?: ObservationsCreateNestedManyWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUncheckedCreateWithoutProjectsInput = {
    observation_source_id: string
    account_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    observations?: ObservationsUncheckedCreateNestedManyWithoutObservation_sourcesInput
  }

  export type Observation_sourcesCreateOrConnectWithoutProjectsInput = {
    where: Observation_sourcesWhereUniqueInput
    create: XOR<Observation_sourcesCreateWithoutProjectsInput, Observation_sourcesUncheckedCreateWithoutProjectsInput>
  }

  export type Observation_sourcesCreateManyProjectsInputEnvelope = {
    data: Enumerable<Observation_sourcesCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type PersonsCreateWithoutProjectsInput = {
    person_id: string
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPersonsInput
  }

  export type PersonsUncheckedCreateWithoutProjectsInput = {
    person_id: string
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateOrConnectWithoutProjectsInput = {
    where: PersonsWhereUniqueInput
    create: XOR<PersonsCreateWithoutProjectsInput, PersonsUncheckedCreateWithoutProjectsInput>
  }

  export type PersonsCreateManyProjectsInputEnvelope = {
    data: Enumerable<PersonsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Place_levelsCreateWithoutProjectsInput = {
    place_level_id: string
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_levelsInput
  }

  export type Place_levelsUncheckedCreateWithoutProjectsInput = {
    place_level_id: string
    account_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateOrConnectWithoutProjectsInput = {
    where: Place_levelsWhereUniqueInput
    create: XOR<Place_levelsCreateWithoutProjectsInput, Place_levelsUncheckedCreateWithoutProjectsInput>
  }

  export type Place_levelsCreateManyProjectsInputEnvelope = {
    data: Enumerable<Place_levelsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Project_reportsCreateWithoutProjectsInput = {
    project_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_reportsInput
  }

  export type Project_reportsUncheckedCreateWithoutProjectsInput = {
    project_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_reportsCreateOrConnectWithoutProjectsInput = {
    where: Project_reportsWhereUniqueInput
    create: XOR<Project_reportsCreateWithoutProjectsInput, Project_reportsUncheckedCreateWithoutProjectsInput>
  }

  export type Project_reportsCreateManyProjectsInputEnvelope = {
    data: Enumerable<Project_reportsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Project_usersCreateWithoutProjectsInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_usersInput
    users?: UsersCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateWithoutProjectsInput = {
    project_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateOrConnectWithoutProjectsInput = {
    where: Project_usersWhereUniqueInput
    create: XOR<Project_usersCreateWithoutProjectsInput, Project_usersUncheckedCreateWithoutProjectsInput>
  }

  export type Project_usersCreateManyProjectsInputEnvelope = {
    data: Enumerable<Project_usersCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutProjectsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutProjectsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutProjectsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
  }

  export type SubprojectsCreateWithoutProjectsInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutProjectsInput = {
    subproject_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutProjectsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutProjectsInput, SubprojectsUncheckedCreateWithoutProjectsInput>
  }

  export type SubprojectsCreateManyProjectsInputEnvelope = {
    data: Enumerable<SubprojectsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type TaxonomiesCreateWithoutProjectsInput = {
    taxonomy_id: string
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    taxa?: TaxaCreateNestedManyWithoutTaxonomiesInput
    accounts?: AccountsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateWithoutProjectsInput = {
    taxonomy_id: string
    account_id?: string | null
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    taxa?: TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput
  }

  export type TaxonomiesCreateOrConnectWithoutProjectsInput = {
    where: TaxonomiesWhereUniqueInput
    create: XOR<TaxonomiesCreateWithoutProjectsInput, TaxonomiesUncheckedCreateWithoutProjectsInput>
  }

  export type TaxonomiesCreateManyProjectsInputEnvelope = {
    data: Enumerable<TaxonomiesCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type UnitsCreateWithoutProjectsInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutProjectsInput = {
    unit_id: string
    account_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutUnitsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutUnitsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutUnitsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutProjectsInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutProjectsInput, UnitsUncheckedCreateWithoutProjectsInput>
  }

  export type UnitsCreateManyProjectsInputEnvelope = {
    data: Enumerable<UnitsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type FieldsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: FieldsWhereUniqueInput
    update: XOR<FieldsUpdateWithoutProjectsInput, FieldsUncheckedUpdateWithoutProjectsInput>
    create: XOR<FieldsCreateWithoutProjectsInput, FieldsUncheckedCreateWithoutProjectsInput>
  }

  export type FieldsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: FieldsWhereUniqueInput
    data: XOR<FieldsUpdateWithoutProjectsInput, FieldsUncheckedUpdateWithoutProjectsInput>
  }

  export type FieldsUpdateManyWithWhereWithoutProjectsInput = {
    where: FieldsScalarWhereInput
    data: XOR<FieldsUpdateManyMutationInput, FieldsUncheckedUpdateManyWithoutFieldsInput>
  }

  export type FilesUpsertWithWhereUniqueWithoutProjectsInput = {
    where: FilesWhereUniqueInput
    update: XOR<FilesUpdateWithoutProjectsInput, FilesUncheckedUpdateWithoutProjectsInput>
    create: XOR<FilesCreateWithoutProjectsInput, FilesUncheckedCreateWithoutProjectsInput>
  }

  export type FilesUpdateWithWhereUniqueWithoutProjectsInput = {
    where: FilesWhereUniqueInput
    data: XOR<FilesUpdateWithoutProjectsInput, FilesUncheckedUpdateWithoutProjectsInput>
  }

  export type FilesUpdateManyWithWhereWithoutProjectsInput = {
    where: FilesScalarWhereInput
    data: XOR<FilesUpdateManyMutationInput, FilesUncheckedUpdateManyWithoutFilesInput>
  }

  export type ListsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: ListsWhereUniqueInput
    update: XOR<ListsUpdateWithoutProjectsInput, ListsUncheckedUpdateWithoutProjectsInput>
    create: XOR<ListsCreateWithoutProjectsInput, ListsUncheckedCreateWithoutProjectsInput>
  }

  export type ListsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: ListsWhereUniqueInput
    data: XOR<ListsUpdateWithoutProjectsInput, ListsUncheckedUpdateWithoutProjectsInput>
  }

  export type ListsUpdateManyWithWhereWithoutProjectsInput = {
    where: ListsScalarWhereInput
    data: XOR<ListsUpdateManyMutationInput, ListsUncheckedUpdateManyWithoutListsInput>
  }

  export type Observation_sourcesUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Observation_sourcesWhereUniqueInput
    update: XOR<Observation_sourcesUpdateWithoutProjectsInput, Observation_sourcesUncheckedUpdateWithoutProjectsInput>
    create: XOR<Observation_sourcesCreateWithoutProjectsInput, Observation_sourcesUncheckedCreateWithoutProjectsInput>
  }

  export type Observation_sourcesUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Observation_sourcesWhereUniqueInput
    data: XOR<Observation_sourcesUpdateWithoutProjectsInput, Observation_sourcesUncheckedUpdateWithoutProjectsInput>
  }

  export type Observation_sourcesUpdateManyWithWhereWithoutProjectsInput = {
    where: Observation_sourcesScalarWhereInput
    data: XOR<Observation_sourcesUpdateManyMutationInput, Observation_sourcesUncheckedUpdateManyWithoutObservation_sourcesInput>
  }

  export type PersonsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: PersonsWhereUniqueInput
    update: XOR<PersonsUpdateWithoutProjectsInput, PersonsUncheckedUpdateWithoutProjectsInput>
    create: XOR<PersonsCreateWithoutProjectsInput, PersonsUncheckedCreateWithoutProjectsInput>
  }

  export type PersonsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: PersonsWhereUniqueInput
    data: XOR<PersonsUpdateWithoutProjectsInput, PersonsUncheckedUpdateWithoutProjectsInput>
  }

  export type PersonsUpdateManyWithWhereWithoutProjectsInput = {
    where: PersonsScalarWhereInput
    data: XOR<PersonsUpdateManyMutationInput, PersonsUncheckedUpdateManyWithoutPersonsInput>
  }

  export type Place_levelsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Place_levelsWhereUniqueInput
    update: XOR<Place_levelsUpdateWithoutProjectsInput, Place_levelsUncheckedUpdateWithoutProjectsInput>
    create: XOR<Place_levelsCreateWithoutProjectsInput, Place_levelsUncheckedCreateWithoutProjectsInput>
  }

  export type Place_levelsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Place_levelsWhereUniqueInput
    data: XOR<Place_levelsUpdateWithoutProjectsInput, Place_levelsUncheckedUpdateWithoutProjectsInput>
  }

  export type Place_levelsUpdateManyWithWhereWithoutProjectsInput = {
    where: Place_levelsScalarWhereInput
    data: XOR<Place_levelsUpdateManyMutationInput, Place_levelsUncheckedUpdateManyWithoutPlace_levelsInput>
  }

  export type Project_reportsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Project_reportsWhereUniqueInput
    update: XOR<Project_reportsUpdateWithoutProjectsInput, Project_reportsUncheckedUpdateWithoutProjectsInput>
    create: XOR<Project_reportsCreateWithoutProjectsInput, Project_reportsUncheckedCreateWithoutProjectsInput>
  }

  export type Project_reportsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Project_reportsWhereUniqueInput
    data: XOR<Project_reportsUpdateWithoutProjectsInput, Project_reportsUncheckedUpdateWithoutProjectsInput>
  }

  export type Project_reportsUpdateManyWithWhereWithoutProjectsInput = {
    where: Project_reportsScalarWhereInput
    data: XOR<Project_reportsUpdateManyMutationInput, Project_reportsUncheckedUpdateManyWithoutProject_reportsInput>
  }

  export type Project_usersUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Project_usersWhereUniqueInput
    update: XOR<Project_usersUpdateWithoutProjectsInput, Project_usersUncheckedUpdateWithoutProjectsInput>
    create: XOR<Project_usersCreateWithoutProjectsInput, Project_usersUncheckedCreateWithoutProjectsInput>
  }

  export type Project_usersUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Project_usersWhereUniqueInput
    data: XOR<Project_usersUpdateWithoutProjectsInput, Project_usersUncheckedUpdateWithoutProjectsInput>
  }

  export type Project_usersUpdateManyWithWhereWithoutProjectsInput = {
    where: Project_usersScalarWhereInput
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyWithoutProject_usersInput>
  }

  export type AccountsUpsertWithoutProjectsInput = {
    update: XOR<AccountsUpdateWithoutProjectsInput, AccountsUncheckedUpdateWithoutProjectsInput>
    create: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
  }

  export type AccountsUpdateWithoutProjectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutProjectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: SubprojectsWhereUniqueInput
    update: XOR<SubprojectsUpdateWithoutProjectsInput, SubprojectsUncheckedUpdateWithoutProjectsInput>
    create: XOR<SubprojectsCreateWithoutProjectsInput, SubprojectsUncheckedCreateWithoutProjectsInput>
  }

  export type SubprojectsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: SubprojectsWhereUniqueInput
    data: XOR<SubprojectsUpdateWithoutProjectsInput, SubprojectsUncheckedUpdateWithoutProjectsInput>
  }

  export type SubprojectsUpdateManyWithWhereWithoutProjectsInput = {
    where: SubprojectsScalarWhereInput
    data: XOR<SubprojectsUpdateManyMutationInput, SubprojectsUncheckedUpdateManyWithoutSubprojectsInput>
  }

  export type TaxonomiesUpsertWithWhereUniqueWithoutProjectsInput = {
    where: TaxonomiesWhereUniqueInput
    update: XOR<TaxonomiesUpdateWithoutProjectsInput, TaxonomiesUncheckedUpdateWithoutProjectsInput>
    create: XOR<TaxonomiesCreateWithoutProjectsInput, TaxonomiesUncheckedCreateWithoutProjectsInput>
  }

  export type TaxonomiesUpdateWithWhereUniqueWithoutProjectsInput = {
    where: TaxonomiesWhereUniqueInput
    data: XOR<TaxonomiesUpdateWithoutProjectsInput, TaxonomiesUncheckedUpdateWithoutProjectsInput>
  }

  export type TaxonomiesUpdateManyWithWhereWithoutProjectsInput = {
    where: TaxonomiesScalarWhereInput
    data: XOR<TaxonomiesUpdateManyMutationInput, TaxonomiesUncheckedUpdateManyWithoutTaxonomiesInput>
  }

  export type UnitsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: UnitsWhereUniqueInput
    update: XOR<UnitsUpdateWithoutProjectsInput, UnitsUncheckedUpdateWithoutProjectsInput>
    create: XOR<UnitsCreateWithoutProjectsInput, UnitsUncheckedCreateWithoutProjectsInput>
  }

  export type UnitsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: UnitsWhereUniqueInput
    data: XOR<UnitsUpdateWithoutProjectsInput, UnitsUncheckedUpdateWithoutProjectsInput>
  }

  export type UnitsUpdateManyWithWhereWithoutProjectsInput = {
    where: UnitsScalarWhereInput
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyWithoutUnitsInput>
  }

  export type AccountsCreateWithoutSubproject_reportsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutSubproject_reportsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutSubproject_reportsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutSubproject_reportsInput, AccountsUncheckedCreateWithoutSubproject_reportsInput>
  }

  export type SubprojectsCreateWithoutSubproject_reportsInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutSubproject_reportsInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutSubproject_reportsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutSubproject_reportsInput, SubprojectsUncheckedCreateWithoutSubproject_reportsInput>
  }

  export type AccountsUpsertWithoutSubproject_reportsInput = {
    update: XOR<AccountsUpdateWithoutSubproject_reportsInput, AccountsUncheckedUpdateWithoutSubproject_reportsInput>
    create: XOR<AccountsCreateWithoutSubproject_reportsInput, AccountsUncheckedCreateWithoutSubproject_reportsInput>
  }

  export type AccountsUpdateWithoutSubproject_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutSubproject_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithoutSubproject_reportsInput = {
    update: XOR<SubprojectsUpdateWithoutSubproject_reportsInput, SubprojectsUncheckedUpdateWithoutSubproject_reportsInput>
    create: XOR<SubprojectsCreateWithoutSubproject_reportsInput, SubprojectsUncheckedCreateWithoutSubproject_reportsInput>
  }

  export type SubprojectsUpdateWithoutSubproject_reportsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutSubproject_reportsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type AccountsCreateWithoutSubproject_taxaInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutSubproject_taxaInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutSubproject_taxaInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type SubprojectsCreateWithoutSubproject_taxaInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutSubproject_taxaInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutSubproject_taxaInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type TaxaCreateWithoutSubproject_taxaInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutTaxaInput
    accounts?: AccountsCreateNestedOneWithoutTaxaInput
    taxonomies?: TaxonomiesCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateWithoutSubproject_taxaInput = {
    taxon_id: string
    account_id?: string | null
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaCreateOrConnectWithoutSubproject_taxaInput = {
    where: TaxaWhereUniqueInput
    create: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type AccountsUpsertWithoutSubproject_taxaInput = {
    update: XOR<AccountsUpdateWithoutSubproject_taxaInput, AccountsUncheckedUpdateWithoutSubproject_taxaInput>
    create: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type AccountsUpdateWithoutSubproject_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutSubproject_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithoutSubproject_taxaInput = {
    update: XOR<SubprojectsUpdateWithoutSubproject_taxaInput, SubprojectsUncheckedUpdateWithoutSubproject_taxaInput>
    create: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type SubprojectsUpdateWithoutSubproject_taxaInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutSubproject_taxaInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type TaxaUpsertWithoutSubproject_taxaInput = {
    update: XOR<TaxaUpdateWithoutSubproject_taxaInput, TaxaUncheckedUpdateWithoutSubproject_taxaInput>
    create: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type TaxaUpdateWithoutSubproject_taxaInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutTaxaNestedInput
    accounts?: AccountsUpdateOneWithoutTaxaNestedInput
    taxonomies?: TaxonomiesUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateWithoutSubproject_taxaInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type AccountsCreateWithoutSubproject_usersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutSubproject_usersInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutSubproject_usersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
  }

  export type SubprojectsCreateWithoutSubproject_usersInput = {
    subproject_id: string
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    places?: PlacesCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutSubproject_usersInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    files?: FilesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    places?: PlacesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutSubproject_usersInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
  }

  export type UsersCreateWithoutSubproject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    place_users?: Place_usersCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutSubproject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutSubproject_usersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
  }

  export type AccountsUpsertWithoutSubproject_usersInput = {
    update: XOR<AccountsUpdateWithoutSubproject_usersInput, AccountsUncheckedUpdateWithoutSubproject_usersInput>
    create: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
  }

  export type AccountsUpdateWithoutSubproject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutSubproject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithoutSubproject_usersInput = {
    update: XOR<SubprojectsUpdateWithoutSubproject_usersInput, SubprojectsUncheckedUpdateWithoutSubproject_usersInput>
    create: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
  }

  export type SubprojectsUpdateWithoutSubproject_usersInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutSubproject_usersInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type UsersUpsertWithoutSubproject_usersInput = {
    update: XOR<UsersUpdateWithoutSubproject_usersInput, UsersUncheckedUpdateWithoutSubproject_usersInput>
    create: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
  }

  export type UsersUpdateWithoutSubproject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutSubproject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type FilesCreateWithoutSubprojectsInput = {
    file_id: string
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFilesInput
    actions?: ActionsCreateNestedOneWithoutFilesInput
    checks?: ChecksCreateNestedOneWithoutFilesInput
    places?: PlacesCreateNestedOneWithoutFilesInput
    projects?: ProjectsCreateNestedOneWithoutFilesInput
  }

  export type FilesUncheckedCreateWithoutSubprojectsInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateOrConnectWithoutSubprojectsInput = {
    where: FilesWhereUniqueInput
    create: XOR<FilesCreateWithoutSubprojectsInput, FilesUncheckedCreateWithoutSubprojectsInput>
  }

  export type FilesCreateManySubprojectsInputEnvelope = {
    data: Enumerable<FilesCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type GoalsCreateWithoutSubprojectsInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedManyWithoutGoalsInput
    accounts?: AccountsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateWithoutSubprojectsInput = {
    goal_id: string
    account_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput
  }

  export type GoalsCreateOrConnectWithoutSubprojectsInput = {
    where: GoalsWhereUniqueInput
    create: XOR<GoalsCreateWithoutSubprojectsInput, GoalsUncheckedCreateWithoutSubprojectsInput>
  }

  export type GoalsCreateManySubprojectsInputEnvelope = {
    data: Enumerable<GoalsCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type PlacesCreateWithoutSubprojectsInput = {
    place_id: string
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsCreateNestedManyWithoutPlacesInput
    checks?: ChecksCreateNestedManyWithoutPlacesInput
    files?: FilesCreateNestedManyWithoutPlacesInput
    observations?: ObservationsCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersCreateNestedManyWithoutPlacesInput
    accounts?: AccountsCreateNestedOneWithoutPlacesInput
    places?: PlacesCreateNestedOneWithoutOther_placesInput
    other_places?: PlacesCreateNestedManyWithoutPlacesInput
  }

  export type PlacesUncheckedCreateWithoutSubprojectsInput = {
    place_id: string
    account_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
    actions?: ActionsUncheckedCreateNestedManyWithoutPlacesInput
    checks?: ChecksUncheckedCreateNestedManyWithoutPlacesInput
    files?: FilesUncheckedCreateNestedManyWithoutPlacesInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutPlacesInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutPlacesInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutPlacesInput
    other_places?: PlacesUncheckedCreateNestedManyWithoutPlacesInput
  }

  export type PlacesCreateOrConnectWithoutSubprojectsInput = {
    where: PlacesWhereUniqueInput
    create: XOR<PlacesCreateWithoutSubprojectsInput, PlacesUncheckedCreateWithoutSubprojectsInput>
  }

  export type PlacesCreateManySubprojectsInputEnvelope = {
    data: Enumerable<PlacesCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_reportsCreateWithoutSubprojectsInput = {
    subproject_report_id: string
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_reportsInput
  }

  export type Subproject_reportsUncheckedCreateWithoutSubprojectsInput = {
    subproject_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_reportsCreateOrConnectWithoutSubprojectsInput = {
    where: Subproject_reportsWhereUniqueInput
    create: XOR<Subproject_reportsCreateWithoutSubprojectsInput, Subproject_reportsUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_reportsCreateManySubprojectsInputEnvelope = {
    data: Enumerable<Subproject_reportsCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_taxaCreateWithoutSubprojectsInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_taxaInput
    taxa?: TaxaCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateWithoutSubprojectsInput = {
    subproject_taxon_id: string
    account_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateOrConnectWithoutSubprojectsInput = {
    where: Subproject_taxaWhereUniqueInput
    create: XOR<Subproject_taxaCreateWithoutSubprojectsInput, Subproject_taxaUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_taxaCreateManySubprojectsInputEnvelope = {
    data: Enumerable<Subproject_taxaCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_usersCreateWithoutSubprojectsInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_usersInput
    users?: UsersCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateWithoutSubprojectsInput = {
    subproject_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateOrConnectWithoutSubprojectsInput = {
    where: Subproject_usersWhereUniqueInput
    create: XOR<Subproject_usersCreateWithoutSubprojectsInput, Subproject_usersUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_usersCreateManySubprojectsInputEnvelope = {
    data: Enumerable<Subproject_usersCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutSubprojectsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutSubprojectsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutSubprojectsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
  }

  export type ProjectsCreateWithoutSubprojectsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutSubprojectsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutSubprojectsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
  }

  export type FilesUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: FilesWhereUniqueInput
    update: XOR<FilesUpdateWithoutSubprojectsInput, FilesUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<FilesCreateWithoutSubprojectsInput, FilesUncheckedCreateWithoutSubprojectsInput>
  }

  export type FilesUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: FilesWhereUniqueInput
    data: XOR<FilesUpdateWithoutSubprojectsInput, FilesUncheckedUpdateWithoutSubprojectsInput>
  }

  export type FilesUpdateManyWithWhereWithoutSubprojectsInput = {
    where: FilesScalarWhereInput
    data: XOR<FilesUpdateManyMutationInput, FilesUncheckedUpdateManyWithoutFilesInput>
  }

  export type GoalsUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: GoalsWhereUniqueInput
    update: XOR<GoalsUpdateWithoutSubprojectsInput, GoalsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<GoalsCreateWithoutSubprojectsInput, GoalsUncheckedCreateWithoutSubprojectsInput>
  }

  export type GoalsUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: GoalsWhereUniqueInput
    data: XOR<GoalsUpdateWithoutSubprojectsInput, GoalsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type GoalsUpdateManyWithWhereWithoutSubprojectsInput = {
    where: GoalsScalarWhereInput
    data: XOR<GoalsUpdateManyMutationInput, GoalsUncheckedUpdateManyWithoutGoalsInput>
  }

  export type PlacesUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: PlacesWhereUniqueInput
    update: XOR<PlacesUpdateWithoutSubprojectsInput, PlacesUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<PlacesCreateWithoutSubprojectsInput, PlacesUncheckedCreateWithoutSubprojectsInput>
  }

  export type PlacesUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: PlacesWhereUniqueInput
    data: XOR<PlacesUpdateWithoutSubprojectsInput, PlacesUncheckedUpdateWithoutSubprojectsInput>
  }

  export type PlacesUpdateManyWithWhereWithoutSubprojectsInput = {
    where: PlacesScalarWhereInput
    data: XOR<PlacesUpdateManyMutationInput, PlacesUncheckedUpdateManyWithoutPlacesInput>
  }

  export type Subproject_reportsUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_reportsWhereUniqueInput
    update: XOR<Subproject_reportsUpdateWithoutSubprojectsInput, Subproject_reportsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<Subproject_reportsCreateWithoutSubprojectsInput, Subproject_reportsUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_reportsUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_reportsWhereUniqueInput
    data: XOR<Subproject_reportsUpdateWithoutSubprojectsInput, Subproject_reportsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Subproject_reportsUpdateManyWithWhereWithoutSubprojectsInput = {
    where: Subproject_reportsScalarWhereInput
    data: XOR<Subproject_reportsUpdateManyMutationInput, Subproject_reportsUncheckedUpdateManyWithoutSubproject_reportsInput>
  }

  export type Subproject_taxaUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_taxaWhereUniqueInput
    update: XOR<Subproject_taxaUpdateWithoutSubprojectsInput, Subproject_taxaUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<Subproject_taxaCreateWithoutSubprojectsInput, Subproject_taxaUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_taxaUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_taxaWhereUniqueInput
    data: XOR<Subproject_taxaUpdateWithoutSubprojectsInput, Subproject_taxaUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Subproject_taxaUpdateManyWithWhereWithoutSubprojectsInput = {
    where: Subproject_taxaScalarWhereInput
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyWithoutSubproject_taxaInput>
  }

  export type Subproject_usersUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_usersWhereUniqueInput
    update: XOR<Subproject_usersUpdateWithoutSubprojectsInput, Subproject_usersUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<Subproject_usersCreateWithoutSubprojectsInput, Subproject_usersUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_usersUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_usersWhereUniqueInput
    data: XOR<Subproject_usersUpdateWithoutSubprojectsInput, Subproject_usersUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Subproject_usersUpdateManyWithWhereWithoutSubprojectsInput = {
    where: Subproject_usersScalarWhereInput
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyWithoutSubproject_usersInput>
  }

  export type AccountsUpsertWithoutSubprojectsInput = {
    update: XOR<AccountsUpdateWithoutSubprojectsInput, AccountsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
  }

  export type AccountsUpdateWithoutSubprojectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutSubprojectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutSubprojectsInput = {
    update: XOR<ProjectsUpdateWithoutSubprojectsInput, ProjectsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
  }

  export type ProjectsUpdateWithoutSubprojectsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutSubprojectsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type Check_taxaCreateWithoutTaxaInput = {
    check_taxon_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutCheck_taxaInput
    checks?: ChecksCreateNestedOneWithoutCheck_taxaInput
    units?: UnitsCreateNestedOneWithoutCheck_taxaInput
  }

  export type Check_taxaUncheckedCreateWithoutTaxaInput = {
    check_taxon_id: string
    account_id?: string | null
    check_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaCreateOrConnectWithoutTaxaInput = {
    where: Check_taxaWhereUniqueInput
    create: XOR<Check_taxaCreateWithoutTaxaInput, Check_taxaUncheckedCreateWithoutTaxaInput>
  }

  export type Check_taxaCreateManyTaxaInputEnvelope = {
    data: Enumerable<Check_taxaCreateManyTaxaInput>
    skipDuplicates?: boolean
  }

  export type Subproject_taxaCreateWithoutTaxaInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_taxaInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateWithoutTaxaInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateOrConnectWithoutTaxaInput = {
    where: Subproject_taxaWhereUniqueInput
    create: XOR<Subproject_taxaCreateWithoutTaxaInput, Subproject_taxaUncheckedCreateWithoutTaxaInput>
  }

  export type Subproject_taxaCreateManyTaxaInputEnvelope = {
    data: Enumerable<Subproject_taxaCreateManyTaxaInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutTaxaInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutTaxaInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutTaxaInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
  }

  export type TaxonomiesCreateWithoutTaxaInput = {
    taxonomy_id: string
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutTaxonomiesInput
    projects?: ProjectsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateWithoutTaxaInput = {
    taxonomy_id: string
    account_id?: string | null
    project_id?: string | null
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxonomiesCreateOrConnectWithoutTaxaInput = {
    where: TaxonomiesWhereUniqueInput
    create: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
  }

  export type Check_taxaUpsertWithWhereUniqueWithoutTaxaInput = {
    where: Check_taxaWhereUniqueInput
    update: XOR<Check_taxaUpdateWithoutTaxaInput, Check_taxaUncheckedUpdateWithoutTaxaInput>
    create: XOR<Check_taxaCreateWithoutTaxaInput, Check_taxaUncheckedCreateWithoutTaxaInput>
  }

  export type Check_taxaUpdateWithWhereUniqueWithoutTaxaInput = {
    where: Check_taxaWhereUniqueInput
    data: XOR<Check_taxaUpdateWithoutTaxaInput, Check_taxaUncheckedUpdateWithoutTaxaInput>
  }

  export type Check_taxaUpdateManyWithWhereWithoutTaxaInput = {
    where: Check_taxaScalarWhereInput
    data: XOR<Check_taxaUpdateManyMutationInput, Check_taxaUncheckedUpdateManyWithoutCheck_taxaInput>
  }

  export type Subproject_taxaUpsertWithWhereUniqueWithoutTaxaInput = {
    where: Subproject_taxaWhereUniqueInput
    update: XOR<Subproject_taxaUpdateWithoutTaxaInput, Subproject_taxaUncheckedUpdateWithoutTaxaInput>
    create: XOR<Subproject_taxaCreateWithoutTaxaInput, Subproject_taxaUncheckedCreateWithoutTaxaInput>
  }

  export type Subproject_taxaUpdateWithWhereUniqueWithoutTaxaInput = {
    where: Subproject_taxaWhereUniqueInput
    data: XOR<Subproject_taxaUpdateWithoutTaxaInput, Subproject_taxaUncheckedUpdateWithoutTaxaInput>
  }

  export type Subproject_taxaUpdateManyWithWhereWithoutTaxaInput = {
    where: Subproject_taxaScalarWhereInput
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyWithoutSubproject_taxaInput>
  }

  export type AccountsUpsertWithoutTaxaInput = {
    update: XOR<AccountsUpdateWithoutTaxaInput, AccountsUncheckedUpdateWithoutTaxaInput>
    create: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
  }

  export type AccountsUpdateWithoutTaxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutTaxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type TaxonomiesUpsertWithoutTaxaInput = {
    update: XOR<TaxonomiesUpdateWithoutTaxaInput, TaxonomiesUncheckedUpdateWithoutTaxaInput>
    create: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
  }

  export type TaxonomiesUpdateWithoutTaxaInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutTaxonomiesNestedInput
    projects?: ProjectsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateWithoutTaxaInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaCreateWithoutTaxonomiesInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaCreateNestedManyWithoutTaxaInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutTaxaInput
    accounts?: AccountsCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateWithoutTaxonomiesInput = {
    taxon_id: string
    account_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutTaxaInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaCreateOrConnectWithoutTaxonomiesInput = {
    where: TaxaWhereUniqueInput
    create: XOR<TaxaCreateWithoutTaxonomiesInput, TaxaUncheckedCreateWithoutTaxonomiesInput>
  }

  export type TaxaCreateManyTaxonomiesInputEnvelope = {
    data: Enumerable<TaxaCreateManyTaxonomiesInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutTaxonomiesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutTaxonomiesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutTaxonomiesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
  }

  export type ProjectsCreateWithoutTaxonomiesInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutTaxonomiesInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutTaxonomiesInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
  }

  export type TaxaUpsertWithWhereUniqueWithoutTaxonomiesInput = {
    where: TaxaWhereUniqueInput
    update: XOR<TaxaUpdateWithoutTaxonomiesInput, TaxaUncheckedUpdateWithoutTaxonomiesInput>
    create: XOR<TaxaCreateWithoutTaxonomiesInput, TaxaUncheckedCreateWithoutTaxonomiesInput>
  }

  export type TaxaUpdateWithWhereUniqueWithoutTaxonomiesInput = {
    where: TaxaWhereUniqueInput
    data: XOR<TaxaUpdateWithoutTaxonomiesInput, TaxaUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type TaxaUpdateManyWithWhereWithoutTaxonomiesInput = {
    where: TaxaScalarWhereInput
    data: XOR<TaxaUpdateManyMutationInput, TaxaUncheckedUpdateManyWithoutTaxaInput>
  }

  export type AccountsUpsertWithoutTaxonomiesInput = {
    update: XOR<AccountsUpdateWithoutTaxonomiesInput, AccountsUncheckedUpdateWithoutTaxonomiesInput>
    create: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
  }

  export type AccountsUpdateWithoutTaxonomiesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutTaxonomiesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutTaxonomiesInput = {
    update: XOR<ProjectsUpdateWithoutTaxonomiesInput, ProjectsUncheckedUpdateWithoutTaxonomiesInput>
    create: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
  }

  export type ProjectsUpdateWithoutTaxonomiesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutTaxonomiesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type Action_report_valuesCreateWithoutUnitsInput = {
    action_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutAction_report_valuesInput
    action_reports?: Action_reportsCreateNestedOneWithoutAction_report_valuesInput
  }

  export type Action_report_valuesUncheckedCreateWithoutUnitsInput = {
    action_report_value_id: string
    account_id?: string | null
    action_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesCreateOrConnectWithoutUnitsInput = {
    where: Action_report_valuesWhereUniqueInput
    create: XOR<Action_report_valuesCreateWithoutUnitsInput, Action_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Action_report_valuesCreateManyUnitsInputEnvelope = {
    data: Enumerable<Action_report_valuesCreateManyUnitsInput>
    skipDuplicates?: boolean
  }

  export type Action_valuesCreateWithoutUnitsInput = {
    action_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutAction_valuesInput
    actions?: ActionsCreateNestedOneWithoutAction_valuesInput
  }

  export type Action_valuesUncheckedCreateWithoutUnitsInput = {
    action_value_id: string
    account_id?: string | null
    action_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesCreateOrConnectWithoutUnitsInput = {
    where: Action_valuesWhereUniqueInput
    create: XOR<Action_valuesCreateWithoutUnitsInput, Action_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Action_valuesCreateManyUnitsInputEnvelope = {
    data: Enumerable<Action_valuesCreateManyUnitsInput>
    skipDuplicates?: boolean
  }

  export type Check_taxaCreateWithoutUnitsInput = {
    check_taxon_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutCheck_taxaInput
    checks?: ChecksCreateNestedOneWithoutCheck_taxaInput
    taxa?: TaxaCreateNestedOneWithoutCheck_taxaInput
  }

  export type Check_taxaUncheckedCreateWithoutUnitsInput = {
    check_taxon_id: string
    account_id?: string | null
    check_id?: string | null
    taxon_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaCreateOrConnectWithoutUnitsInput = {
    where: Check_taxaWhereUniqueInput
    create: XOR<Check_taxaCreateWithoutUnitsInput, Check_taxaUncheckedCreateWithoutUnitsInput>
  }

  export type Check_taxaCreateManyUnitsInputEnvelope = {
    data: Enumerable<Check_taxaCreateManyUnitsInput>
    skipDuplicates?: boolean
  }

  export type Check_valuesCreateWithoutUnitsInput = {
    check_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutCheck_valuesInput
    checks?: ChecksCreateNestedOneWithoutCheck_valuesInput
  }

  export type Check_valuesUncheckedCreateWithoutUnitsInput = {
    check_value_id: string
    account_id?: string | null
    check_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesCreateOrConnectWithoutUnitsInput = {
    where: Check_valuesWhereUniqueInput
    create: XOR<Check_valuesCreateWithoutUnitsInput, Check_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Check_valuesCreateManyUnitsInputEnvelope = {
    data: Enumerable<Check_valuesCreateManyUnitsInput>
    skipDuplicates?: boolean
  }

  export type Goal_report_valuesCreateWithoutUnitsInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_report_valuesInput
    goal_reports?: Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateWithoutUnitsInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateOrConnectWithoutUnitsInput = {
    where: Goal_report_valuesWhereUniqueInput
    create: XOR<Goal_report_valuesCreateWithoutUnitsInput, Goal_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Goal_report_valuesCreateManyUnitsInputEnvelope = {
    data: Enumerable<Goal_report_valuesCreateManyUnitsInput>
    skipDuplicates?: boolean
  }

  export type Place_report_valuesCreateWithoutUnitsInput = {
    place_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_report_valuesInput
    place_reports?: Place_reportsCreateNestedOneWithoutPlace_report_valuesInput
  }

  export type Place_report_valuesUncheckedCreateWithoutUnitsInput = {
    place_report_value_id: string
    account_id?: string | null
    place_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesCreateOrConnectWithoutUnitsInput = {
    where: Place_report_valuesWhereUniqueInput
    create: XOR<Place_report_valuesCreateWithoutUnitsInput, Place_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Place_report_valuesCreateManyUnitsInputEnvelope = {
    data: Enumerable<Place_report_valuesCreateManyUnitsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutUnitsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutUnitsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutUnitsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
  }

  export type ListsCreateWithoutUnitsInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutListsInput
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutUnitsInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutListsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutUnitsInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
  }

  export type ProjectsCreateWithoutUnitsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutProjectsInput
    files?: FilesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutUnitsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutProjectsInput
    files?: FilesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutUnitsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
  }

  export type Action_report_valuesUpsertWithWhereUniqueWithoutUnitsInput = {
    where: Action_report_valuesWhereUniqueInput
    update: XOR<Action_report_valuesUpdateWithoutUnitsInput, Action_report_valuesUncheckedUpdateWithoutUnitsInput>
    create: XOR<Action_report_valuesCreateWithoutUnitsInput, Action_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Action_report_valuesUpdateWithWhereUniqueWithoutUnitsInput = {
    where: Action_report_valuesWhereUniqueInput
    data: XOR<Action_report_valuesUpdateWithoutUnitsInput, Action_report_valuesUncheckedUpdateWithoutUnitsInput>
  }

  export type Action_report_valuesUpdateManyWithWhereWithoutUnitsInput = {
    where: Action_report_valuesScalarWhereInput
    data: XOR<Action_report_valuesUpdateManyMutationInput, Action_report_valuesUncheckedUpdateManyWithoutAction_report_valuesInput>
  }

  export type Action_valuesUpsertWithWhereUniqueWithoutUnitsInput = {
    where: Action_valuesWhereUniqueInput
    update: XOR<Action_valuesUpdateWithoutUnitsInput, Action_valuesUncheckedUpdateWithoutUnitsInput>
    create: XOR<Action_valuesCreateWithoutUnitsInput, Action_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Action_valuesUpdateWithWhereUniqueWithoutUnitsInput = {
    where: Action_valuesWhereUniqueInput
    data: XOR<Action_valuesUpdateWithoutUnitsInput, Action_valuesUncheckedUpdateWithoutUnitsInput>
  }

  export type Action_valuesUpdateManyWithWhereWithoutUnitsInput = {
    where: Action_valuesScalarWhereInput
    data: XOR<Action_valuesUpdateManyMutationInput, Action_valuesUncheckedUpdateManyWithoutAction_valuesInput>
  }

  export type Check_taxaUpsertWithWhereUniqueWithoutUnitsInput = {
    where: Check_taxaWhereUniqueInput
    update: XOR<Check_taxaUpdateWithoutUnitsInput, Check_taxaUncheckedUpdateWithoutUnitsInput>
    create: XOR<Check_taxaCreateWithoutUnitsInput, Check_taxaUncheckedCreateWithoutUnitsInput>
  }

  export type Check_taxaUpdateWithWhereUniqueWithoutUnitsInput = {
    where: Check_taxaWhereUniqueInput
    data: XOR<Check_taxaUpdateWithoutUnitsInput, Check_taxaUncheckedUpdateWithoutUnitsInput>
  }

  export type Check_taxaUpdateManyWithWhereWithoutUnitsInput = {
    where: Check_taxaScalarWhereInput
    data: XOR<Check_taxaUpdateManyMutationInput, Check_taxaUncheckedUpdateManyWithoutCheck_taxaInput>
  }

  export type Check_valuesUpsertWithWhereUniqueWithoutUnitsInput = {
    where: Check_valuesWhereUniqueInput
    update: XOR<Check_valuesUpdateWithoutUnitsInput, Check_valuesUncheckedUpdateWithoutUnitsInput>
    create: XOR<Check_valuesCreateWithoutUnitsInput, Check_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Check_valuesUpdateWithWhereUniqueWithoutUnitsInput = {
    where: Check_valuesWhereUniqueInput
    data: XOR<Check_valuesUpdateWithoutUnitsInput, Check_valuesUncheckedUpdateWithoutUnitsInput>
  }

  export type Check_valuesUpdateManyWithWhereWithoutUnitsInput = {
    where: Check_valuesScalarWhereInput
    data: XOR<Check_valuesUpdateManyMutationInput, Check_valuesUncheckedUpdateManyWithoutCheck_valuesInput>
  }

  export type Goal_report_valuesUpsertWithWhereUniqueWithoutUnitsInput = {
    where: Goal_report_valuesWhereUniqueInput
    update: XOR<Goal_report_valuesUpdateWithoutUnitsInput, Goal_report_valuesUncheckedUpdateWithoutUnitsInput>
    create: XOR<Goal_report_valuesCreateWithoutUnitsInput, Goal_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Goal_report_valuesUpdateWithWhereUniqueWithoutUnitsInput = {
    where: Goal_report_valuesWhereUniqueInput
    data: XOR<Goal_report_valuesUpdateWithoutUnitsInput, Goal_report_valuesUncheckedUpdateWithoutUnitsInput>
  }

  export type Goal_report_valuesUpdateManyWithWhereWithoutUnitsInput = {
    where: Goal_report_valuesScalarWhereInput
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyWithoutGoal_report_valuesInput>
  }

  export type Place_report_valuesUpsertWithWhereUniqueWithoutUnitsInput = {
    where: Place_report_valuesWhereUniqueInput
    update: XOR<Place_report_valuesUpdateWithoutUnitsInput, Place_report_valuesUncheckedUpdateWithoutUnitsInput>
    create: XOR<Place_report_valuesCreateWithoutUnitsInput, Place_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Place_report_valuesUpdateWithWhereUniqueWithoutUnitsInput = {
    where: Place_report_valuesWhereUniqueInput
    data: XOR<Place_report_valuesUpdateWithoutUnitsInput, Place_report_valuesUncheckedUpdateWithoutUnitsInput>
  }

  export type Place_report_valuesUpdateManyWithWhereWithoutUnitsInput = {
    where: Place_report_valuesScalarWhereInput
    data: XOR<Place_report_valuesUpdateManyMutationInput, Place_report_valuesUncheckedUpdateManyWithoutPlace_report_valuesInput>
  }

  export type AccountsUpsertWithoutUnitsInput = {
    update: XOR<AccountsUpdateWithoutUnitsInput, AccountsUncheckedUpdateWithoutUnitsInput>
    create: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
  }

  export type AccountsUpdateWithoutUnitsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutUnitsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ListsUpsertWithoutUnitsInput = {
    update: XOR<ListsUpdateWithoutUnitsInput, ListsUncheckedUpdateWithoutUnitsInput>
    create: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
  }

  export type ListsUpdateWithoutUnitsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutUnitsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ProjectsUpsertWithoutUnitsInput = {
    update: XOR<ProjectsUpdateWithoutUnitsInput, ProjectsUncheckedUpdateWithoutUnitsInput>
    create: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
  }

  export type ProjectsUpdateWithoutUnitsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutUnitsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type MessagesCreateWithoutUser_messagesInput = {
    message_id: string
    label?: string | null
    date?: Date | string | null
    message?: string | null
  }

  export type MessagesUncheckedCreateWithoutUser_messagesInput = {
    message_id: string
    label?: string | null
    date?: Date | string | null
    message?: string | null
  }

  export type MessagesCreateOrConnectWithoutUser_messagesInput = {
    where: MessagesWhereUniqueInput
    create: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
  }

  export type UsersCreateWithoutUser_messagesInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    place_users?: Place_usersCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutUser_messagesInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutUser_messagesInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
  }

  export type MessagesUpsertWithoutUser_messagesInput = {
    update: XOR<MessagesUpdateWithoutUser_messagesInput, MessagesUncheckedUpdateWithoutUser_messagesInput>
    create: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
  }

  export type MessagesUpdateWithoutUser_messagesInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessagesUncheckedUpdateWithoutUser_messagesInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsersUpsertWithoutUser_messagesInput = {
    update: XOR<UsersUpdateWithoutUser_messagesInput, UsersUncheckedUpdateWithoutUser_messagesInput>
    create: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
  }

  export type UsersUpdateWithoutUser_messagesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutUser_messagesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type AccountsCreateWithoutUsersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesCreateNestedManyWithoutAccountsInput
    actions?: ActionsCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesCreateNestedManyWithoutAccountsInput
    checks?: ChecksCreateNestedManyWithoutAccountsInput
    fields?: FieldsCreateNestedManyWithoutAccountsInput
    files?: FilesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    observations?: ObservationsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersCreateNestedManyWithoutAccountsInput
    places?: PlacesCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutUsersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    action_report_values?: Action_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    action_reports?: Action_reportsUncheckedCreateNestedManyWithoutAccountsInput
    action_values?: Action_valuesUncheckedCreateNestedManyWithoutAccountsInput
    actions?: ActionsUncheckedCreateNestedManyWithoutAccountsInput
    check_taxa?: Check_taxaUncheckedCreateNestedManyWithoutAccountsInput
    check_values?: Check_valuesUncheckedCreateNestedManyWithoutAccountsInput
    checks?: ChecksUncheckedCreateNestedManyWithoutAccountsInput
    fields?: FieldsUncheckedCreateNestedManyWithoutAccountsInput
    files?: FilesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    observations?: ObservationsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    place_report_values?: Place_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    place_reports?: Place_reportsUncheckedCreateNestedManyWithoutAccountsInput
    place_users?: Place_usersUncheckedCreateNestedManyWithoutAccountsInput
    places?: PlacesUncheckedCreateNestedManyWithoutAccountsInput
    project_reports?: Project_reportsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_reports?: Subproject_reportsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutUsersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutUsersInput, AccountsUncheckedCreateWithoutUsersInput>
  }

  export type AccountsCreateManyUsersInputEnvelope = {
    data: Enumerable<AccountsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type Place_usersCreateWithoutUsersInput = {
    place_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_usersInput
    places?: PlacesCreateNestedOneWithoutPlace_usersInput
  }

  export type Place_usersUncheckedCreateWithoutUsersInput = {
    place_user_id: string
    account_id?: string | null
    place_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_usersCreateOrConnectWithoutUsersInput = {
    where: Place_usersWhereUniqueInput
    create: XOR<Place_usersCreateWithoutUsersInput, Place_usersUncheckedCreateWithoutUsersInput>
  }

  export type Place_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<Place_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type Project_usersCreateWithoutUsersInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_usersInput
    projects?: ProjectsCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateWithoutUsersInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateOrConnectWithoutUsersInput = {
    where: Project_usersWhereUniqueInput
    create: XOR<Project_usersCreateWithoutUsersInput, Project_usersUncheckedCreateWithoutUsersInput>
  }

  export type Project_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<Project_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type Subproject_usersCreateWithoutUsersInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_usersInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateWithoutUsersInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateOrConnectWithoutUsersInput = {
    where: Subproject_usersWhereUniqueInput
    create: XOR<Subproject_usersCreateWithoutUsersInput, Subproject_usersUncheckedCreateWithoutUsersInput>
  }

  export type Subproject_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<Subproject_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type User_messagesCreateWithoutUsersInput = {
    user_message_id: string
    label?: string | null
    read?: boolean | null
    messages?: MessagesCreateNestedOneWithoutUser_messagesInput
  }

  export type User_messagesUncheckedCreateWithoutUsersInput = {
    user_message_id: string
    message_id?: string | null
    label?: string | null
    read?: boolean | null
  }

  export type User_messagesCreateOrConnectWithoutUsersInput = {
    where: User_messagesWhereUniqueInput
    create: XOR<User_messagesCreateWithoutUsersInput, User_messagesUncheckedCreateWithoutUsersInput>
  }

  export type User_messagesCreateManyUsersInputEnvelope = {
    data: Enumerable<User_messagesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type AccountsUpsertWithWhereUniqueWithoutUsersInput = {
    where: AccountsWhereUniqueInput
    update: XOR<AccountsUpdateWithoutUsersInput, AccountsUncheckedUpdateWithoutUsersInput>
    create: XOR<AccountsCreateWithoutUsersInput, AccountsUncheckedCreateWithoutUsersInput>
  }

  export type AccountsUpdateWithWhereUniqueWithoutUsersInput = {
    where: AccountsWhereUniqueInput
    data: XOR<AccountsUpdateWithoutUsersInput, AccountsUncheckedUpdateWithoutUsersInput>
  }

  export type AccountsUpdateManyWithWhereWithoutUsersInput = {
    where: AccountsScalarWhereInput
    data: XOR<AccountsUpdateManyMutationInput, AccountsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type AccountsScalarWhereInput = {
    AND?: Enumerable<AccountsScalarWhereInput>
    OR?: Enumerable<AccountsScalarWhereInput>
    NOT?: Enumerable<AccountsScalarWhereInput>
    account_id?: UuidFilter | string
    user_id?: UuidNullableFilter | string | null
    type?: StringNullableFilter | string | null
    period_start?: DateTimeNullableFilter | Date | string | null
    period_end?: DateTimeNullableFilter | Date | string | null
    projects_label_by?: StringNullableFilter | string | null
    label?: StringNullableFilter | string | null
  }

  export type Place_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: Place_usersWhereUniqueInput
    update: XOR<Place_usersUpdateWithoutUsersInput, Place_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<Place_usersCreateWithoutUsersInput, Place_usersUncheckedCreateWithoutUsersInput>
  }

  export type Place_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: Place_usersWhereUniqueInput
    data: XOR<Place_usersUpdateWithoutUsersInput, Place_usersUncheckedUpdateWithoutUsersInput>
  }

  export type Place_usersUpdateManyWithWhereWithoutUsersInput = {
    where: Place_usersScalarWhereInput
    data: XOR<Place_usersUpdateManyMutationInput, Place_usersUncheckedUpdateManyWithoutPlace_usersInput>
  }

  export type Project_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: Project_usersWhereUniqueInput
    update: XOR<Project_usersUpdateWithoutUsersInput, Project_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<Project_usersCreateWithoutUsersInput, Project_usersUncheckedCreateWithoutUsersInput>
  }

  export type Project_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: Project_usersWhereUniqueInput
    data: XOR<Project_usersUpdateWithoutUsersInput, Project_usersUncheckedUpdateWithoutUsersInput>
  }

  export type Project_usersUpdateManyWithWhereWithoutUsersInput = {
    where: Project_usersScalarWhereInput
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyWithoutProject_usersInput>
  }

  export type Subproject_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: Subproject_usersWhereUniqueInput
    update: XOR<Subproject_usersUpdateWithoutUsersInput, Subproject_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<Subproject_usersCreateWithoutUsersInput, Subproject_usersUncheckedCreateWithoutUsersInput>
  }

  export type Subproject_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: Subproject_usersWhereUniqueInput
    data: XOR<Subproject_usersUpdateWithoutUsersInput, Subproject_usersUncheckedUpdateWithoutUsersInput>
  }

  export type Subproject_usersUpdateManyWithWhereWithoutUsersInput = {
    where: Subproject_usersScalarWhereInput
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyWithoutSubproject_usersInput>
  }

  export type User_messagesUpsertWithWhereUniqueWithoutUsersInput = {
    where: User_messagesWhereUniqueInput
    update: XOR<User_messagesUpdateWithoutUsersInput, User_messagesUncheckedUpdateWithoutUsersInput>
    create: XOR<User_messagesCreateWithoutUsersInput, User_messagesUncheckedCreateWithoutUsersInput>
  }

  export type User_messagesUpdateWithWhereUniqueWithoutUsersInput = {
    where: User_messagesWhereUniqueInput
    data: XOR<User_messagesUpdateWithoutUsersInput, User_messagesUncheckedUpdateWithoutUsersInput>
  }

  export type User_messagesUpdateManyWithWhereWithoutUsersInput = {
    where: User_messagesScalarWhereInput
    data: XOR<User_messagesUpdateManyMutationInput, User_messagesUncheckedUpdateManyWithoutUser_messagesInput>
  }

  export type FieldsCreateWithoutWidget_typesInput = {
    field_id: string
    table_name?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutFieldsInput
    field_types?: Field_typesCreateNestedOneWithoutFieldsInput
    lists?: ListsCreateNestedOneWithoutFieldsInput
    projects?: ProjectsCreateNestedOneWithoutFieldsInput
  }

  export type FieldsUncheckedCreateWithoutWidget_typesInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsCreateOrConnectWithoutWidget_typesInput = {
    where: FieldsWhereUniqueInput
    create: XOR<FieldsCreateWithoutWidget_typesInput, FieldsUncheckedCreateWithoutWidget_typesInput>
  }

  export type FieldsCreateManyWidget_typesInputEnvelope = {
    data: Enumerable<FieldsCreateManyWidget_typesInput>
    skipDuplicates?: boolean
  }

  export type Widgets_for_fieldsCreateWithoutWidget_typesInput = {
    widget_for_field_id: string
    label?: string | null
    deleted?: boolean | null
    field_types?: Field_typesCreateNestedOneWithoutWidgets_for_fieldsInput
  }

  export type Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    create: XOR<Widgets_for_fieldsCreateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>
  }

  export type Widgets_for_fieldsCreateManyWidget_typesInputEnvelope = {
    data: Enumerable<Widgets_for_fieldsCreateManyWidget_typesInput>
    skipDuplicates?: boolean
  }

  export type FieldsUpsertWithWhereUniqueWithoutWidget_typesInput = {
    where: FieldsWhereUniqueInput
    update: XOR<FieldsUpdateWithoutWidget_typesInput, FieldsUncheckedUpdateWithoutWidget_typesInput>
    create: XOR<FieldsCreateWithoutWidget_typesInput, FieldsUncheckedCreateWithoutWidget_typesInput>
  }

  export type FieldsUpdateWithWhereUniqueWithoutWidget_typesInput = {
    where: FieldsWhereUniqueInput
    data: XOR<FieldsUpdateWithoutWidget_typesInput, FieldsUncheckedUpdateWithoutWidget_typesInput>
  }

  export type FieldsUpdateManyWithWhereWithoutWidget_typesInput = {
    where: FieldsScalarWhereInput
    data: XOR<FieldsUpdateManyMutationInput, FieldsUncheckedUpdateManyWithoutFieldsInput>
  }

  export type Widgets_for_fieldsUpsertWithWhereUniqueWithoutWidget_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    update: XOR<Widgets_for_fieldsUpdateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutWidget_typesInput>
    create: XOR<Widgets_for_fieldsCreateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>
  }

  export type Widgets_for_fieldsUpdateWithWhereUniqueWithoutWidget_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    data: XOR<Widgets_for_fieldsUpdateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutWidget_typesInput>
  }

  export type Widgets_for_fieldsUpdateManyWithWhereWithoutWidget_typesInput = {
    where: Widgets_for_fieldsScalarWhereInput
    data: XOR<Widgets_for_fieldsUpdateManyMutationInput, Widgets_for_fieldsUncheckedUpdateManyWithoutWidgets_for_fieldsInput>
  }

  export type Field_typesCreateWithoutWidgets_for_fieldsInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesCreateOrConnectWithoutWidgets_for_fieldsInput = {
    where: Field_typesWhereUniqueInput
    create: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
  }

  export type Widget_typesCreateWithoutWidgets_for_fieldsInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label?: string | null
    deleted?: boolean | null
    fields?: FieldsUncheckedCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesCreateOrConnectWithoutWidgets_for_fieldsInput = {
    where: Widget_typesWhereUniqueInput
    create: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
  }

  export type Field_typesUpsertWithoutWidgets_for_fieldsInput = {
    update: XOR<Field_typesUpdateWithoutWidgets_for_fieldsInput, Field_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
    create: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
  }

  export type Field_typesUpdateWithoutWidgets_for_fieldsInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutField_typesNestedInput
  }

  export type Field_typesUncheckedUpdateWithoutWidgets_for_fieldsInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutField_typesNestedInput
  }

  export type Widget_typesUpsertWithoutWidgets_for_fieldsInput = {
    update: XOR<Widget_typesUpdateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
    create: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
  }

  export type Widget_typesUpdateWithoutWidgets_for_fieldsInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutWidget_typesNestedInput
  }

  export type Widget_typesUncheckedUpdateWithoutWidgets_for_fieldsInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutWidget_typesNestedInput
  }

  export type Action_report_valuesCreateManyAccountsInput = {
    action_report_value_id: string
    action_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_reportsCreateManyAccountsInput = {
    action_report_id: string
    action_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesCreateManyAccountsInput = {
    action_value_id: string
    action_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ActionsCreateManyAccountsInput = {
    action_id: string
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaCreateManyAccountsInput = {
    check_taxon_id: string
    check_id?: string | null
    taxon_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesCreateManyAccountsInput = {
    check_value_id: string
    check_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ChecksCreateManyAccountsInput = {
    check_id: string
    place_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsCreateManyAccountsInput = {
    field_id: string
    project_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateManyAccountsInput = {
    file_id: string
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateManyAccountsInput = {
    goal_report_value_id: string
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsCreateManyAccountsInput = {
    goal_report_id: string
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type GoalsCreateManyAccountsInput = {
    goal_id: string
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type List_valuesCreateManyAccountsInput = {
    list_value_id: string
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ListsCreateManyAccountsInput = {
    list_id: string
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesCreateManyAccountsInput = {
    observation_source_id: string
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type ObservationsCreateManyAccountsInput = {
    observation_id: string
    observation_source_id?: string | null
    place_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateManyAccountsInput = {
    person_id: string
    project_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateManyAccountsInput = {
    place_level_id: string
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesCreateManyAccountsInput = {
    place_report_value_id: string
    place_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_reportsCreateManyAccountsInput = {
    place_report_id: string
    place_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_usersCreateManyAccountsInput = {
    place_user_id: string
    place_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type PlacesCreateManyAccountsInput = {
    place_id: string
    subproject_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
  }

  export type Project_reportsCreateManyAccountsInput = {
    project_report_id: string
    project_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateManyAccountsInput = {
    project_user_id: string
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ProjectsCreateManyAccountsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: string | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: boolean | null
    files_active_projects_reports?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_subproject_reports?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    files_active_check_reports?: boolean | null
    deleted?: boolean | null
  }

  export type Subproject_reportsCreateManyAccountsInput = {
    subproject_report_id: string
    subproject_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateManyAccountsInput = {
    subproject_taxon_id: string
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateManyAccountsInput = {
    subproject_user_id: string
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type SubprojectsCreateManyAccountsInput = {
    subproject_id: string
    project_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type TaxaCreateManyAccountsInput = {
    taxon_id: string
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxonomiesCreateManyAccountsInput = {
    taxonomy_id: string
    project_id?: string | null
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type UnitsCreateManyAccountsInput = {
    unit_id: string
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesUpdateWithoutAccountsInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUpdateOneWithoutAction_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutAction_report_valuesNestedInput
  }

  export type Action_report_valuesUncheckedUpdateWithoutAccountsInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    action_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_report_valuesUncheckedUpdateManyWithoutAction_report_valuesInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    action_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_reportsUpdateWithoutAccountsInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutAction_reportsNestedInput
    actions?: ActionsUpdateOneWithoutAction_reportsNestedInput
  }

  export type Action_reportsUncheckedUpdateWithoutAccountsInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAction_reportsNestedInput
  }

  export type Action_reportsUncheckedUpdateManyWithoutAction_reportsInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_valuesUpdateWithoutAccountsInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateOneWithoutAction_valuesNestedInput
    units?: UnitsUpdateOneWithoutAction_valuesNestedInput
  }

  export type Action_valuesUncheckedUpdateWithoutAccountsInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_valuesUncheckedUpdateManyWithoutAction_valuesInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ActionsUpdateWithoutAccountsInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUpdateManyWithoutActionsNestedInput
    places?: PlacesUpdateOneWithoutActionsNestedInput
    files?: FilesUpdateManyWithoutActionsNestedInput
  }

  export type ActionsUncheckedUpdateWithoutAccountsInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUncheckedUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutActionsNestedInput
    files?: FilesUncheckedUpdateManyWithoutActionsNestedInput
  }

  export type ActionsUncheckedUpdateManyWithoutActionsInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaUpdateWithoutAccountsInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: ChecksUpdateOneWithoutCheck_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutCheck_taxaNestedInput
    units?: UnitsUpdateOneWithoutCheck_taxaNestedInput
  }

  export type Check_taxaUncheckedUpdateWithoutAccountsInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaUncheckedUpdateManyWithoutCheck_taxaInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_valuesUpdateWithoutAccountsInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: ChecksUpdateOneWithoutCheck_valuesNestedInput
    units?: UnitsUpdateOneWithoutCheck_valuesNestedInput
  }

  export type Check_valuesUncheckedUpdateWithoutAccountsInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_valuesUncheckedUpdateManyWithoutCheck_valuesInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ChecksUpdateWithoutAccountsInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUpdateManyWithoutChecksNestedInput
    places?: PlacesUpdateOneWithoutChecksNestedInput
    files?: FilesUpdateManyWithoutChecksNestedInput
  }

  export type ChecksUncheckedUpdateWithoutAccountsInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutChecksNestedInput
    files?: FilesUncheckedUpdateManyWithoutChecksNestedInput
  }

  export type ChecksUncheckedUpdateManyWithoutChecksInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsUpdateWithoutAccountsInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    field_types?: Field_typesUpdateOneWithoutFieldsNestedInput
    lists?: ListsUpdateOneWithoutFieldsNestedInput
    projects?: ProjectsUpdateOneWithoutFieldsNestedInput
    widget_types?: Widget_typesUpdateOneWithoutFieldsNestedInput
  }

  export type FieldsUncheckedUpdateWithoutAccountsInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsUncheckedUpdateManyWithoutFieldsInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesUpdateWithoutAccountsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateOneWithoutFilesNestedInput
    checks?: ChecksUpdateOneWithoutFilesNestedInput
    places?: PlacesUpdateOneWithoutFilesNestedInput
    projects?: ProjectsUpdateOneWithoutFilesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutFilesNestedInput
  }

  export type FilesUncheckedUpdateWithoutAccountsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesUncheckedUpdateManyWithoutFilesInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUpdateWithoutAccountsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateWithoutAccountsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutGoal_report_valuesInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsUpdateWithoutAccountsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput
    goals?: GoalsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateWithoutAccountsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateManyWithoutGoal_reportsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type GoalsUpdateWithoutAccountsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateManyWithoutGoalsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateWithoutAccountsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateManyWithoutGoalsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUpdateWithoutAccountsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lists?: ListsUpdateOneWithoutList_valuesNestedInput
  }

  export type List_valuesUncheckedUpdateWithoutAccountsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUncheckedUpdateManyWithoutList_valuesInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListsUpdateWithoutAccountsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutAccountsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateManyWithoutListsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesUpdateWithoutAccountsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutObservation_sourcesNestedInput
    observations?: ObservationsUpdateManyWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateWithoutAccountsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: ObservationsUncheckedUpdateManyWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateManyWithoutObservation_sourcesInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ObservationsUpdateWithoutAccountsInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_sources?: Observation_sourcesUpdateOneWithoutObservationsNestedInput
    places?: PlacesUpdateOneWithoutObservationsNestedInput
  }

  export type ObservationsUncheckedUpdateWithoutAccountsInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    observation_source_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ObservationsUncheckedUpdateManyWithoutObservationsInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    observation_source_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUpdateWithoutAccountsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutPersonsNestedInput
  }

  export type PersonsUncheckedUpdateWithoutAccountsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUncheckedUpdateManyWithoutPersonsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUpdateWithoutAccountsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutPlace_levelsNestedInput
  }

  export type Place_levelsUncheckedUpdateWithoutAccountsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUncheckedUpdateManyWithoutPlace_levelsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_report_valuesUpdateWithoutAccountsInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_reports?: Place_reportsUpdateOneWithoutPlace_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutPlace_report_valuesNestedInput
  }

  export type Place_report_valuesUncheckedUpdateWithoutAccountsInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    place_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_report_valuesUncheckedUpdateManyWithoutPlace_report_valuesInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    place_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_reportsUpdateWithoutAccountsInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_report_values?: Place_report_valuesUpdateManyWithoutPlace_reportsNestedInput
    places?: PlacesUpdateOneWithoutPlace_reportsNestedInput
  }

  export type Place_reportsUncheckedUpdateWithoutAccountsInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutPlace_reportsNestedInput
  }

  export type Place_reportsUncheckedUpdateManyWithoutPlace_reportsInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_usersUpdateWithoutAccountsInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    places?: PlacesUpdateOneWithoutPlace_usersNestedInput
    users?: UsersUpdateOneWithoutPlace_usersNestedInput
  }

  export type Place_usersUncheckedUpdateWithoutAccountsInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_usersUncheckedUpdateManyWithoutPlace_usersInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PlacesUpdateWithoutAccountsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutAccountsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateManyWithoutPlacesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_reportsUpdateWithoutAccountsInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutProject_reportsNestedInput
  }

  export type Project_reportsUncheckedUpdateWithoutAccountsInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_reportsUncheckedUpdateManyWithoutProject_reportsInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUpdateWithoutAccountsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutProject_usersNestedInput
    users?: UsersUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateWithoutAccountsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUncheckedUpdateManyWithoutProject_usersInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProjectsUpdateWithoutAccountsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutProjectsNestedInput
    files?: FilesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutAccountsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutProjectsNestedInput
    files?: FilesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateManyWithoutProjectsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subproject_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_check_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_reportsUpdateWithoutAccountsInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subprojects?: SubprojectsUpdateOneWithoutSubproject_reportsNestedInput
  }

  export type Subproject_reportsUncheckedUpdateWithoutAccountsInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_reportsUncheckedUpdateManyWithoutSubproject_reportsInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUpdateWithoutAccountsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subprojects?: SubprojectsUpdateOneWithoutSubproject_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateWithoutAccountsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutSubproject_taxaInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUpdateWithoutAccountsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subprojects?: SubprojectsUpdateOneWithoutSubproject_usersNestedInput
    users?: UsersUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateWithoutAccountsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUncheckedUpdateManyWithoutSubproject_usersInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsUpdateWithoutAccountsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutAccountsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateManyWithoutSubprojectsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaUpdateWithoutAccountsInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutTaxaNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutTaxaNestedInput
    taxonomies?: TaxonomiesUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateWithoutAccountsInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutTaxaNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateManyWithoutTaxaInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxonomiesUpdateWithoutAccountsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUpdateManyWithoutTaxonomiesNestedInput
    projects?: ProjectsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateWithoutAccountsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateManyWithoutTaxonomiesInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpdateWithoutAccountsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutAccountsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateManyWithoutUnitsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_report_valuesCreateManyAction_reportsInput = {
    action_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesUpdateWithoutAction_reportsInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutAction_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutAction_report_valuesNestedInput
  }

  export type Action_report_valuesUncheckedUpdateWithoutAction_reportsInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_reportsCreateManyActionsInput = {
    action_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesCreateManyActionsInput = {
    action_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateManyActionsInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type Action_reportsUpdateWithoutActionsInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutAction_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutAction_reportsNestedInput
  }

  export type Action_reportsUncheckedUpdateWithoutActionsInput = {
    action_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAction_reportsNestedInput
  }

  export type Action_valuesUpdateWithoutActionsInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutAction_valuesNestedInput
    units?: UnitsUpdateOneWithoutAction_valuesNestedInput
  }

  export type Action_valuesUncheckedUpdateWithoutActionsInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesUpdateWithoutActionsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFilesNestedInput
    checks?: ChecksUpdateOneWithoutFilesNestedInput
    places?: PlacesUpdateOneWithoutFilesNestedInput
    projects?: ProjectsUpdateOneWithoutFilesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutFilesNestedInput
  }

  export type FilesUncheckedUpdateWithoutActionsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaCreateManyChecksInput = {
    check_taxon_id: string
    account_id?: string | null
    taxon_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesCreateManyChecksInput = {
    check_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateManyChecksInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaUpdateWithoutChecksInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutCheck_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutCheck_taxaNestedInput
    units?: UnitsUpdateOneWithoutCheck_taxaNestedInput
  }

  export type Check_taxaUncheckedUpdateWithoutChecksInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_valuesUpdateWithoutChecksInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutCheck_valuesNestedInput
    units?: UnitsUpdateOneWithoutCheck_valuesNestedInput
  }

  export type Check_valuesUncheckedUpdateWithoutChecksInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesUpdateWithoutChecksInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFilesNestedInput
    actions?: ActionsUpdateOneWithoutFilesNestedInput
    places?: PlacesUpdateOneWithoutFilesNestedInput
    projects?: ProjectsUpdateOneWithoutFilesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutFilesNestedInput
  }

  export type FilesUncheckedUpdateWithoutChecksInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsCreateManyField_typesInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsCreateManyField_typesInput = {
    widget_for_field_id: string
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsUpdateWithoutField_typesInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFieldsNestedInput
    lists?: ListsUpdateOneWithoutFieldsNestedInput
    projects?: ProjectsUpdateOneWithoutFieldsNestedInput
    widget_types?: Widget_typesUpdateOneWithoutFieldsNestedInput
  }

  export type FieldsUncheckedUpdateWithoutField_typesInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsUpdateWithoutField_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widget_types?: Widget_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
  }

  export type Widgets_for_fieldsUncheckedUpdateWithoutField_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsUncheckedUpdateManyWithoutWidgets_for_fieldsInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesCreateManyGoal_reportsInput = {
    goal_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesUpdateWithoutGoal_reportsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateWithoutGoal_reportsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsCreateManyGoalsInput = {
    goal_report_id: string
    account_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsUpdateWithoutGoalsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateWithoutGoalsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput
  }

  export type FieldsCreateManyListsInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type List_valuesCreateManyListsInput = {
    list_value_id: string
    account_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type UnitsCreateManyListsInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsUpdateWithoutListsInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFieldsNestedInput
    field_types?: Field_typesUpdateOneWithoutFieldsNestedInput
    projects?: ProjectsUpdateOneWithoutFieldsNestedInput
    widget_types?: Widget_typesUpdateOneWithoutFieldsNestedInput
  }

  export type FieldsUncheckedUpdateWithoutListsInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUpdateWithoutListsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutList_valuesNestedInput
  }

  export type List_valuesUncheckedUpdateWithoutListsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpdateWithoutListsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutListsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type User_messagesCreateManyMessagesInput = {
    user_message_id: string
    user_id?: string | null
    label?: string | null
    read?: boolean | null
  }

  export type User_messagesUpdateWithoutMessagesInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    users?: UsersUpdateOneWithoutUser_messagesNestedInput
  }

  export type User_messagesUncheckedUpdateWithoutMessagesInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUncheckedUpdateManyWithoutUser_messagesInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ObservationsCreateManyObservation_sourcesInput = {
    observation_id: string
    account_id?: string | null
    place_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type ObservationsUpdateWithoutObservation_sourcesInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservationsNestedInput
    places?: PlacesUpdateOneWithoutObservationsNestedInput
  }

  export type ObservationsUncheckedUpdateWithoutObservation_sourcesInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_report_valuesCreateManyPlace_reportsInput = {
    place_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesUpdateWithoutPlace_reportsInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutPlace_report_valuesNestedInput
  }

  export type Place_report_valuesUncheckedUpdateWithoutPlace_reportsInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ActionsCreateManyPlacesInput = {
    action_id: string
    account_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ChecksCreateManyPlacesInput = {
    check_id: string
    account_id?: string | null
    date?: Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateManyPlacesInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type ObservationsCreateManyPlacesInput = {
    observation_id: string
    account_id?: string | null
    observation_source_id?: string | null
    id_in_source?: string | null
    url?: string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string | null
    author?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_reportsCreateManyPlacesInput = {
    place_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_usersCreateManyPlacesInput = {
    place_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type PlacesCreateManyPlacesInput = {
    place_id: string
    account_id?: string | null
    subproject_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
  }

  export type ActionsUpdateWithoutPlacesInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUpdateManyWithoutActionsNestedInput
    accounts?: AccountsUpdateOneWithoutActionsNestedInput
    files?: FilesUpdateManyWithoutActionsNestedInput
  }

  export type ActionsUncheckedUpdateWithoutPlacesInput = {
    action_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: Action_reportsUncheckedUpdateManyWithoutActionsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutActionsNestedInput
    files?: FilesUncheckedUpdateManyWithoutActionsNestedInput
  }

  export type ChecksUpdateWithoutPlacesInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUpdateManyWithoutChecksNestedInput
    accounts?: AccountsUpdateOneWithoutChecksNestedInput
    files?: FilesUpdateManyWithoutChecksNestedInput
  }

  export type ChecksUncheckedUpdateWithoutPlacesInput = {
    check_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    relevant_for_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutChecksNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutChecksNestedInput
    files?: FilesUncheckedUpdateManyWithoutChecksNestedInput
  }

  export type FilesUpdateWithoutPlacesInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFilesNestedInput
    actions?: ActionsUpdateOneWithoutFilesNestedInput
    checks?: ChecksUpdateOneWithoutFilesNestedInput
    projects?: ProjectsUpdateOneWithoutFilesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutFilesNestedInput
  }

  export type FilesUncheckedUpdateWithoutPlacesInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ObservationsUpdateWithoutPlacesInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservationsNestedInput
    observation_sources?: Observation_sourcesUpdateOneWithoutObservationsNestedInput
  }

  export type ObservationsUncheckedUpdateWithoutPlacesInput = {
    observation_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    observation_source_id?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    observation_data?: NullableJsonNullValueInput | InputJsonValue
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_reportsUpdateWithoutPlacesInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_report_values?: Place_report_valuesUpdateManyWithoutPlace_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutPlace_reportsNestedInput
  }

  export type Place_reportsUncheckedUpdateWithoutPlacesInput = {
    place_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutPlace_reportsNestedInput
  }

  export type Place_usersUpdateWithoutPlacesInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_usersNestedInput
    users?: UsersUpdateOneWithoutPlace_usersNestedInput
  }

  export type Place_usersUncheckedUpdateWithoutPlacesInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PlacesUpdateWithoutPlacesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutPlacesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateManyWithoutOther_placesInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsCreateManyProjectsInput = {
    field_id: string
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    widget_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FilesCreateManyProjectsInput = {
    file_id: string
    account_id?: string | null
    subproject_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type ListsCreateManyProjectsInput = {
    list_id: string
    account_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesCreateManyProjectsInput = {
    observation_source_id: string
    account_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateManyProjectsInput = {
    person_id: string
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateManyProjectsInput = {
    place_level_id: string
    account_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observation_references?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_reportsCreateManyProjectsInput = {
    project_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateManyProjectsInput = {
    project_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type SubprojectsCreateManyProjectsInput = {
    subproject_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    since_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type TaxonomiesCreateManyProjectsInput = {
    taxonomy_id: string
    account_id?: string | null
    type?: string | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type UnitsCreateManyProjectsInput = {
    unit_id: string
    account_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: string | null
    list_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsUpdateWithoutProjectsInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFieldsNestedInput
    field_types?: Field_typesUpdateOneWithoutFieldsNestedInput
    lists?: ListsUpdateOneWithoutFieldsNestedInput
    widget_types?: Widget_typesUpdateOneWithoutFieldsNestedInput
  }

  export type FieldsUncheckedUpdateWithoutProjectsInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FilesUpdateWithoutProjectsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFilesNestedInput
    actions?: ActionsUpdateOneWithoutFilesNestedInput
    checks?: ChecksUpdateOneWithoutFilesNestedInput
    places?: PlacesUpdateOneWithoutFilesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutFilesNestedInput
  }

  export type FilesUncheckedUpdateWithoutProjectsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListsUpdateWithoutProjectsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutProjectsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fields?: FieldsUncheckedUpdateManyWithoutListsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type Observation_sourcesUpdateWithoutProjectsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservation_sourcesNestedInput
    observations?: ObservationsUpdateManyWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateWithoutProjectsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: ObservationsUncheckedUpdateManyWithoutObservation_sourcesNestedInput
  }

  export type PersonsUpdateWithoutProjectsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPersonsNestedInput
  }

  export type PersonsUncheckedUpdateWithoutProjectsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUpdateWithoutProjectsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_levelsNestedInput
  }

  export type Place_levelsUncheckedUpdateWithoutProjectsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observation_references?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_reportsUpdateWithoutProjectsInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_reportsNestedInput
  }

  export type Project_reportsUncheckedUpdateWithoutProjectsInput = {
    project_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUpdateWithoutProjectsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_usersNestedInput
    users?: UsersUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateWithoutProjectsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsUpdateWithoutProjectsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutProjectsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    since_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files?: FilesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type TaxonomiesUpdateWithoutProjectsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUpdateManyWithoutTaxonomiesNestedInput
    accounts?: AccountsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateWithoutProjectsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput
  }

  export type UnitsUpdateWithoutProjectsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutProjectsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutUnitsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type FilesCreateManySubprojectsInput = {
    file_id: string
    account_id?: string | null
    project_id?: string | null
    place_id?: string | null
    action_id?: string | null
    check_id?: string | null
    name?: string | null
    label?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: string | null
    url?: string | null
    deleted?: boolean | null
  }

  export type GoalsCreateManySubprojectsInput = {
    goal_id: string
    account_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type PlacesCreateManySubprojectsInput = {
    place_id: string
    account_id?: string | null
    parent_id?: string | null
    level?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    files_active_places?: boolean | null
    deleted?: boolean | null
  }

  export type Subproject_reportsCreateManySubprojectsInput = {
    subproject_report_id: string
    account_id?: string | null
    year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateManySubprojectsInput = {
    subproject_taxon_id: string
    account_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateManySubprojectsInput = {
    subproject_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FilesUpdateWithoutSubprojectsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFilesNestedInput
    actions?: ActionsUpdateOneWithoutFilesNestedInput
    checks?: ChecksUpdateOneWithoutFilesNestedInput
    places?: PlacesUpdateOneWithoutFilesNestedInput
    projects?: ProjectsUpdateOneWithoutFilesNestedInput
  }

  export type FilesUncheckedUpdateWithoutSubprojectsInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    mimetype?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type GoalsUpdateWithoutSubprojectsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateManyWithoutGoalsNestedInput
    accounts?: AccountsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateWithoutSubprojectsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput
  }

  export type PlacesUpdateWithoutSubprojectsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUpdateManyWithoutPlacesNestedInput
    files?: FilesUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUpdateManyWithoutPlacesNestedInput
    accounts?: AccountsUpdateOneWithoutPlacesNestedInput
    places?: PlacesUpdateOneWithoutOther_placesNestedInput
    other_places?: PlacesUpdateManyWithoutPlacesNestedInput
  }

  export type PlacesUncheckedUpdateWithoutSubprojectsInput = {
    place_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: ActionsUncheckedUpdateManyWithoutPlacesNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutPlacesNestedInput
    files?: FilesUncheckedUpdateManyWithoutPlacesNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutPlacesNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutPlacesNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutPlacesNestedInput
    other_places?: PlacesUncheckedUpdateManyWithoutPlacesNestedInput
  }

  export type Subproject_reportsUpdateWithoutSubprojectsInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_reportsNestedInput
  }

  export type Subproject_reportsUncheckedUpdateWithoutSubprojectsInput = {
    subproject_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUpdateWithoutSubprojectsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateWithoutSubprojectsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUpdateWithoutSubprojectsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_usersNestedInput
    users?: UsersUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateWithoutSubprojectsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaCreateManyTaxaInput = {
    check_taxon_id: string
    account_id?: string | null
    check_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateManyTaxaInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaUpdateWithoutTaxaInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutCheck_taxaNestedInput
    checks?: ChecksUpdateOneWithoutCheck_taxaNestedInput
    units?: UnitsUpdateOneWithoutCheck_taxaNestedInput
  }

  export type Check_taxaUncheckedUpdateWithoutTaxaInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUpdateWithoutTaxaInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_taxaNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateWithoutTaxaInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaCreateManyTaxonomiesInput = {
    taxon_id: string
    account_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxaUpdateWithoutTaxonomiesInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUpdateManyWithoutTaxaNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutTaxaNestedInput
    accounts?: AccountsUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateWithoutTaxonomiesInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutTaxaNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type Action_report_valuesCreateManyUnitsInput = {
    action_report_value_id: string
    account_id?: string | null
    action_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_valuesCreateManyUnitsInput = {
    action_value_id: string
    account_id?: string | null
    action_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_taxaCreateManyUnitsInput = {
    check_taxon_id: string
    account_id?: string | null
    check_id?: string | null
    taxon_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Check_valuesCreateManyUnitsInput = {
    check_value_id: string
    account_id?: string | null
    check_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateManyUnitsInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Place_report_valuesCreateManyUnitsInput = {
    place_report_value_id: string
    account_id?: string | null
    place_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Action_report_valuesUpdateWithoutUnitsInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutAction_report_valuesNestedInput
    action_reports?: Action_reportsUpdateOneWithoutAction_report_valuesNestedInput
  }

  export type Action_report_valuesUncheckedUpdateWithoutUnitsInput = {
    action_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Action_valuesUpdateWithoutUnitsInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutAction_valuesNestedInput
    actions?: ActionsUpdateOneWithoutAction_valuesNestedInput
  }

  export type Action_valuesUncheckedUpdateWithoutUnitsInput = {
    action_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    action_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_taxaUpdateWithoutUnitsInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutCheck_taxaNestedInput
    checks?: ChecksUpdateOneWithoutCheck_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutCheck_taxaNestedInput
  }

  export type Check_taxaUncheckedUpdateWithoutUnitsInput = {
    check_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Check_valuesUpdateWithoutUnitsInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutCheck_valuesNestedInput
    checks?: ChecksUpdateOneWithoutCheck_valuesNestedInput
  }

  export type Check_valuesUncheckedUpdateWithoutUnitsInput = {
    check_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    check_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUpdateWithoutUnitsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_report_valuesNestedInput
    goal_reports?: Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateWithoutUnitsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_report_valuesUpdateWithoutUnitsInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_report_valuesNestedInput
    place_reports?: Place_reportsUpdateOneWithoutPlace_report_valuesNestedInput
  }

  export type Place_report_valuesUncheckedUpdateWithoutUnitsInput = {
    place_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type AccountsCreateManyUsersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
  }

  export type Place_usersCreateManyUsersInput = {
    place_user_id: string
    account_id?: string | null
    place_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateManyUsersInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateManyUsersInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type User_messagesCreateManyUsersInput = {
    user_message_id: string
    message_id?: string | null
    label?: string | null
    read?: boolean | null
  }

  export type AccountsUpdateWithoutUsersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUpdateManyWithoutAccountsNestedInput
    files?: FilesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUpdateManyWithoutAccountsNestedInput
    places?: PlacesUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutUsersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    action_report_values?: Action_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    action_reports?: Action_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    action_values?: Action_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    actions?: ActionsUncheckedUpdateManyWithoutAccountsNestedInput
    check_taxa?: Check_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    check_values?: Check_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    checks?: ChecksUncheckedUpdateManyWithoutAccountsNestedInput
    fields?: FieldsUncheckedUpdateManyWithoutAccountsNestedInput
    files?: FilesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    observations?: ObservationsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    place_report_values?: Place_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    place_reports?: Place_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    place_users?: Place_usersUncheckedUpdateManyWithoutAccountsNestedInput
    places?: PlacesUncheckedUpdateManyWithoutAccountsNestedInput
    project_reports?: Project_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_reports?: Subproject_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateManyWithoutAccountsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Place_usersUpdateWithoutUsersInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_usersNestedInput
    places?: PlacesUpdateOneWithoutPlace_usersNestedInput
  }

  export type Place_usersUncheckedUpdateWithoutUsersInput = {
    place_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    place_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUpdateWithoutUsersInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_usersNestedInput
    projects?: ProjectsUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateWithoutUsersInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUpdateWithoutUsersInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_usersNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateWithoutUsersInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUpdateWithoutUsersInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    messages?: MessagesUpdateOneWithoutUser_messagesNestedInput
  }

  export type User_messagesUncheckedUpdateWithoutUsersInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type FieldsCreateManyWidget_typesInput = {
    field_id: string
    project_id?: string | null
    account_id?: string | null
    table_name?: string | null
    field_type_id?: string | null
    name?: string | null
    field_label?: string | null
    list_id?: string | null
    preset?: string | null
    obsolete?: boolean | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsCreateManyWidget_typesInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type FieldsUpdateWithoutWidget_typesInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutFieldsNestedInput
    field_types?: Field_typesUpdateOneWithoutFieldsNestedInput
    lists?: ListsUpdateOneWithoutFieldsNestedInput
    projects?: ProjectsUpdateOneWithoutFieldsNestedInput
  }

  export type FieldsUncheckedUpdateWithoutWidget_typesInput = {
    field_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    table_name?: NullableStringFieldUpdateOperationsInput | string | null
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    field_label?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    preset?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsUpdateWithoutWidget_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    field_types?: Field_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
  }

  export type Widgets_for_fieldsUncheckedUpdateWithoutWidget_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}