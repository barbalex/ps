/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as DataAuthLayoutImport } from './routes/data/_authLayout'
import { Route as LayoutDocsImport } from './routes/_layout.docs'
import { Route as DataAuthLayoutAuthImport } from './routes/data/_authLayout.auth'
import { Route as DataAuthLayoutProjectsIndexImport } from './routes/data/_authLayout.projects/index'

// Create Virtual Routes

const DataImport = createFileRoute('/data')()

// Create/Update Routes

const DataRoute = DataImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const DataAuthLayoutRoute = DataAuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => DataRoute,
} as any)

const LayoutDocsRoute = LayoutDocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => LayoutRoute,
} as any)

const DataAuthLayoutAuthRoute = DataAuthLayoutAuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => DataAuthLayoutRoute,
} as any)

const DataAuthLayoutProjectsIndexRoute =
  DataAuthLayoutProjectsIndexImport.update({
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => DataAuthLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/docs': {
      id: '/_layout/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof LayoutDocsImport
      parentRoute: typeof LayoutImport
    }
    '/data': {
      id: '/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataImport
      parentRoute: typeof rootRoute
    }
    '/data/_authLayout': {
      id: '/data/_authLayout'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataAuthLayoutImport
      parentRoute: typeof DataRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/data/_authLayout/auth': {
      id: '/data/_authLayout/auth'
      path: '/auth'
      fullPath: '/data/auth'
      preLoaderRoute: typeof DataAuthLayoutAuthImport
      parentRoute: typeof DataAuthLayoutImport
    }
    '/data/_authLayout/projects/': {
      id: '/data/_authLayout/projects/'
      path: '/projects'
      fullPath: '/data/projects'
      preLoaderRoute: typeof DataAuthLayoutProjectsIndexImport
      parentRoute: typeof DataAuthLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutDocsRoute: typeof LayoutDocsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDocsRoute: LayoutDocsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface DataAuthLayoutRouteChildren {
  DataAuthLayoutAuthRoute: typeof DataAuthLayoutAuthRoute
  DataAuthLayoutProjectsIndexRoute: typeof DataAuthLayoutProjectsIndexRoute
}

const DataAuthLayoutRouteChildren: DataAuthLayoutRouteChildren = {
  DataAuthLayoutAuthRoute: DataAuthLayoutAuthRoute,
  DataAuthLayoutProjectsIndexRoute: DataAuthLayoutProjectsIndexRoute,
}

const DataAuthLayoutRouteWithChildren = DataAuthLayoutRoute._addFileChildren(
  DataAuthLayoutRouteChildren,
)

interface DataRouteChildren {
  DataAuthLayoutRoute: typeof DataAuthLayoutRouteWithChildren
}

const DataRouteChildren: DataRouteChildren = {
  DataAuthLayoutRoute: DataAuthLayoutRouteWithChildren,
}

const DataRouteWithChildren = DataRoute._addFileChildren(DataRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/docs': typeof LayoutDocsRoute
  '/data': typeof DataAuthLayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/data/auth': typeof DataAuthLayoutAuthRoute
  '/data/projects': typeof DataAuthLayoutProjectsIndexRoute
}

export interface FileRoutesByTo {
  '/docs': typeof LayoutDocsRoute
  '/data': typeof DataAuthLayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/data/auth': typeof DataAuthLayoutAuthRoute
  '/data/projects': typeof DataAuthLayoutProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/docs': typeof LayoutDocsRoute
  '/data': typeof DataRouteWithChildren
  '/data/_authLayout': typeof DataAuthLayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/data/_authLayout/auth': typeof DataAuthLayoutAuthRoute
  '/data/_authLayout/projects/': typeof DataAuthLayoutProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/docs' | '/data' | '/' | '/data/auth' | '/data/projects'
  fileRoutesByTo: FileRoutesByTo
  to: '/docs' | '/data' | '/' | '/data/auth' | '/data/projects'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/docs'
    | '/data'
    | '/data/_authLayout'
    | '/_layout/'
    | '/data/_authLayout/auth'
    | '/data/_authLayout/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  DataRoute: typeof DataRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  DataRoute: DataRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/data"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/docs",
        "/_layout/"
      ]
    },
    "/_layout/docs": {
      "filePath": "_layout.docs.tsx",
      "parent": "/_layout"
    },
    "/data": {
      "filePath": "data",
      "children": [
        "/data/_authLayout"
      ]
    },
    "/data/_authLayout": {
      "filePath": "data/_authLayout.tsx",
      "parent": "/data",
      "children": [
        "/data/_authLayout/auth",
        "/data/_authLayout/projects/"
      ]
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/data/_authLayout/auth": {
      "filePath": "data/_authLayout.auth.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/projects/": {
      "filePath": "data/_authLayout.projects/index.tsx",
      "parent": "/data/_authLayout"
    }
  }
}
ROUTE_MANIFEST_END */
