/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as DataRouteImport } from './routes/data/route'
import { Route as DataIndexImport } from './routes/data/index'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as DataAuthImport } from './routes/data/auth'
import { Route as DataAppStatesImport } from './routes/data/app-states'
import { Route as LayoutDocsImport } from './routes/_layout.docs'
import { Route as DataWidgetsForFieldsRouteImport } from './routes/data/widgets-for-fields/route'
import { Route as DataWidgetTypesRouteImport } from './routes/data/widget-types/route'
import { Route as DataUsersRouteImport } from './routes/data/users/route'
import { Route as DataProjectsRouteImport } from './routes/data/projects/route'
import { Route as DataMessagesRouteImport } from './routes/data/messages/route'
import { Route as DataFilesRouteImport } from './routes/data/files/route'
import { Route as DataFieldsRouteImport } from './routes/data/fields/route'
import { Route as DataFieldTypesRouteImport } from './routes/data/field-types/route'
import { Route as DataCrsRouteImport } from './routes/data/crs/route'
import { Route as DataAccountsRouteImport } from './routes/data/accounts/route'
import { Route as DataWidgetsForFieldsIndexImport } from './routes/data/widgets-for-fields/index'
import { Route as DataWidgetTypesIndexImport } from './routes/data/widget-types/index'
import { Route as DataUsersIndexImport } from './routes/data/users/index'
import { Route as DataProjectsIndexImport } from './routes/data/projects/index'
import { Route as DataMessagesIndexImport } from './routes/data/messages/index'
import { Route as DataFilesIndexImport } from './routes/data/files/index'
import { Route as DataFieldsIndexImport } from './routes/data/fields/index'
import { Route as DataFieldTypesIndexImport } from './routes/data/field-types/index'
import { Route as DataCrsIndexImport } from './routes/data/crs/index'
import { Route as DataAccountsIndexImport } from './routes/data/accounts/index'
import { Route as DataWidgetsForFieldsFilterImport } from './routes/data/widgets-for-fields/filter'
import { Route as DataWidgetsForFieldsWidgetForFieldIdImport } from './routes/data/widgets-for-fields/$widgetForFieldId'
import { Route as DataWidgetTypesFilterImport } from './routes/data/widget-types/filter'
import { Route as DataWidgetTypesWidgetTypeIdImport } from './routes/data/widget-types/$widgetTypeId'
import { Route as DataUsersUserIdImport } from './routes/data/users/$userId'
import { Route as DataProjectsFilterImport } from './routes/data/projects/filter'
import { Route as DataMessagesMessageIdImport } from './routes/data/messages/$messageId'
import { Route as DataFilesFileIdImport } from './routes/data/files/$fileId'
import { Route as DataFieldsFilterImport } from './routes/data/fields/filter'
import { Route as DataFieldsFieldIdImport } from './routes/data/fields/$fieldId'
import { Route as DataFieldTypesFilterImport } from './routes/data/field-types/filter'
import { Route as DataFieldTypesFieldTypeIdImport } from './routes/data/field-types/$fieldTypeId'
import { Route as DataCrsCrsIdImport } from './routes/data/crs/$crsId'
import { Route as DataAccountsAccountIdImport } from './routes/data/accounts/$accountId'
import { Route as DataProjectsProjectIdRouteImport } from './routes/data/projects/$projectId_/route'
import { Route as DataProjectsProjectIdIndexImport } from './routes/data/projects/$projectId_/index'
import { Route as DataProjectsProjectIdProjectImport } from './routes/data/projects/$projectId_/project'
import { Route as DataFilesFileIdPreviewImport } from './routes/data/files/$fileId_/preview'
import { Route as DataProjectsProjectIdWmsLayersRouteImport } from './routes/data/projects/$projectId_/wms-layers/route'
import { Route as DataProjectsProjectIdVectorLayersRouteImport } from './routes/data/projects/$projectId_/vector-layers/route'
import { Route as DataProjectsProjectIdUsersRouteImport } from './routes/data/projects/$projectId_/users/route'
import { Route as DataProjectsProjectIdUnitsRouteImport } from './routes/data/projects/$projectId_/units/route'
import { Route as DataProjectsProjectIdTaxonomiesRouteImport } from './routes/data/projects/$projectId_/taxonomies/route'
import { Route as DataProjectsProjectIdSubprojectsRouteImport } from './routes/data/projects/$projectId_/subprojects/route'
import { Route as DataProjectsProjectIdReportsRouteImport } from './routes/data/projects/$projectId_/reports/route'
import { Route as DataProjectsProjectIdPlaceLevelsRouteImport } from './routes/data/projects/$projectId_/place-levels/route'
import { Route as DataProjectsProjectIdPersonsRouteImport } from './routes/data/projects/$projectId_/persons/route'
import { Route as DataProjectsProjectIdListsRouteImport } from './routes/data/projects/$projectId_/lists/route'
import { Route as DataProjectsProjectIdFilesRouteImport } from './routes/data/projects/$projectId_/files/route'
import { Route as DataProjectsProjectIdFieldsRouteImport } from './routes/data/projects/$projectId_/fields/route'
import { Route as DataProjectsProjectIdCrsRouteImport } from './routes/data/projects/$projectId_/crs/route'
import { Route as DataProjectsProjectIdWmsLayersIndexImport } from './routes/data/projects/$projectId_/wms-layers/index'
import { Route as DataProjectsProjectIdVectorLayersIndexImport } from './routes/data/projects/$projectId_/vector-layers/index'
import { Route as DataProjectsProjectIdUsersIndexImport } from './routes/data/projects/$projectId_/users/index'
import { Route as DataProjectsProjectIdUnitsIndexImport } from './routes/data/projects/$projectId_/units/index'
import { Route as DataProjectsProjectIdTaxonomiesIndexImport } from './routes/data/projects/$projectId_/taxonomies/index'
import { Route as DataProjectsProjectIdSubprojectsIndexImport } from './routes/data/projects/$projectId_/subprojects/index'
import { Route as DataProjectsProjectIdReportsIndexImport } from './routes/data/projects/$projectId_/reports/index'
import { Route as DataProjectsProjectIdPlaceLevelsIndexImport } from './routes/data/projects/$projectId_/place-levels/index'
import { Route as DataProjectsProjectIdPersonsIndexImport } from './routes/data/projects/$projectId_/persons/index'
import { Route as DataProjectsProjectIdListsIndexImport } from './routes/data/projects/$projectId_/lists/index'
import { Route as DataProjectsProjectIdFilesIndexImport } from './routes/data/projects/$projectId_/files/index'
import { Route as DataProjectsProjectIdFieldsIndexImport } from './routes/data/projects/$projectId_/fields/index'
import { Route as DataProjectsProjectIdCrsIndexImport } from './routes/data/projects/$projectId_/crs/index'
import { Route as DataFilesFileIdPreviewIndexImport } from './routes/data/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdWmsLayersFilterImport } from './routes/data/projects/$projectId_/wms-layers/filter'
import { Route as DataProjectsProjectIdWmsLayersWmsLayerIdImport } from './routes/data/projects/$projectId_/wms-layers/$wmsLayerId'
import { Route as DataProjectsProjectIdVectorLayersFilterImport } from './routes/data/projects/$projectId_/vector-layers/filter'
import { Route as DataProjectsProjectIdUnitsFilterImport } from './routes/data/projects/$projectId_/units/filter'
import { Route as DataProjectsProjectIdSubprojectsFilterImport } from './routes/data/projects/$projectId_/subprojects/filter'
import { Route as DataProjectsProjectIdReportsFilterImport } from './routes/data/projects/$projectId_/reports/filter'
import { Route as DataProjectsProjectIdPersonsFilterImport } from './routes/data/projects/$projectId_/persons/filter'
import { Route as DataProjectsProjectIdListsFilterImport } from './routes/data/projects/$projectId_/lists/filter'
import { Route as DataProjectsProjectIdFilesFileIdImport } from './routes/data/projects/$projectId_/files/$fileId'
import { Route as DataProjectsProjectIdFieldsFilterImport } from './routes/data/projects/$projectId_/fields/filter'
import { Route as DataProjectsProjectIdFieldsFieldIdImport } from './routes/data/projects/$projectId_/fields/$fieldId'
import { Route as DataProjectsProjectIdVectorLayersVectorLayerIdRouteImport } from './routes/data/projects/$projectId_/vector-layers/$vectorLayerId_/route'
import { Route as DataProjectsProjectIdTaxonomiesTaxonomyIdRouteImport } from './routes/data/projects/$projectId_/taxonomies/$taxonomyId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/route'
import { Route as DataProjectsProjectIdListsListIdRouteImport } from './routes/data/projects/$projectId_/lists/$listId_/route'
import { Route as DataProjectsProjectIdVectorLayersVectorLayerIdIndexImport } from './routes/data/projects/$projectId_/vector-layers/$vectorLayerId_/index'
import { Route as DataProjectsProjectIdUsersProjectUserIdIndexImport } from './routes/data/projects/$projectId_/users/$projectUserId.index'
import { Route as DataProjectsProjectIdUnitsUnitIdIndexImport } from './routes/data/projects/$projectId_/units/$unitId.index'
import { Route as DataProjectsProjectIdTaxonomiesTaxonomyIdIndexImport } from './routes/data/projects/$projectId_/taxonomies/$taxonomyId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/index'
import { Route as DataProjectsProjectIdReportsProjectReportIdIndexImport } from './routes/data/projects/$projectId_/reports/$projectReportId.index'
import { Route as DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexImport } from './routes/data/projects/$projectId_/place-levels/$placeLevelId.index'
import { Route as DataProjectsProjectIdPersonsPersonIdIndexImport } from './routes/data/projects/$projectId_/persons/$personId.index'
import { Route as DataProjectsProjectIdListsListIdIndexImport } from './routes/data/projects/$projectId_/lists/$listId_/index'
import { Route as DataProjectsProjectIdCrsProjectCrsIdIndexImport } from './routes/data/projects/$projectId_/crs/$projectCrsId.index'
import { Route as DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerImport } from './routes/data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer'
import { Route as DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyImport } from './routes/data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdSubprojectImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/subproject'
import { Route as DataProjectsProjectIdListsListIdListImport } from './routes/data/projects/$projectId_/lists/$listId_/list'
import { Route as DataProjectsProjectIdFilesFileIdPreviewImport } from './routes/data/projects/$projectId_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteImport } from './routes/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/route'
import { Route as DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteImport } from './routes/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/users/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/taxa/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/reports/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/files/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/route'
import { Route as DataProjectsProjectIdListsListIdValuesRouteImport } from './routes/data/projects/$projectId_/lists/$listId_/values/route'
import { Route as DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexImport } from './routes/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/index'
import { Route as DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexImport } from './routes/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/users/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/taxa/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/reports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/files/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/index'
import { Route as DataProjectsProjectIdListsListIdValuesIndexImport } from './routes/data/projects/$projectId_/lists/$listId_/values/index'
import { Route as DataProjectsProjectIdFilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdImport } from './routes/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/reports/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/route'
import { Route as DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexImport } from './routes/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/index'
import { Route as DataProjectsProjectIdListsListIdValuesListValueIdIndexImport } from './routes/data/projects/$projectId_/lists/$listId_/values/$listValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/route'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview.index'
import { Route as DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexImport } from './routes/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId.index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const DataRouteRoute = DataRouteImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => rootRoute,
} as any)

const DataIndexRoute = DataIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataRouteRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const DataAuthRoute = DataAuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataAppStatesRoute = DataAppStatesImport.update({
  id: '/app-states',
  path: '/app-states',
  getParentRoute: () => DataRouteRoute,
} as any)

const LayoutDocsRoute = LayoutDocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => LayoutRoute,
} as any)

const DataWidgetsForFieldsRouteRoute = DataWidgetsForFieldsRouteImport.update({
  id: '/widgets-for-fields',
  path: '/widgets-for-fields',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataWidgetTypesRouteRoute = DataWidgetTypesRouteImport.update({
  id: '/widget-types',
  path: '/widget-types',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataUsersRouteRoute = DataUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataProjectsRouteRoute = DataProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataMessagesRouteRoute = DataMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataFilesRouteRoute = DataFilesRouteImport.update({
  id: '/files',
  path: '/files',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataFieldsRouteRoute = DataFieldsRouteImport.update({
  id: '/fields',
  path: '/fields',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataFieldTypesRouteRoute = DataFieldTypesRouteImport.update({
  id: '/field-types',
  path: '/field-types',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataCrsRouteRoute = DataCrsRouteImport.update({
  id: '/crs',
  path: '/crs',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataAccountsRouteRoute = DataAccountsRouteImport.update({
  id: '/accounts',
  path: '/accounts',
  getParentRoute: () => DataRouteRoute,
} as any)

const DataWidgetsForFieldsIndexRoute = DataWidgetsForFieldsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataWidgetsForFieldsRouteRoute,
} as any)

const DataWidgetTypesIndexRoute = DataWidgetTypesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataWidgetTypesRouteRoute,
} as any)

const DataUsersIndexRoute = DataUsersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataUsersRouteRoute,
} as any)

const DataProjectsIndexRoute = DataProjectsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataProjectsRouteRoute,
} as any)

const DataMessagesIndexRoute = DataMessagesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataMessagesRouteRoute,
} as any)

const DataFilesIndexRoute = DataFilesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataFilesRouteRoute,
} as any)

const DataFieldsIndexRoute = DataFieldsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataFieldsRouteRoute,
} as any)

const DataFieldTypesIndexRoute = DataFieldTypesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataFieldTypesRouteRoute,
} as any)

const DataCrsIndexRoute = DataCrsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataCrsRouteRoute,
} as any)

const DataAccountsIndexRoute = DataAccountsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DataAccountsRouteRoute,
} as any)

const DataWidgetsForFieldsFilterRoute = DataWidgetsForFieldsFilterImport.update(
  {
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataWidgetsForFieldsRouteRoute,
  } as any,
)

const DataWidgetsForFieldsWidgetForFieldIdRoute =
  DataWidgetsForFieldsWidgetForFieldIdImport.update({
    id: '/$widgetForFieldId',
    path: '/$widgetForFieldId',
    getParentRoute: () => DataWidgetsForFieldsRouteRoute,
  } as any)

const DataWidgetTypesFilterRoute = DataWidgetTypesFilterImport.update({
  id: '/filter',
  path: '/filter',
  getParentRoute: () => DataWidgetTypesRouteRoute,
} as any)

const DataWidgetTypesWidgetTypeIdRoute =
  DataWidgetTypesWidgetTypeIdImport.update({
    id: '/$widgetTypeId',
    path: '/$widgetTypeId',
    getParentRoute: () => DataWidgetTypesRouteRoute,
  } as any)

const DataUsersUserIdRoute = DataUsersUserIdImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => DataUsersRouteRoute,
} as any)

const DataProjectsFilterRoute = DataProjectsFilterImport.update({
  id: '/filter',
  path: '/filter',
  getParentRoute: () => DataProjectsRouteRoute,
} as any)

const DataMessagesMessageIdRoute = DataMessagesMessageIdImport.update({
  id: '/$messageId',
  path: '/$messageId',
  getParentRoute: () => DataMessagesRouteRoute,
} as any)

const DataFilesFileIdRoute = DataFilesFileIdImport.update({
  id: '/$fileId',
  path: '/$fileId',
  getParentRoute: () => DataFilesRouteRoute,
} as any)

const DataFieldsFilterRoute = DataFieldsFilterImport.update({
  id: '/filter',
  path: '/filter',
  getParentRoute: () => DataFieldsRouteRoute,
} as any)

const DataFieldsFieldIdRoute = DataFieldsFieldIdImport.update({
  id: '/$fieldId',
  path: '/$fieldId',
  getParentRoute: () => DataFieldsRouteRoute,
} as any)

const DataFieldTypesFilterRoute = DataFieldTypesFilterImport.update({
  id: '/filter',
  path: '/filter',
  getParentRoute: () => DataFieldTypesRouteRoute,
} as any)

const DataFieldTypesFieldTypeIdRoute = DataFieldTypesFieldTypeIdImport.update({
  id: '/$fieldTypeId',
  path: '/$fieldTypeId',
  getParentRoute: () => DataFieldTypesRouteRoute,
} as any)

const DataCrsCrsIdRoute = DataCrsCrsIdImport.update({
  id: '/$crsId',
  path: '/$crsId',
  getParentRoute: () => DataCrsRouteRoute,
} as any)

const DataAccountsAccountIdRoute = DataAccountsAccountIdImport.update({
  id: '/$accountId',
  path: '/$accountId',
  getParentRoute: () => DataAccountsRouteRoute,
} as any)

const DataProjectsProjectIdRouteRoute = DataProjectsProjectIdRouteImport.update(
  {
    id: '/$projectId_',
    path: '/$projectId',
    getParentRoute: () => DataProjectsRouteRoute,
  } as any,
)

const DataProjectsProjectIdIndexRoute = DataProjectsProjectIdIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any,
)

const DataProjectsProjectIdProjectRoute =
  DataProjectsProjectIdProjectImport.update({
    id: '/project',
    path: '/project',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataFilesFileIdPreviewRoute = DataFilesFileIdPreviewImport.update({
  id: '/$fileId_/preview',
  path: '/$fileId/preview',
  getParentRoute: () => DataFilesRouteRoute,
} as any)

const DataProjectsProjectIdWmsLayersRouteRoute =
  DataProjectsProjectIdWmsLayersRouteImport.update({
    id: '/wms-layers',
    path: '/wms-layers',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersRouteRoute =
  DataProjectsProjectIdVectorLayersRouteImport.update({
    id: '/vector-layers',
    path: '/vector-layers',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdUsersRouteRoute =
  DataProjectsProjectIdUsersRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdUnitsRouteRoute =
  DataProjectsProjectIdUnitsRouteImport.update({
    id: '/units',
    path: '/units',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesRouteRoute =
  DataProjectsProjectIdTaxonomiesRouteImport.update({
    id: '/taxonomies',
    path: '/taxonomies',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsRouteRoute =
  DataProjectsProjectIdSubprojectsRouteImport.update({
    id: '/subprojects',
    path: '/subprojects',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdReportsRouteRoute =
  DataProjectsProjectIdReportsRouteImport.update({
    id: '/reports',
    path: '/reports',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdPlaceLevelsRouteRoute =
  DataProjectsProjectIdPlaceLevelsRouteImport.update({
    id: '/place-levels',
    path: '/place-levels',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdPersonsRouteRoute =
  DataProjectsProjectIdPersonsRouteImport.update({
    id: '/persons',
    path: '/persons',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdListsRouteRoute =
  DataProjectsProjectIdListsRouteImport.update({
    id: '/lists',
    path: '/lists',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdFilesRouteRoute =
  DataProjectsProjectIdFilesRouteImport.update({
    id: '/files',
    path: '/files',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdFieldsRouteRoute =
  DataProjectsProjectIdFieldsRouteImport.update({
    id: '/fields',
    path: '/fields',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdCrsRouteRoute =
  DataProjectsProjectIdCrsRouteImport.update({
    id: '/crs',
    path: '/crs',
    getParentRoute: () => DataProjectsProjectIdRouteRoute,
  } as any)

const DataProjectsProjectIdWmsLayersIndexRoute =
  DataProjectsProjectIdWmsLayersIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdWmsLayersRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersIndexRoute =
  DataProjectsProjectIdVectorLayersIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdVectorLayersRouteRoute,
  } as any)

const DataProjectsProjectIdUsersIndexRoute =
  DataProjectsProjectIdUsersIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdUsersRouteRoute,
  } as any)

const DataProjectsProjectIdUnitsIndexRoute =
  DataProjectsProjectIdUnitsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdUnitsRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesIndexRoute =
  DataProjectsProjectIdTaxonomiesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdTaxonomiesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsIndexRoute =
  DataProjectsProjectIdSubprojectsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdSubprojectsRouteRoute,
  } as any)

const DataProjectsProjectIdReportsIndexRoute =
  DataProjectsProjectIdReportsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdReportsRouteRoute,
  } as any)

const DataProjectsProjectIdPlaceLevelsIndexRoute =
  DataProjectsProjectIdPlaceLevelsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdPlaceLevelsRouteRoute,
  } as any)

const DataProjectsProjectIdPersonsIndexRoute =
  DataProjectsProjectIdPersonsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdPersonsRouteRoute,
  } as any)

const DataProjectsProjectIdListsIndexRoute =
  DataProjectsProjectIdListsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdListsRouteRoute,
  } as any)

const DataProjectsProjectIdFilesIndexRoute =
  DataProjectsProjectIdFilesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdFilesRouteRoute,
  } as any)

const DataProjectsProjectIdFieldsIndexRoute =
  DataProjectsProjectIdFieldsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdFieldsRouteRoute,
  } as any)

const DataProjectsProjectIdCrsIndexRoute =
  DataProjectsProjectIdCrsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdCrsRouteRoute,
  } as any)

const DataFilesFileIdPreviewIndexRoute =
  DataFilesFileIdPreviewIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataFilesFileIdPreviewRoute,
  } as any)

const DataProjectsProjectIdWmsLayersFilterRoute =
  DataProjectsProjectIdWmsLayersFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdWmsLayersRouteRoute,
  } as any)

const DataProjectsProjectIdWmsLayersWmsLayerIdRoute =
  DataProjectsProjectIdWmsLayersWmsLayerIdImport.update({
    id: '/$wmsLayerId',
    path: '/$wmsLayerId',
    getParentRoute: () => DataProjectsProjectIdWmsLayersRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersFilterRoute =
  DataProjectsProjectIdVectorLayersFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdVectorLayersRouteRoute,
  } as any)

const DataProjectsProjectIdUnitsFilterRoute =
  DataProjectsProjectIdUnitsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdUnitsRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsFilterRoute =
  DataProjectsProjectIdSubprojectsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdSubprojectsRouteRoute,
  } as any)

const DataProjectsProjectIdReportsFilterRoute =
  DataProjectsProjectIdReportsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdReportsRouteRoute,
  } as any)

const DataProjectsProjectIdPersonsFilterRoute =
  DataProjectsProjectIdPersonsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdPersonsRouteRoute,
  } as any)

const DataProjectsProjectIdListsFilterRoute =
  DataProjectsProjectIdListsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdListsRouteRoute,
  } as any)

const DataProjectsProjectIdFilesFileIdRoute =
  DataProjectsProjectIdFilesFileIdImport.update({
    id: '/$fileId',
    path: '/$fileId',
    getParentRoute: () => DataProjectsProjectIdFilesRouteRoute,
  } as any)

const DataProjectsProjectIdFieldsFilterRoute =
  DataProjectsProjectIdFieldsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () => DataProjectsProjectIdFieldsRouteRoute,
  } as any)

const DataProjectsProjectIdFieldsFieldIdRoute =
  DataProjectsProjectIdFieldsFieldIdImport.update({
    id: '/$fieldId',
    path: '/$fieldId',
    getParentRoute: () => DataProjectsProjectIdFieldsRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersVectorLayerIdRouteRoute =
  DataProjectsProjectIdVectorLayersVectorLayerIdRouteImport.update({
    id: '/$vectorLayerId_',
    path: '/$vectorLayerId',
    getParentRoute: () => DataProjectsProjectIdVectorLayersRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRoute =
  DataProjectsProjectIdTaxonomiesTaxonomyIdRouteImport.update({
    id: '/$taxonomyId_',
    path: '/$taxonomyId',
    getParentRoute: () => DataProjectsProjectIdTaxonomiesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdRouteImport.update({
    id: '/$subprojectId_',
    path: '/$subprojectId',
    getParentRoute: () => DataProjectsProjectIdSubprojectsRouteRoute,
  } as any)

const DataProjectsProjectIdListsListIdRouteRoute =
  DataProjectsProjectIdListsListIdRouteImport.update({
    id: '/$listId_',
    path: '/$listId',
    getParentRoute: () => DataProjectsProjectIdListsRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute =
  DataProjectsProjectIdVectorLayersVectorLayerIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdVectorLayersVectorLayerIdRouteRoute,
  } as any)

const DataProjectsProjectIdUsersProjectUserIdIndexRoute =
  DataProjectsProjectIdUsersProjectUserIdIndexImport.update({
    id: '/$projectUserId/',
    path: '/$projectUserId/',
    getParentRoute: () => DataProjectsProjectIdUsersRouteRoute,
  } as any)

const DataProjectsProjectIdUnitsUnitIdIndexRoute =
  DataProjectsProjectIdUnitsUnitIdIndexImport.update({
    id: '/$unitId/',
    path: '/$unitId/',
    getParentRoute: () => DataProjectsProjectIdUnitsRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute =
  DataProjectsProjectIdTaxonomiesTaxonomyIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdReportsProjectReportIdIndexRoute =
  DataProjectsProjectIdReportsProjectReportIdIndexImport.update({
    id: '/$projectReportId/',
    path: '/$projectReportId/',
    getParentRoute: () => DataProjectsProjectIdReportsRouteRoute,
  } as any)

const DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute =
  DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexImport.update({
    id: '/$placeLevelId/',
    path: '/$placeLevelId/',
    getParentRoute: () => DataProjectsProjectIdPlaceLevelsRouteRoute,
  } as any)

const DataProjectsProjectIdPersonsPersonIdIndexRoute =
  DataProjectsProjectIdPersonsPersonIdIndexImport.update({
    id: '/$personId/',
    path: '/$personId/',
    getParentRoute: () => DataProjectsProjectIdPersonsRouteRoute,
  } as any)

const DataProjectsProjectIdListsListIdIndexRoute =
  DataProjectsProjectIdListsListIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdListsListIdRouteRoute,
  } as any)

const DataProjectsProjectIdCrsProjectCrsIdIndexRoute =
  DataProjectsProjectIdCrsProjectCrsIdIndexImport.update({
    id: '/$projectCrsId/',
    path: '/$projectCrsId/',
    getParentRoute: () => DataProjectsProjectIdCrsRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute =
  DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerImport.update({
    id: '/vector-layer',
    path: '/vector-layer',
    getParentRoute: () =>
      DataProjectsProjectIdVectorLayersVectorLayerIdRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute =
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyImport.update({
    id: '/taxonomy',
    path: '/taxonomy',
    getParentRoute: () => DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdSubprojectImport.update({
    id: '/subproject',
    path: '/subproject',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdListsListIdListRoute =
  DataProjectsProjectIdListsListIdListImport.update({
    id: '/list',
    path: '/list',
    getParentRoute: () => DataProjectsProjectIdListsListIdRouteRoute,
  } as any)

const DataProjectsProjectIdFilesFileIdPreviewRoute =
  DataProjectsProjectIdFilesFileIdPreviewImport.update({
    id: '/$fileId_/preview',
    path: '/$fileId/preview',
    getParentRoute: () => DataProjectsProjectIdFilesRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRoute =
  DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteImport.update({
    id: '/displays',
    path: '/displays',
    getParentRoute: () =>
      DataProjectsProjectIdVectorLayersVectorLayerIdRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRoute =
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteImport.update({
    id: '/taxa',
    path: '/taxa',
    getParentRoute: () => DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteImport.update({
    id: '/taxa',
    path: '/taxa',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteImport.update({
    id: '/reports',
    path: '/reports',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteImport.update({
    id: '/places',
    path: '/places',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteImport.update(
    {
      id: '/occurrences-to-assess',
      path: '/occurrences-to-assess',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteImport.update(
    {
      id: '/occurrences-not-to-assign',
      path: '/occurrences-not-to-assign',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteImport.update(
    {
      id: '/occurrence-imports',
      path: '/occurrence-imports',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteImport.update({
    id: '/goals',
    path: '/goals',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteImport.update({
    id: '/files',
    path: '/files',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteImport.update({
    id: '/charts',
    path: '/charts',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute,
  } as any)

const DataProjectsProjectIdListsListIdValuesRouteRoute =
  DataProjectsProjectIdListsListIdValuesRouteImport.update({
    id: '/values',
    path: '/values',
    getParentRoute: () => DataProjectsProjectIdListsListIdRouteRoute,
  } as any)

const DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute =
  DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute =
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRoute,
  } as any)

const DataProjectsProjectIdListsListIdValuesIndexRoute =
  DataProjectsProjectIdListsListIdValuesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdListsListIdValuesRouteRoute,
  } as any)

const DataProjectsProjectIdFilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdFilesFileIdPreviewIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DataProjectsProjectIdFilesFileIdPreviewRoute,
  } as any)

const DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute =
  DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdImport.update(
    {
      id: '/$vectorLayerDisplayId',
      path: '/$vectorLayerDisplayId',
      getParentRoute: () =>
        DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterImport.update({
    id: '/filter',
    path: '/filter',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdImport.update({
    id: '/$fileId',
    path: '/$fileId',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport.update({
    id: '/$placeId_',
    path: '/$placeId',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteImport.update({
    id: '/$goalId_',
    path: '/$goalId',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteImport.update({
    id: '/$chartId_',
    path: '/$chartId',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRoute,
  } as any)

const DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute =
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexImport.update({
    id: '/$taxonId/',
    path: '/$taxonId/',
    getParentRoute: () =>
      DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexImport.update(
    {
      id: '/$subprojectUserId/',
      path: '/$subprojectUserId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexImport.update(
    {
      id: '/$subprojectTaxonId/',
      path: '/$subprojectTaxonId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexImport.update(
    {
      id: '/$subprojectReportId/',
      path: '/$subprojectReportId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexImport.update(
    {
      id: '/$occurrenceId/',
      path: '/$occurrenceId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexImport.update(
    {
      id: '/$occurrenceId/',
      path: '/$occurrenceId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexImport.update(
    {
      id: '/$occurrenceImportId/',
      path: '/$occurrenceImportId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRoute,
  } as any)

const DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute =
  DataProjectsProjectIdListsListIdValuesListValueIdIndexImport.update({
    id: '/$listValueId/',
    path: '/$listValueId/',
    getParentRoute: () => DataProjectsProjectIdListsListIdValuesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceImport.update({
    id: '/place',
    path: '/place',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalImport.update({
    id: '/goal',
    path: '/goal',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewImport.update({
    id: '/$fileId_/preview',
    path: '/$fileId/preview',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartImport.update({
    id: '/chart',
    path: '/chart',
    getParentRoute: () =>
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRoute,
  } as any)

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteImport.update(
    {
      id: '/users',
      path: '/users',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteImport.update(
    {
      id: '/reports',
      path: '/reports',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport.update(
    {
      id: '/places',
      path: '/places',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteImport.update(
    {
      id: '/occurrences',
      path: '/occurrences',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteImport.update(
    {
      id: '/files',
      path: '/files',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteImport.update(
    {
      id: '/checks',
      path: '/checks',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteImport.update(
    {
      id: '/actions',
      path: '/actions',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteImport.update(
    {
      id: '/reports',
      path: '/reports',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteImport.update(
    {
      id: '/subjects',
      path: '/subjects',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterImport.update(
    {
      id: '/filter',
      path: '/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterImport.update(
    {
      id: '/filter',
      path: '/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdImport.update(
    {
      id: '/$fileId',
      path: '/$fileId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterImport.update(
    {
      id: '/filter',
      path: '/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterImport.update(
    {
      id: '/filter',
      path: '/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteImport.update(
    {
      id: '/$placeReportId_',
      path: '/$placeReportId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport.update(
    {
      id: '/$placeId2_',
      path: '/$placeId2',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport.update(
    {
      id: '/$checkId_',
      path: '/$checkId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport.update(
    {
      id: '/$actionId_',
      path: '/$actionId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteImport.update(
    {
      id: '/$goalReportId_',
      path: '/$goalReportId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexImport.update(
    {
      id: '/$placeUserId/',
      path: '/$placeUserId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexImport.update(
    {
      id: '/taxa/',
      path: '/taxa/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexImport.update(
    {
      id: '/reports/',
      path: '/reports/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexImport.update(
    {
      id: '/$occurrenceId/',
      path: '/$occurrenceId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexImport.update(
    {
      id: '/$chartSubjectId/',
      path: '/$chartSubjectId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportImport.update(
    {
      id: '/report',
      path: '/report',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterImport.update(
    {
      id: '/reports/filter',
      path: '/reports/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceImport.update(
    {
      id: '/place',
      path: '/place',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewImport.update(
    {
      id: '/$fileId_/preview',
      path: '/$fileId/preview',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckImport.update(
    {
      id: '/check',
      path: '/check',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionImport.update(
    {
      id: '/action',
      path: '/action',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportImport.update(
    {
      id: '/report',
      path: '/report',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteImport.update(
    {
      id: '/users',
      path: '/users',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteImport.update(
    {
      id: '/reports',
      path: '/reports',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteImport.update(
    {
      id: '/occurrences',
      path: '/occurrences',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteImport.update(
    {
      id: '/files',
      path: '/files',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteImport.update(
    {
      id: '/checks',
      path: '/checks',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteImport.update(
    {
      id: '/actions',
      path: '/actions',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteImport.update(
    {
      id: '/taxa',
      path: '/taxa',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteImport.update(
    {
      id: '/files',
      path: '/files',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteImport.update(
    {
      id: '/reports',
      path: '/reports',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteImport.update(
    {
      id: '/files',
      path: '/files',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexImport.update(
    {
      id: '/taxa/$subprojectTaxonId/',
      path: '/taxa/$subprojectTaxonId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexImport.update(
    {
      id: '/reports/values/',
      path: '/reports/values/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexImport.update(
    {
      id: '/reports/$placeReportId/',
      path: '/reports/$placeReportId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdImport.update(
    {
      id: '/reports/values/$placeReportValueId',
      path: '/reports/values/$placeReportValueId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterImport.update(
    {
      id: '/filter',
      path: '/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdImport.update(
    {
      id: '/$fileId',
      path: '/$fileId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterImport.update(
    {
      id: '/filter',
      path: '/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterImport.update(
    {
      id: '/filter',
      path: '/filter',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdImport.update(
    {
      id: '/$fileId',
      path: '/$fileId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdImport.update(
    {
      id: '/$fileId',
      path: '/$fileId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteImport.update(
    {
      id: '/$placeUserId_',
      path: '/$placeUserId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteImport.update(
    {
      id: '/$placeReportId_',
      path: '/$placeReportId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteImport.update(
    {
      id: '/$fileId_',
      path: '/$fileId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport.update(
    {
      id: '/$checkId_',
      path: '/$checkId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport.update(
    {
      id: '/$actionId_',
      path: '/$actionId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteImport.update(
    {
      id: '/$actionReportId_',
      path: '/$actionReportId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexImport.update(
    {
      id: '/$placeReportValueId/',
      path: '/$placeReportValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexImport.update(
    {
      id: '/$occurrenceId/',
      path: '/$occurrenceId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexImport.update(
    {
      id: '/$checkValueId/',
      path: '/$checkValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexImport.update(
    {
      id: '/$checkTaxonId/',
      path: '/$checkTaxonId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexImport.update(
    {
      id: '/$actionValueId/',
      path: '/$actionValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexImport.update(
    {
      id: '/$goalReportValueId/',
      path: '/$goalReportValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportImport.update(
    {
      id: '/report',
      path: '/report',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewImport.update(
    {
      id: '/preview',
      path: '/preview',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckImport.update(
    {
      id: '/check',
      path: '/check',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionImport.update(
    {
      id: '/action',
      path: '/action',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewImport.update(
    {
      id: '/$fileId_/preview',
      path: '/$fileId/preview',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportImport.update(
    {
      id: '/report',
      path: '/report',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewImport.update(
    {
      id: '/$fileId_/preview',
      path: '/$fileId/preview',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteImport.update(
    {
      id: '/taxa',
      path: '/taxa',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteImport.update(
    {
      id: '/files',
      path: '/files',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteImport.update(
    {
      id: '/reports',
      path: '/reports',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteImport.update(
    {
      id: '/files',
      path: '/files',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdImport.update(
    {
      id: '/$placeReportValueId',
      path: '/$placeReportValueId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdImport.update(
    {
      id: '/$fileId',
      path: '/$fileId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteImport.update(
    {
      id: '/$fileId_',
      path: '/$fileId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteImport.update(
    {
      id: '/$actionReportId_',
      path: '/$actionReportId',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexImport.update(
    {
      id: '/$checkValueId/',
      path: '/$checkValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexImport.update(
    {
      id: '/$checkTaxonId/',
      path: '/$checkTaxonId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexImport.update(
    {
      id: '/$actionValueId/',
      path: '/$actionValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexImport.update(
    {
      id: '/$actionReportValueId/',
      path: '/$actionReportValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewImport.update(
    {
      id: '/preview',
      path: '/preview',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportImport.update(
    {
      id: '/report',
      path: '/report',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewImport.update(
    {
      id: '/$fileId_/preview',
      path: '/$fileId/preview',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteImport.update(
    {
      id: '/values',
      path: '/values',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexImport.update(
    {
      id: '/',
      path: '/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRoute,
    } as any,
  )

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexImport.update(
    {
      id: '/$actionReportValueId/',
      path: '/$actionReportValueId/',
      getParentRoute: () =>
        DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/data': {
      id: '/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/data/accounts': {
      id: '/data/accounts'
      path: '/accounts'
      fullPath: '/data/accounts'
      preLoaderRoute: typeof DataAccountsRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/crs': {
      id: '/data/crs'
      path: '/crs'
      fullPath: '/data/crs'
      preLoaderRoute: typeof DataCrsRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/field-types': {
      id: '/data/field-types'
      path: '/field-types'
      fullPath: '/data/field-types'
      preLoaderRoute: typeof DataFieldTypesRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/fields': {
      id: '/data/fields'
      path: '/fields'
      fullPath: '/data/fields'
      preLoaderRoute: typeof DataFieldsRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/files': {
      id: '/data/files'
      path: '/files'
      fullPath: '/data/files'
      preLoaderRoute: typeof DataFilesRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/messages': {
      id: '/data/messages'
      path: '/messages'
      fullPath: '/data/messages'
      preLoaderRoute: typeof DataMessagesRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/projects': {
      id: '/data/projects'
      path: '/projects'
      fullPath: '/data/projects'
      preLoaderRoute: typeof DataProjectsRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/users': {
      id: '/data/users'
      path: '/users'
      fullPath: '/data/users'
      preLoaderRoute: typeof DataUsersRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/widget-types': {
      id: '/data/widget-types'
      path: '/widget-types'
      fullPath: '/data/widget-types'
      preLoaderRoute: typeof DataWidgetTypesRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/data/widgets-for-fields': {
      id: '/data/widgets-for-fields'
      path: '/widgets-for-fields'
      fullPath: '/data/widgets-for-fields'
      preLoaderRoute: typeof DataWidgetsForFieldsRouteImport
      parentRoute: typeof DataRouteImport
    }
    '/_layout/docs': {
      id: '/_layout/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof LayoutDocsImport
      parentRoute: typeof LayoutImport
    }
    '/data/app-states': {
      id: '/data/app-states'
      path: '/app-states'
      fullPath: '/data/app-states'
      preLoaderRoute: typeof DataAppStatesImport
      parentRoute: typeof DataRouteImport
    }
    '/data/auth': {
      id: '/data/auth'
      path: '/auth'
      fullPath: '/data/auth'
      preLoaderRoute: typeof DataAuthImport
      parentRoute: typeof DataRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/data/': {
      id: '/data/'
      path: '/'
      fullPath: '/data/'
      preLoaderRoute: typeof DataIndexImport
      parentRoute: typeof DataRouteImport
    }
    '/data/projects/$projectId_': {
      id: '/data/projects/$projectId_'
      path: '/$projectId'
      fullPath: '/data/projects/$projectId'
      preLoaderRoute: typeof DataProjectsProjectIdRouteImport
      parentRoute: typeof DataProjectsRouteImport
    }
    '/data/accounts/$accountId': {
      id: '/data/accounts/$accountId'
      path: '/$accountId'
      fullPath: '/data/accounts/$accountId'
      preLoaderRoute: typeof DataAccountsAccountIdImport
      parentRoute: typeof DataAccountsRouteImport
    }
    '/data/crs/$crsId': {
      id: '/data/crs/$crsId'
      path: '/$crsId'
      fullPath: '/data/crs/$crsId'
      preLoaderRoute: typeof DataCrsCrsIdImport
      parentRoute: typeof DataCrsRouteImport
    }
    '/data/field-types/$fieldTypeId': {
      id: '/data/field-types/$fieldTypeId'
      path: '/$fieldTypeId'
      fullPath: '/data/field-types/$fieldTypeId'
      preLoaderRoute: typeof DataFieldTypesFieldTypeIdImport
      parentRoute: typeof DataFieldTypesRouteImport
    }
    '/data/field-types/filter': {
      id: '/data/field-types/filter'
      path: '/filter'
      fullPath: '/data/field-types/filter'
      preLoaderRoute: typeof DataFieldTypesFilterImport
      parentRoute: typeof DataFieldTypesRouteImport
    }
    '/data/fields/$fieldId': {
      id: '/data/fields/$fieldId'
      path: '/$fieldId'
      fullPath: '/data/fields/$fieldId'
      preLoaderRoute: typeof DataFieldsFieldIdImport
      parentRoute: typeof DataFieldsRouteImport
    }
    '/data/fields/filter': {
      id: '/data/fields/filter'
      path: '/filter'
      fullPath: '/data/fields/filter'
      preLoaderRoute: typeof DataFieldsFilterImport
      parentRoute: typeof DataFieldsRouteImport
    }
    '/data/files/$fileId': {
      id: '/data/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/files/$fileId'
      preLoaderRoute: typeof DataFilesFileIdImport
      parentRoute: typeof DataFilesRouteImport
    }
    '/data/messages/$messageId': {
      id: '/data/messages/$messageId'
      path: '/$messageId'
      fullPath: '/data/messages/$messageId'
      preLoaderRoute: typeof DataMessagesMessageIdImport
      parentRoute: typeof DataMessagesRouteImport
    }
    '/data/projects/filter': {
      id: '/data/projects/filter'
      path: '/filter'
      fullPath: '/data/projects/filter'
      preLoaderRoute: typeof DataProjectsFilterImport
      parentRoute: typeof DataProjectsRouteImport
    }
    '/data/users/$userId': {
      id: '/data/users/$userId'
      path: '/$userId'
      fullPath: '/data/users/$userId'
      preLoaderRoute: typeof DataUsersUserIdImport
      parentRoute: typeof DataUsersRouteImport
    }
    '/data/widget-types/$widgetTypeId': {
      id: '/data/widget-types/$widgetTypeId'
      path: '/$widgetTypeId'
      fullPath: '/data/widget-types/$widgetTypeId'
      preLoaderRoute: typeof DataWidgetTypesWidgetTypeIdImport
      parentRoute: typeof DataWidgetTypesRouteImport
    }
    '/data/widget-types/filter': {
      id: '/data/widget-types/filter'
      path: '/filter'
      fullPath: '/data/widget-types/filter'
      preLoaderRoute: typeof DataWidgetTypesFilterImport
      parentRoute: typeof DataWidgetTypesRouteImport
    }
    '/data/widgets-for-fields/$widgetForFieldId': {
      id: '/data/widgets-for-fields/$widgetForFieldId'
      path: '/$widgetForFieldId'
      fullPath: '/data/widgets-for-fields/$widgetForFieldId'
      preLoaderRoute: typeof DataWidgetsForFieldsWidgetForFieldIdImport
      parentRoute: typeof DataWidgetsForFieldsRouteImport
    }
    '/data/widgets-for-fields/filter': {
      id: '/data/widgets-for-fields/filter'
      path: '/filter'
      fullPath: '/data/widgets-for-fields/filter'
      preLoaderRoute: typeof DataWidgetsForFieldsFilterImport
      parentRoute: typeof DataWidgetsForFieldsRouteImport
    }
    '/data/accounts/': {
      id: '/data/accounts/'
      path: '/'
      fullPath: '/data/accounts/'
      preLoaderRoute: typeof DataAccountsIndexImport
      parentRoute: typeof DataAccountsRouteImport
    }
    '/data/crs/': {
      id: '/data/crs/'
      path: '/'
      fullPath: '/data/crs/'
      preLoaderRoute: typeof DataCrsIndexImport
      parentRoute: typeof DataCrsRouteImport
    }
    '/data/field-types/': {
      id: '/data/field-types/'
      path: '/'
      fullPath: '/data/field-types/'
      preLoaderRoute: typeof DataFieldTypesIndexImport
      parentRoute: typeof DataFieldTypesRouteImport
    }
    '/data/fields/': {
      id: '/data/fields/'
      path: '/'
      fullPath: '/data/fields/'
      preLoaderRoute: typeof DataFieldsIndexImport
      parentRoute: typeof DataFieldsRouteImport
    }
    '/data/files/': {
      id: '/data/files/'
      path: '/'
      fullPath: '/data/files/'
      preLoaderRoute: typeof DataFilesIndexImport
      parentRoute: typeof DataFilesRouteImport
    }
    '/data/messages/': {
      id: '/data/messages/'
      path: '/'
      fullPath: '/data/messages/'
      preLoaderRoute: typeof DataMessagesIndexImport
      parentRoute: typeof DataMessagesRouteImport
    }
    '/data/projects/': {
      id: '/data/projects/'
      path: '/'
      fullPath: '/data/projects/'
      preLoaderRoute: typeof DataProjectsIndexImport
      parentRoute: typeof DataProjectsRouteImport
    }
    '/data/users/': {
      id: '/data/users/'
      path: '/'
      fullPath: '/data/users/'
      preLoaderRoute: typeof DataUsersIndexImport
      parentRoute: typeof DataUsersRouteImport
    }
    '/data/widget-types/': {
      id: '/data/widget-types/'
      path: '/'
      fullPath: '/data/widget-types/'
      preLoaderRoute: typeof DataWidgetTypesIndexImport
      parentRoute: typeof DataWidgetTypesRouteImport
    }
    '/data/widgets-for-fields/': {
      id: '/data/widgets-for-fields/'
      path: '/'
      fullPath: '/data/widgets-for-fields/'
      preLoaderRoute: typeof DataWidgetsForFieldsIndexImport
      parentRoute: typeof DataWidgetsForFieldsRouteImport
    }
    '/data/projects/$projectId_/crs': {
      id: '/data/projects/$projectId_/crs'
      path: '/crs'
      fullPath: '/data/projects/$projectId/crs'
      preLoaderRoute: typeof DataProjectsProjectIdCrsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/fields': {
      id: '/data/projects/$projectId_/fields'
      path: '/fields'
      fullPath: '/data/projects/$projectId/fields'
      preLoaderRoute: typeof DataProjectsProjectIdFieldsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/files': {
      id: '/data/projects/$projectId_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/files'
      preLoaderRoute: typeof DataProjectsProjectIdFilesRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/lists': {
      id: '/data/projects/$projectId_/lists'
      path: '/lists'
      fullPath: '/data/projects/$projectId/lists'
      preLoaderRoute: typeof DataProjectsProjectIdListsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/persons': {
      id: '/data/projects/$projectId_/persons'
      path: '/persons'
      fullPath: '/data/projects/$projectId/persons'
      preLoaderRoute: typeof DataProjectsProjectIdPersonsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/place-levels': {
      id: '/data/projects/$projectId_/place-levels'
      path: '/place-levels'
      fullPath: '/data/projects/$projectId/place-levels'
      preLoaderRoute: typeof DataProjectsProjectIdPlaceLevelsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/reports': {
      id: '/data/projects/$projectId_/reports'
      path: '/reports'
      fullPath: '/data/projects/$projectId/reports'
      preLoaderRoute: typeof DataProjectsProjectIdReportsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects': {
      id: '/data/projects/$projectId_/subprojects'
      path: '/subprojects'
      fullPath: '/data/projects/$projectId/subprojects'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/taxonomies': {
      id: '/data/projects/$projectId_/taxonomies'
      path: '/taxonomies'
      fullPath: '/data/projects/$projectId/taxonomies'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/units': {
      id: '/data/projects/$projectId_/units'
      path: '/units'
      fullPath: '/data/projects/$projectId/units'
      preLoaderRoute: typeof DataProjectsProjectIdUnitsRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/users': {
      id: '/data/projects/$projectId_/users'
      path: '/users'
      fullPath: '/data/projects/$projectId/users'
      preLoaderRoute: typeof DataProjectsProjectIdUsersRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/vector-layers': {
      id: '/data/projects/$projectId_/vector-layers'
      path: '/vector-layers'
      fullPath: '/data/projects/$projectId/vector-layers'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/wms-layers': {
      id: '/data/projects/$projectId_/wms-layers'
      path: '/wms-layers'
      fullPath: '/data/projects/$projectId/wms-layers'
      preLoaderRoute: typeof DataProjectsProjectIdWmsLayersRouteImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/files/$fileId_/preview': {
      id: '/data/files/$fileId_/preview'
      path: '/$fileId/preview'
      fullPath: '/data/files/$fileId/preview'
      preLoaderRoute: typeof DataFilesFileIdPreviewImport
      parentRoute: typeof DataFilesRouteImport
    }
    '/data/projects/$projectId_/project': {
      id: '/data/projects/$projectId_/project'
      path: '/project'
      fullPath: '/data/projects/$projectId/project'
      preLoaderRoute: typeof DataProjectsProjectIdProjectImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/': {
      id: '/data/projects/$projectId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/'
      preLoaderRoute: typeof DataProjectsProjectIdIndexImport
      parentRoute: typeof DataProjectsProjectIdRouteImport
    }
    '/data/projects/$projectId_/lists/$listId_': {
      id: '/data/projects/$projectId_/lists/$listId_'
      path: '/$listId'
      fullPath: '/data/projects/$projectId/lists/$listId'
      preLoaderRoute: typeof DataProjectsProjectIdListsListIdRouteImport
      parentRoute: typeof DataProjectsProjectIdListsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_'
      path: '/$subprojectId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsRouteImport
    }
    '/data/projects/$projectId_/taxonomies/$taxonomyId_': {
      id: '/data/projects/$projectId_/taxonomies/$taxonomyId_'
      path: '/$taxonomyId'
      fullPath: '/data/projects/$projectId/taxonomies/$taxonomyId'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdRouteImport
      parentRoute: typeof DataProjectsProjectIdTaxonomiesRouteImport
    }
    '/data/projects/$projectId_/vector-layers/$vectorLayerId_': {
      id: '/data/projects/$projectId_/vector-layers/$vectorLayerId_'
      path: '/$vectorLayerId'
      fullPath: '/data/projects/$projectId/vector-layers/$vectorLayerId'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdRouteImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersRouteImport
    }
    '/data/projects/$projectId_/fields/$fieldId': {
      id: '/data/projects/$projectId_/fields/$fieldId'
      path: '/$fieldId'
      fullPath: '/data/projects/$projectId/fields/$fieldId'
      preLoaderRoute: typeof DataProjectsProjectIdFieldsFieldIdImport
      parentRoute: typeof DataProjectsProjectIdFieldsRouteImport
    }
    '/data/projects/$projectId_/fields/filter': {
      id: '/data/projects/$projectId_/fields/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/fields/filter'
      preLoaderRoute: typeof DataProjectsProjectIdFieldsFilterImport
      parentRoute: typeof DataProjectsProjectIdFieldsRouteImport
    }
    '/data/projects/$projectId_/files/$fileId': {
      id: '/data/projects/$projectId_/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdFilesFileIdImport
      parentRoute: typeof DataProjectsProjectIdFilesRouteImport
    }
    '/data/projects/$projectId_/lists/filter': {
      id: '/data/projects/$projectId_/lists/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/lists/filter'
      preLoaderRoute: typeof DataProjectsProjectIdListsFilterImport
      parentRoute: typeof DataProjectsProjectIdListsRouteImport
    }
    '/data/projects/$projectId_/persons/filter': {
      id: '/data/projects/$projectId_/persons/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/persons/filter'
      preLoaderRoute: typeof DataProjectsProjectIdPersonsFilterImport
      parentRoute: typeof DataProjectsProjectIdPersonsRouteImport
    }
    '/data/projects/$projectId_/reports/filter': {
      id: '/data/projects/$projectId_/reports/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/reports/filter'
      preLoaderRoute: typeof DataProjectsProjectIdReportsFilterImport
      parentRoute: typeof DataProjectsProjectIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/filter': {
      id: '/data/projects/$projectId_/subprojects/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsRouteImport
    }
    '/data/projects/$projectId_/units/filter': {
      id: '/data/projects/$projectId_/units/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/units/filter'
      preLoaderRoute: typeof DataProjectsProjectIdUnitsFilterImport
      parentRoute: typeof DataProjectsProjectIdUnitsRouteImport
    }
    '/data/projects/$projectId_/vector-layers/filter': {
      id: '/data/projects/$projectId_/vector-layers/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/vector-layers/filter'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersFilterImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersRouteImport
    }
    '/data/projects/$projectId_/wms-layers/$wmsLayerId': {
      id: '/data/projects/$projectId_/wms-layers/$wmsLayerId'
      path: '/$wmsLayerId'
      fullPath: '/data/projects/$projectId/wms-layers/$wmsLayerId'
      preLoaderRoute: typeof DataProjectsProjectIdWmsLayersWmsLayerIdImport
      parentRoute: typeof DataProjectsProjectIdWmsLayersRouteImport
    }
    '/data/projects/$projectId_/wms-layers/filter': {
      id: '/data/projects/$projectId_/wms-layers/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/wms-layers/filter'
      preLoaderRoute: typeof DataProjectsProjectIdWmsLayersFilterImport
      parentRoute: typeof DataProjectsProjectIdWmsLayersRouteImport
    }
    '/data/files/$fileId_/preview/': {
      id: '/data/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/files/$fileId/preview/'
      preLoaderRoute: typeof DataFilesFileIdPreviewIndexImport
      parentRoute: typeof DataFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/crs/': {
      id: '/data/projects/$projectId_/crs/'
      path: '/'
      fullPath: '/data/projects/$projectId/crs/'
      preLoaderRoute: typeof DataProjectsProjectIdCrsIndexImport
      parentRoute: typeof DataProjectsProjectIdCrsRouteImport
    }
    '/data/projects/$projectId_/fields/': {
      id: '/data/projects/$projectId_/fields/'
      path: '/'
      fullPath: '/data/projects/$projectId/fields/'
      preLoaderRoute: typeof DataProjectsProjectIdFieldsIndexImport
      parentRoute: typeof DataProjectsProjectIdFieldsRouteImport
    }
    '/data/projects/$projectId_/files/': {
      id: '/data/projects/$projectId_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/files/'
      preLoaderRoute: typeof DataProjectsProjectIdFilesIndexImport
      parentRoute: typeof DataProjectsProjectIdFilesRouteImport
    }
    '/data/projects/$projectId_/lists/': {
      id: '/data/projects/$projectId_/lists/'
      path: '/'
      fullPath: '/data/projects/$projectId/lists/'
      preLoaderRoute: typeof DataProjectsProjectIdListsIndexImport
      parentRoute: typeof DataProjectsProjectIdListsRouteImport
    }
    '/data/projects/$projectId_/persons/': {
      id: '/data/projects/$projectId_/persons/'
      path: '/'
      fullPath: '/data/projects/$projectId/persons/'
      preLoaderRoute: typeof DataProjectsProjectIdPersonsIndexImport
      parentRoute: typeof DataProjectsProjectIdPersonsRouteImport
    }
    '/data/projects/$projectId_/place-levels/': {
      id: '/data/projects/$projectId_/place-levels/'
      path: '/'
      fullPath: '/data/projects/$projectId/place-levels/'
      preLoaderRoute: typeof DataProjectsProjectIdPlaceLevelsIndexImport
      parentRoute: typeof DataProjectsProjectIdPlaceLevelsRouteImport
    }
    '/data/projects/$projectId_/reports/': {
      id: '/data/projects/$projectId_/reports/'
      path: '/'
      fullPath: '/data/projects/$projectId/reports/'
      preLoaderRoute: typeof DataProjectsProjectIdReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/': {
      id: '/data/projects/$projectId_/subprojects/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsRouteImport
    }
    '/data/projects/$projectId_/taxonomies/': {
      id: '/data/projects/$projectId_/taxonomies/'
      path: '/'
      fullPath: '/data/projects/$projectId/taxonomies/'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesIndexImport
      parentRoute: typeof DataProjectsProjectIdTaxonomiesRouteImport
    }
    '/data/projects/$projectId_/units/': {
      id: '/data/projects/$projectId_/units/'
      path: '/'
      fullPath: '/data/projects/$projectId/units/'
      preLoaderRoute: typeof DataProjectsProjectIdUnitsIndexImport
      parentRoute: typeof DataProjectsProjectIdUnitsRouteImport
    }
    '/data/projects/$projectId_/users/': {
      id: '/data/projects/$projectId_/users/'
      path: '/'
      fullPath: '/data/projects/$projectId/users/'
      preLoaderRoute: typeof DataProjectsProjectIdUsersIndexImport
      parentRoute: typeof DataProjectsProjectIdUsersRouteImport
    }
    '/data/projects/$projectId_/vector-layers/': {
      id: '/data/projects/$projectId_/vector-layers/'
      path: '/'
      fullPath: '/data/projects/$projectId/vector-layers/'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersIndexImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersRouteImport
    }
    '/data/projects/$projectId_/wms-layers/': {
      id: '/data/projects/$projectId_/wms-layers/'
      path: '/'
      fullPath: '/data/projects/$projectId/wms-layers/'
      preLoaderRoute: typeof DataProjectsProjectIdWmsLayersIndexImport
      parentRoute: typeof DataProjectsProjectIdWmsLayersRouteImport
    }
    '/data/projects/$projectId_/lists/$listId_/values': {
      id: '/data/projects/$projectId_/lists/$listId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/lists/$listId/values'
      preLoaderRoute: typeof DataProjectsProjectIdListsListIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdListsListIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts'
      path: '/charts'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/files': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/files'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals'
      path: '/goals'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports'
      path: '/occurrence-imports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign'
      path: '/occurrences-not-to-assign'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess'
      path: '/occurrences-to-assess'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places'
      path: '/places'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/reports': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/reports'
      path: '/reports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/reports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/taxa': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/taxa'
      path: '/taxa'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/taxa'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/users': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/users'
      path: '/users'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/users'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa': {
      id: '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa'
      path: '/taxa'
      fullPath: '/data/projects/$projectId/taxonomies/$taxonomyId/taxa'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteImport
      parentRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdRouteImport
    }
    '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays': {
      id: '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays'
      path: '/displays'
      fullPath: '/data/projects/$projectId/vector-layers/$vectorLayerId/displays'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdRouteImport
    }
    '/data/projects/$projectId_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/files/$fileId_/preview'
      path: '/$fileId/preview'
      fullPath: '/data/projects/$projectId/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdFilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdFilesRouteImport
    }
    '/data/projects/$projectId_/lists/$listId_/list': {
      id: '/data/projects/$projectId_/lists/$listId_/list'
      path: '/list'
      fullPath: '/data/projects/$projectId/lists/$listId/list'
      preLoaderRoute: typeof DataProjectsProjectIdListsListIdListImport
      parentRoute: typeof DataProjectsProjectIdListsListIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/subproject': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/subproject'
      path: '/subproject'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/subproject'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdSubprojectImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy': {
      id: '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy'
      path: '/taxonomy'
      fullPath: '/data/projects/$projectId/taxonomies/$taxonomyId/taxonomy'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyImport
      parentRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdRouteImport
    }
    '/data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer': {
      id: '/data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer'
      path: '/vector-layer'
      fullPath: '/data/projects/$projectId/vector-layers/$vectorLayerId/vector-layer'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdRouteImport
    }
    '/data/projects/$projectId_/crs/$projectCrsId/': {
      id: '/data/projects/$projectId_/crs/$projectCrsId/'
      path: '/$projectCrsId'
      fullPath: '/data/projects/$projectId/crs/$projectCrsId'
      preLoaderRoute: typeof DataProjectsProjectIdCrsProjectCrsIdIndexImport
      parentRoute: typeof DataProjectsProjectIdCrsRouteImport
    }
    '/data/projects/$projectId_/lists/$listId_/': {
      id: '/data/projects/$projectId_/lists/$listId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/lists/$listId/'
      preLoaderRoute: typeof DataProjectsProjectIdListsListIdIndexImport
      parentRoute: typeof DataProjectsProjectIdListsListIdRouteImport
    }
    '/data/projects/$projectId_/persons/$personId/': {
      id: '/data/projects/$projectId_/persons/$personId/'
      path: '/$personId'
      fullPath: '/data/projects/$projectId/persons/$personId'
      preLoaderRoute: typeof DataProjectsProjectIdPersonsPersonIdIndexImport
      parentRoute: typeof DataProjectsProjectIdPersonsRouteImport
    }
    '/data/projects/$projectId_/place-levels/$placeLevelId/': {
      id: '/data/projects/$projectId_/place-levels/$placeLevelId/'
      path: '/$placeLevelId'
      fullPath: '/data/projects/$projectId/place-levels/$placeLevelId'
      preLoaderRoute: typeof DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexImport
      parentRoute: typeof DataProjectsProjectIdPlaceLevelsRouteImport
    }
    '/data/projects/$projectId_/reports/$projectReportId/': {
      id: '/data/projects/$projectId_/reports/$projectReportId/'
      path: '/$projectReportId'
      fullPath: '/data/projects/$projectId/reports/$projectReportId'
      preLoaderRoute: typeof DataProjectsProjectIdReportsProjectReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteImport
    }
    '/data/projects/$projectId_/taxonomies/$taxonomyId_/': {
      id: '/data/projects/$projectId_/taxonomies/$taxonomyId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/taxonomies/$taxonomyId/'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdIndexImport
      parentRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdRouteImport
    }
    '/data/projects/$projectId_/units/$unitId/': {
      id: '/data/projects/$projectId_/units/$unitId/'
      path: '/$unitId'
      fullPath: '/data/projects/$projectId/units/$unitId'
      preLoaderRoute: typeof DataProjectsProjectIdUnitsUnitIdIndexImport
      parentRoute: typeof DataProjectsProjectIdUnitsRouteImport
    }
    '/data/projects/$projectId_/users/$projectUserId/': {
      id: '/data/projects/$projectId_/users/$projectUserId/'
      path: '/$projectUserId'
      fullPath: '/data/projects/$projectId/users/$projectUserId'
      preLoaderRoute: typeof DataProjectsProjectIdUsersProjectUserIdIndexImport
      parentRoute: typeof DataProjectsProjectIdUsersRouteImport
    }
    '/data/projects/$projectId_/vector-layers/$vectorLayerId_/': {
      id: '/data/projects/$projectId_/vector-layers/$vectorLayerId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/vector-layers/$vectorLayerId/'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdIndexImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_'
      path: '/$chartId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_'
      path: '/$goalId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_'
      path: '/$placeId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/reports/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/reports/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/reports/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteImport
    }
    '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId': {
      id: '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId'
      path: '/$vectorLayerDisplayId'
      fullPath: '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/$vectorLayerDisplayId'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteImport
    }
    '/data/projects/$projectId_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdFilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/lists/$listId_/values/': {
      id: '/data/projects/$projectId_/lists/$listId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/lists/$listId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdListsListIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdListsListIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/files/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/files/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/reports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/reports/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/reports/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/taxa/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/users/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/users/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/users/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteImport
    }
    '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/': {
      id: '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/'
      path: '/'
      fullPath: '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexImport
      parentRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteImport
    }
    '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/': {
      id: '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/'
      path: '/'
      fullPath: '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/'
      preLoaderRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexImport
      parentRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects'
      path: '/subjects'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports'
      path: '/reports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions'
      path: '/actions'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks'
      path: '/checks'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences'
      path: '/occurrences'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places'
      path: '/places'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports'
      path: '/reports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users'
      path: '/users'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart'
      path: '/chart'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/chart'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview'
      path: '/$fileId/preview'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal'
      path: '/goal'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/goal'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place'
      path: '/place'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/place'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/lists/$listId_/values/$listValueId/': {
      id: '/data/projects/$projectId_/lists/$listId_/values/$listValueId/'
      path: '/$listValueId'
      fullPath: '/data/projects/$projectId/lists/$listId/values/$listValueId'
      preLoaderRoute: typeof DataProjectsProjectIdListsListIdValuesListValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdListsListIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId/'
      path: '/$occurrenceImportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/$occurrenceImportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId/'
      path: '/$occurrenceId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/$occurrenceId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId/'
      path: '/$occurrenceId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/$occurrenceId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId/'
      path: '/$subprojectReportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/reports/$subprojectReportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId/'
      path: '/$subprojectTaxonId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/taxa/$subprojectTaxonId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId/'
      path: '/$subprojectUserId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/users/$subprojectUserId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteImport
    }
    '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId/': {
      id: '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId/'
      path: '/$taxonId'
      fullPath: '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/$taxonId'
      preLoaderRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexImport
      parentRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_'
      path: '/$goalReportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_'
      path: '/$actionId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_'
      path: '/$checkId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_'
      path: '/$placeId2'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_'
      path: '/$placeReportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports'
      path: '/reports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa'
      path: '/taxa'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions'
      path: '/actions'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks'
      path: '/checks'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences'
      path: '/occurrences'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports'
      path: '/reports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users'
      path: '/users'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report'
      path: '/report'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/report'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action'
      path: '/action'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/action'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check'
      path: '/check'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/check'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview'
      path: '/$fileId/preview'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place'
      path: '/place'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/place'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter'
      path: '/reports/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report'
      path: '/report'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/report'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId/'
      path: '/$chartSubjectId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/$chartSubjectId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId/'
      path: '/$occurrenceId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/$occurrenceId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/'
      path: '/reports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/'
      path: '/taxa'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId/'
      path: '/$placeUserId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/$placeUserId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_'
      path: '/$actionReportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_'
      path: '/$actionId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_'
      path: '/$checkId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_'
      path: '/$placeReportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_'
      path: '/$placeUserId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter'
      path: '/filter'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/filter'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId'
      path: '/reports/values/$placeReportValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values/$placeReportValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId/'
      path: '/reports/$placeReportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/$placeReportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/'
      path: '/reports/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId/'
      path: '/taxa/$subprojectTaxonId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa/$subprojectTaxonId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports'
      path: '/reports'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files'
      path: '/files'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa'
      path: '/taxa'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview'
      path: '/$fileId/preview'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report'
      path: '/report'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/report'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview'
      path: '/$fileId/preview'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action'
      path: '/action'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/action'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check'
      path: '/check'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/check'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview'
      path: '/preview'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report'
      path: '/report'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/report'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId/'
      path: '/$goalReportValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/$goalReportValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId/'
      path: '/$actionValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/$actionValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId/'
      path: '/$checkTaxonId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/$checkTaxonId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId/'
      path: '/$checkValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/$checkValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId/'
      path: '/$occurrenceId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/$occurrenceId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId/'
      path: '/$placeReportValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/$placeReportValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_'
      path: '/$actionReportId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId'
      path: '/$fileId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId'
      path: '/$placeReportValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/$placeReportValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values'
      path: '/values'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview'
      path: '/$fileId/preview'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report'
      path: '/report'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/report'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview'
      path: '/preview'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/'
      path: '/$actionReportValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/$actionReportValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId/'
      path: '/$actionValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/$actionValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId/'
      path: '/$checkTaxonId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/$checkTaxonId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId/'
      path: '/$checkValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/$checkValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview/'
      path: '/'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview/'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewImport
    }
    '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/': {
      id: '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/'
      path: '/$actionReportValueId'
      fullPath: '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/$actionReportValueId'
      preLoaderRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexImport
      parentRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteImport
    }
  }
}

// Create and export the route tree

interface DataAccountsRouteRouteChildren {
  DataAccountsAccountIdRoute: typeof DataAccountsAccountIdRoute
  DataAccountsIndexRoute: typeof DataAccountsIndexRoute
}

const DataAccountsRouteRouteChildren: DataAccountsRouteRouteChildren = {
  DataAccountsAccountIdRoute: DataAccountsAccountIdRoute,
  DataAccountsIndexRoute: DataAccountsIndexRoute,
}

const DataAccountsRouteRouteWithChildren =
  DataAccountsRouteRoute._addFileChildren(DataAccountsRouteRouteChildren)

interface DataCrsRouteRouteChildren {
  DataCrsCrsIdRoute: typeof DataCrsCrsIdRoute
  DataCrsIndexRoute: typeof DataCrsIndexRoute
}

const DataCrsRouteRouteChildren: DataCrsRouteRouteChildren = {
  DataCrsCrsIdRoute: DataCrsCrsIdRoute,
  DataCrsIndexRoute: DataCrsIndexRoute,
}

const DataCrsRouteRouteWithChildren = DataCrsRouteRoute._addFileChildren(
  DataCrsRouteRouteChildren,
)

interface DataFieldTypesRouteRouteChildren {
  DataFieldTypesFieldTypeIdRoute: typeof DataFieldTypesFieldTypeIdRoute
  DataFieldTypesFilterRoute: typeof DataFieldTypesFilterRoute
  DataFieldTypesIndexRoute: typeof DataFieldTypesIndexRoute
}

const DataFieldTypesRouteRouteChildren: DataFieldTypesRouteRouteChildren = {
  DataFieldTypesFieldTypeIdRoute: DataFieldTypesFieldTypeIdRoute,
  DataFieldTypesFilterRoute: DataFieldTypesFilterRoute,
  DataFieldTypesIndexRoute: DataFieldTypesIndexRoute,
}

const DataFieldTypesRouteRouteWithChildren =
  DataFieldTypesRouteRoute._addFileChildren(DataFieldTypesRouteRouteChildren)

interface DataFieldsRouteRouteChildren {
  DataFieldsFieldIdRoute: typeof DataFieldsFieldIdRoute
  DataFieldsFilterRoute: typeof DataFieldsFilterRoute
  DataFieldsIndexRoute: typeof DataFieldsIndexRoute
}

const DataFieldsRouteRouteChildren: DataFieldsRouteRouteChildren = {
  DataFieldsFieldIdRoute: DataFieldsFieldIdRoute,
  DataFieldsFilterRoute: DataFieldsFilterRoute,
  DataFieldsIndexRoute: DataFieldsIndexRoute,
}

const DataFieldsRouteRouteWithChildren = DataFieldsRouteRoute._addFileChildren(
  DataFieldsRouteRouteChildren,
)

interface DataFilesFileIdPreviewRouteChildren {
  DataFilesFileIdPreviewIndexRoute: typeof DataFilesFileIdPreviewIndexRoute
}

const DataFilesFileIdPreviewRouteChildren: DataFilesFileIdPreviewRouteChildren =
  {
    DataFilesFileIdPreviewIndexRoute: DataFilesFileIdPreviewIndexRoute,
  }

const DataFilesFileIdPreviewRouteWithChildren =
  DataFilesFileIdPreviewRoute._addFileChildren(
    DataFilesFileIdPreviewRouteChildren,
  )

interface DataFilesRouteRouteChildren {
  DataFilesFileIdRoute: typeof DataFilesFileIdRoute
  DataFilesIndexRoute: typeof DataFilesIndexRoute
  DataFilesFileIdPreviewRoute: typeof DataFilesFileIdPreviewRouteWithChildren
}

const DataFilesRouteRouteChildren: DataFilesRouteRouteChildren = {
  DataFilesFileIdRoute: DataFilesFileIdRoute,
  DataFilesIndexRoute: DataFilesIndexRoute,
  DataFilesFileIdPreviewRoute: DataFilesFileIdPreviewRouteWithChildren,
}

const DataFilesRouteRouteWithChildren = DataFilesRouteRoute._addFileChildren(
  DataFilesRouteRouteChildren,
)

interface DataMessagesRouteRouteChildren {
  DataMessagesMessageIdRoute: typeof DataMessagesMessageIdRoute
  DataMessagesIndexRoute: typeof DataMessagesIndexRoute
}

const DataMessagesRouteRouteChildren: DataMessagesRouteRouteChildren = {
  DataMessagesMessageIdRoute: DataMessagesMessageIdRoute,
  DataMessagesIndexRoute: DataMessagesIndexRoute,
}

const DataMessagesRouteRouteWithChildren =
  DataMessagesRouteRoute._addFileChildren(DataMessagesRouteRouteChildren)

interface DataProjectsProjectIdCrsRouteRouteChildren {
  DataProjectsProjectIdCrsIndexRoute: typeof DataProjectsProjectIdCrsIndexRoute
  DataProjectsProjectIdCrsProjectCrsIdIndexRoute: typeof DataProjectsProjectIdCrsProjectCrsIdIndexRoute
}

const DataProjectsProjectIdCrsRouteRouteChildren: DataProjectsProjectIdCrsRouteRouteChildren =
  {
    DataProjectsProjectIdCrsIndexRoute: DataProjectsProjectIdCrsIndexRoute,
    DataProjectsProjectIdCrsProjectCrsIdIndexRoute:
      DataProjectsProjectIdCrsProjectCrsIdIndexRoute,
  }

const DataProjectsProjectIdCrsRouteRouteWithChildren =
  DataProjectsProjectIdCrsRouteRoute._addFileChildren(
    DataProjectsProjectIdCrsRouteRouteChildren,
  )

interface DataProjectsProjectIdFieldsRouteRouteChildren {
  DataProjectsProjectIdFieldsFieldIdRoute: typeof DataProjectsProjectIdFieldsFieldIdRoute
  DataProjectsProjectIdFieldsFilterRoute: typeof DataProjectsProjectIdFieldsFilterRoute
  DataProjectsProjectIdFieldsIndexRoute: typeof DataProjectsProjectIdFieldsIndexRoute
}

const DataProjectsProjectIdFieldsRouteRouteChildren: DataProjectsProjectIdFieldsRouteRouteChildren =
  {
    DataProjectsProjectIdFieldsFieldIdRoute:
      DataProjectsProjectIdFieldsFieldIdRoute,
    DataProjectsProjectIdFieldsFilterRoute:
      DataProjectsProjectIdFieldsFilterRoute,
    DataProjectsProjectIdFieldsIndexRoute:
      DataProjectsProjectIdFieldsIndexRoute,
  }

const DataProjectsProjectIdFieldsRouteRouteWithChildren =
  DataProjectsProjectIdFieldsRouteRoute._addFileChildren(
    DataProjectsProjectIdFieldsRouteRouteChildren,
  )

interface DataProjectsProjectIdFilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdFilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdFilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdFilesFileIdPreviewRouteChildren: DataProjectsProjectIdFilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdFilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdFilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdFilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdFilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdFilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdFilesRouteRouteChildren {
  DataProjectsProjectIdFilesFileIdRoute: typeof DataProjectsProjectIdFilesFileIdRoute
  DataProjectsProjectIdFilesIndexRoute: typeof DataProjectsProjectIdFilesIndexRoute
  DataProjectsProjectIdFilesFileIdPreviewRoute: typeof DataProjectsProjectIdFilesFileIdPreviewRouteWithChildren
}

const DataProjectsProjectIdFilesRouteRouteChildren: DataProjectsProjectIdFilesRouteRouteChildren =
  {
    DataProjectsProjectIdFilesFileIdRoute:
      DataProjectsProjectIdFilesFileIdRoute,
    DataProjectsProjectIdFilesIndexRoute: DataProjectsProjectIdFilesIndexRoute,
    DataProjectsProjectIdFilesFileIdPreviewRoute:
      DataProjectsProjectIdFilesFileIdPreviewRouteWithChildren,
  }

const DataProjectsProjectIdFilesRouteRouteWithChildren =
  DataProjectsProjectIdFilesRouteRoute._addFileChildren(
    DataProjectsProjectIdFilesRouteRouteChildren,
  )

interface DataProjectsProjectIdListsListIdValuesRouteRouteChildren {
  DataProjectsProjectIdListsListIdValuesIndexRoute: typeof DataProjectsProjectIdListsListIdValuesIndexRoute
  DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute: typeof DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute
}

const DataProjectsProjectIdListsListIdValuesRouteRouteChildren: DataProjectsProjectIdListsListIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdListsListIdValuesIndexRoute:
      DataProjectsProjectIdListsListIdValuesIndexRoute,
    DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute:
      DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute,
  }

const DataProjectsProjectIdListsListIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdListsListIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdListsListIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdListsListIdRouteRouteChildren {
  DataProjectsProjectIdListsListIdValuesRouteRoute: typeof DataProjectsProjectIdListsListIdValuesRouteRouteWithChildren
  DataProjectsProjectIdListsListIdListRoute: typeof DataProjectsProjectIdListsListIdListRoute
  DataProjectsProjectIdListsListIdIndexRoute: typeof DataProjectsProjectIdListsListIdIndexRoute
}

const DataProjectsProjectIdListsListIdRouteRouteChildren: DataProjectsProjectIdListsListIdRouteRouteChildren =
  {
    DataProjectsProjectIdListsListIdValuesRouteRoute:
      DataProjectsProjectIdListsListIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdListsListIdListRoute:
      DataProjectsProjectIdListsListIdListRoute,
    DataProjectsProjectIdListsListIdIndexRoute:
      DataProjectsProjectIdListsListIdIndexRoute,
  }

const DataProjectsProjectIdListsListIdRouteRouteWithChildren =
  DataProjectsProjectIdListsListIdRouteRoute._addFileChildren(
    DataProjectsProjectIdListsListIdRouteRouteChildren,
  )

interface DataProjectsProjectIdListsRouteRouteChildren {
  DataProjectsProjectIdListsListIdRouteRoute: typeof DataProjectsProjectIdListsListIdRouteRouteWithChildren
  DataProjectsProjectIdListsFilterRoute: typeof DataProjectsProjectIdListsFilterRoute
  DataProjectsProjectIdListsIndexRoute: typeof DataProjectsProjectIdListsIndexRoute
}

const DataProjectsProjectIdListsRouteRouteChildren: DataProjectsProjectIdListsRouteRouteChildren =
  {
    DataProjectsProjectIdListsListIdRouteRoute:
      DataProjectsProjectIdListsListIdRouteRouteWithChildren,
    DataProjectsProjectIdListsFilterRoute:
      DataProjectsProjectIdListsFilterRoute,
    DataProjectsProjectIdListsIndexRoute: DataProjectsProjectIdListsIndexRoute,
  }

const DataProjectsProjectIdListsRouteRouteWithChildren =
  DataProjectsProjectIdListsRouteRoute._addFileChildren(
    DataProjectsProjectIdListsRouteRouteChildren,
  )

interface DataProjectsProjectIdPersonsRouteRouteChildren {
  DataProjectsProjectIdPersonsFilterRoute: typeof DataProjectsProjectIdPersonsFilterRoute
  DataProjectsProjectIdPersonsIndexRoute: typeof DataProjectsProjectIdPersonsIndexRoute
  DataProjectsProjectIdPersonsPersonIdIndexRoute: typeof DataProjectsProjectIdPersonsPersonIdIndexRoute
}

const DataProjectsProjectIdPersonsRouteRouteChildren: DataProjectsProjectIdPersonsRouteRouteChildren =
  {
    DataProjectsProjectIdPersonsFilterRoute:
      DataProjectsProjectIdPersonsFilterRoute,
    DataProjectsProjectIdPersonsIndexRoute:
      DataProjectsProjectIdPersonsIndexRoute,
    DataProjectsProjectIdPersonsPersonIdIndexRoute:
      DataProjectsProjectIdPersonsPersonIdIndexRoute,
  }

const DataProjectsProjectIdPersonsRouteRouteWithChildren =
  DataProjectsProjectIdPersonsRouteRoute._addFileChildren(
    DataProjectsProjectIdPersonsRouteRouteChildren,
  )

interface DataProjectsProjectIdPlaceLevelsRouteRouteChildren {
  DataProjectsProjectIdPlaceLevelsIndexRoute: typeof DataProjectsProjectIdPlaceLevelsIndexRoute
  DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute: typeof DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute
}

const DataProjectsProjectIdPlaceLevelsRouteRouteChildren: DataProjectsProjectIdPlaceLevelsRouteRouteChildren =
  {
    DataProjectsProjectIdPlaceLevelsIndexRoute:
      DataProjectsProjectIdPlaceLevelsIndexRoute,
    DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute:
      DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute,
  }

const DataProjectsProjectIdPlaceLevelsRouteRouteWithChildren =
  DataProjectsProjectIdPlaceLevelsRouteRoute._addFileChildren(
    DataProjectsProjectIdPlaceLevelsRouteRouteChildren,
  )

interface DataProjectsProjectIdReportsRouteRouteChildren {
  DataProjectsProjectIdReportsFilterRoute: typeof DataProjectsProjectIdReportsFilterRoute
  DataProjectsProjectIdReportsIndexRoute: typeof DataProjectsProjectIdReportsIndexRoute
  DataProjectsProjectIdReportsProjectReportIdIndexRoute: typeof DataProjectsProjectIdReportsProjectReportIdIndexRoute
}

const DataProjectsProjectIdReportsRouteRouteChildren: DataProjectsProjectIdReportsRouteRouteChildren =
  {
    DataProjectsProjectIdReportsFilterRoute:
      DataProjectsProjectIdReportsFilterRoute,
    DataProjectsProjectIdReportsIndexRoute:
      DataProjectsProjectIdReportsIndexRoute,
    DataProjectsProjectIdReportsProjectReportIdIndexRoute:
      DataProjectsProjectIdReportsProjectReportIdIndexRoute,
  }

const DataProjectsProjectIdReportsRouteRouteWithChildren =
  DataProjectsProjectIdReportsRouteRoute._addFileChildren(
    DataProjectsProjectIdReportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteWithChildren
}

const DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteWithChildren,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteWithChildren
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteWithChildren,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteWithChildren
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteWithChildren,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteWithChildren
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteWithChildren,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteWithChildren
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteWithChildren,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteWithChildren
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteWithChildren,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute
  DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute
  DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute
  DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute
}

const DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteChildren: DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute,
    DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute,
  }

const DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteChildren,
  )

interface DataProjectsProjectIdSubprojectsRouteRouteChildren {
  DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute: typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsFilterRoute: typeof DataProjectsProjectIdSubprojectsFilterRoute
  DataProjectsProjectIdSubprojectsIndexRoute: typeof DataProjectsProjectIdSubprojectsIndexRoute
}

const DataProjectsProjectIdSubprojectsRouteRouteChildren: DataProjectsProjectIdSubprojectsRouteRouteChildren =
  {
    DataProjectsProjectIdSubprojectsSubprojectIdRouteRoute:
      DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsFilterRoute:
      DataProjectsProjectIdSubprojectsFilterRoute,
    DataProjectsProjectIdSubprojectsIndexRoute:
      DataProjectsProjectIdSubprojectsIndexRoute,
  }

const DataProjectsProjectIdSubprojectsRouteRouteWithChildren =
  DataProjectsProjectIdSubprojectsRouteRoute._addFileChildren(
    DataProjectsProjectIdSubprojectsRouteRouteChildren,
  )

interface DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteChildren {
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute
}

const DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteChildren: DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteChildren =
  {
    DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute:
      DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute,
    DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute:
      DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute,
  }

const DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteWithChildren =
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRoute._addFileChildren(
    DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteChildren,
  )

interface DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteChildren {
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteWithChildren
  DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute
  DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute
}

const DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteChildren: DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteChildren =
  {
    DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRoute:
      DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteWithChildren,
    DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute:
      DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute,
    DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute:
      DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute,
  }

const DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteWithChildren =
  DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRoute._addFileChildren(
    DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteChildren,
  )

interface DataProjectsProjectIdTaxonomiesRouteRouteChildren {
  DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRoute: typeof DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteWithChildren
  DataProjectsProjectIdTaxonomiesIndexRoute: typeof DataProjectsProjectIdTaxonomiesIndexRoute
}

const DataProjectsProjectIdTaxonomiesRouteRouteChildren: DataProjectsProjectIdTaxonomiesRouteRouteChildren =
  {
    DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRoute:
      DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteWithChildren,
    DataProjectsProjectIdTaxonomiesIndexRoute:
      DataProjectsProjectIdTaxonomiesIndexRoute,
  }

const DataProjectsProjectIdTaxonomiesRouteRouteWithChildren =
  DataProjectsProjectIdTaxonomiesRouteRoute._addFileChildren(
    DataProjectsProjectIdTaxonomiesRouteRouteChildren,
  )

interface DataProjectsProjectIdUnitsRouteRouteChildren {
  DataProjectsProjectIdUnitsFilterRoute: typeof DataProjectsProjectIdUnitsFilterRoute
  DataProjectsProjectIdUnitsIndexRoute: typeof DataProjectsProjectIdUnitsIndexRoute
  DataProjectsProjectIdUnitsUnitIdIndexRoute: typeof DataProjectsProjectIdUnitsUnitIdIndexRoute
}

const DataProjectsProjectIdUnitsRouteRouteChildren: DataProjectsProjectIdUnitsRouteRouteChildren =
  {
    DataProjectsProjectIdUnitsFilterRoute:
      DataProjectsProjectIdUnitsFilterRoute,
    DataProjectsProjectIdUnitsIndexRoute: DataProjectsProjectIdUnitsIndexRoute,
    DataProjectsProjectIdUnitsUnitIdIndexRoute:
      DataProjectsProjectIdUnitsUnitIdIndexRoute,
  }

const DataProjectsProjectIdUnitsRouteRouteWithChildren =
  DataProjectsProjectIdUnitsRouteRoute._addFileChildren(
    DataProjectsProjectIdUnitsRouteRouteChildren,
  )

interface DataProjectsProjectIdUsersRouteRouteChildren {
  DataProjectsProjectIdUsersIndexRoute: typeof DataProjectsProjectIdUsersIndexRoute
  DataProjectsProjectIdUsersProjectUserIdIndexRoute: typeof DataProjectsProjectIdUsersProjectUserIdIndexRoute
}

const DataProjectsProjectIdUsersRouteRouteChildren: DataProjectsProjectIdUsersRouteRouteChildren =
  {
    DataProjectsProjectIdUsersIndexRoute: DataProjectsProjectIdUsersIndexRoute,
    DataProjectsProjectIdUsersProjectUserIdIndexRoute:
      DataProjectsProjectIdUsersProjectUserIdIndexRoute,
  }

const DataProjectsProjectIdUsersRouteRouteWithChildren =
  DataProjectsProjectIdUsersRouteRoute._addFileChildren(
    DataProjectsProjectIdUsersRouteRouteChildren,
  )

interface DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteChildren {
  DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute
  DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute
}

const DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteChildren: DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteChildren =
  {
    DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute:
      DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute,
    DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute:
      DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute,
  }

const DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteWithChildren =
  DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRoute._addFileChildren(
    DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteChildren,
  )

interface DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteChildren {
  DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteWithChildren
  DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute
  DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute
}

const DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteChildren: DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteChildren =
  {
    DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRoute:
      DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteWithChildren,
    DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute:
      DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute,
    DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute:
      DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute,
  }

const DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteWithChildren =
  DataProjectsProjectIdVectorLayersVectorLayerIdRouteRoute._addFileChildren(
    DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteChildren,
  )

interface DataProjectsProjectIdVectorLayersRouteRouteChildren {
  DataProjectsProjectIdVectorLayersVectorLayerIdRouteRoute: typeof DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteWithChildren
  DataProjectsProjectIdVectorLayersFilterRoute: typeof DataProjectsProjectIdVectorLayersFilterRoute
  DataProjectsProjectIdVectorLayersIndexRoute: typeof DataProjectsProjectIdVectorLayersIndexRoute
}

const DataProjectsProjectIdVectorLayersRouteRouteChildren: DataProjectsProjectIdVectorLayersRouteRouteChildren =
  {
    DataProjectsProjectIdVectorLayersVectorLayerIdRouteRoute:
      DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteWithChildren,
    DataProjectsProjectIdVectorLayersFilterRoute:
      DataProjectsProjectIdVectorLayersFilterRoute,
    DataProjectsProjectIdVectorLayersIndexRoute:
      DataProjectsProjectIdVectorLayersIndexRoute,
  }

const DataProjectsProjectIdVectorLayersRouteRouteWithChildren =
  DataProjectsProjectIdVectorLayersRouteRoute._addFileChildren(
    DataProjectsProjectIdVectorLayersRouteRouteChildren,
  )

interface DataProjectsProjectIdWmsLayersRouteRouteChildren {
  DataProjectsProjectIdWmsLayersWmsLayerIdRoute: typeof DataProjectsProjectIdWmsLayersWmsLayerIdRoute
  DataProjectsProjectIdWmsLayersFilterRoute: typeof DataProjectsProjectIdWmsLayersFilterRoute
  DataProjectsProjectIdWmsLayersIndexRoute: typeof DataProjectsProjectIdWmsLayersIndexRoute
}

const DataProjectsProjectIdWmsLayersRouteRouteChildren: DataProjectsProjectIdWmsLayersRouteRouteChildren =
  {
    DataProjectsProjectIdWmsLayersWmsLayerIdRoute:
      DataProjectsProjectIdWmsLayersWmsLayerIdRoute,
    DataProjectsProjectIdWmsLayersFilterRoute:
      DataProjectsProjectIdWmsLayersFilterRoute,
    DataProjectsProjectIdWmsLayersIndexRoute:
      DataProjectsProjectIdWmsLayersIndexRoute,
  }

const DataProjectsProjectIdWmsLayersRouteRouteWithChildren =
  DataProjectsProjectIdWmsLayersRouteRoute._addFileChildren(
    DataProjectsProjectIdWmsLayersRouteRouteChildren,
  )

interface DataProjectsProjectIdRouteRouteChildren {
  DataProjectsProjectIdCrsRouteRoute: typeof DataProjectsProjectIdCrsRouteRouteWithChildren
  DataProjectsProjectIdFieldsRouteRoute: typeof DataProjectsProjectIdFieldsRouteRouteWithChildren
  DataProjectsProjectIdFilesRouteRoute: typeof DataProjectsProjectIdFilesRouteRouteWithChildren
  DataProjectsProjectIdListsRouteRoute: typeof DataProjectsProjectIdListsRouteRouteWithChildren
  DataProjectsProjectIdPersonsRouteRoute: typeof DataProjectsProjectIdPersonsRouteRouteWithChildren
  DataProjectsProjectIdPlaceLevelsRouteRoute: typeof DataProjectsProjectIdPlaceLevelsRouteRouteWithChildren
  DataProjectsProjectIdReportsRouteRoute: typeof DataProjectsProjectIdReportsRouteRouteWithChildren
  DataProjectsProjectIdSubprojectsRouteRoute: typeof DataProjectsProjectIdSubprojectsRouteRouteWithChildren
  DataProjectsProjectIdTaxonomiesRouteRoute: typeof DataProjectsProjectIdTaxonomiesRouteRouteWithChildren
  DataProjectsProjectIdUnitsRouteRoute: typeof DataProjectsProjectIdUnitsRouteRouteWithChildren
  DataProjectsProjectIdUsersRouteRoute: typeof DataProjectsProjectIdUsersRouteRouteWithChildren
  DataProjectsProjectIdVectorLayersRouteRoute: typeof DataProjectsProjectIdVectorLayersRouteRouteWithChildren
  DataProjectsProjectIdWmsLayersRouteRoute: typeof DataProjectsProjectIdWmsLayersRouteRouteWithChildren
  DataProjectsProjectIdProjectRoute: typeof DataProjectsProjectIdProjectRoute
  DataProjectsProjectIdIndexRoute: typeof DataProjectsProjectIdIndexRoute
}

const DataProjectsProjectIdRouteRouteChildren: DataProjectsProjectIdRouteRouteChildren =
  {
    DataProjectsProjectIdCrsRouteRoute:
      DataProjectsProjectIdCrsRouteRouteWithChildren,
    DataProjectsProjectIdFieldsRouteRoute:
      DataProjectsProjectIdFieldsRouteRouteWithChildren,
    DataProjectsProjectIdFilesRouteRoute:
      DataProjectsProjectIdFilesRouteRouteWithChildren,
    DataProjectsProjectIdListsRouteRoute:
      DataProjectsProjectIdListsRouteRouteWithChildren,
    DataProjectsProjectIdPersonsRouteRoute:
      DataProjectsProjectIdPersonsRouteRouteWithChildren,
    DataProjectsProjectIdPlaceLevelsRouteRoute:
      DataProjectsProjectIdPlaceLevelsRouteRouteWithChildren,
    DataProjectsProjectIdReportsRouteRoute:
      DataProjectsProjectIdReportsRouteRouteWithChildren,
    DataProjectsProjectIdSubprojectsRouteRoute:
      DataProjectsProjectIdSubprojectsRouteRouteWithChildren,
    DataProjectsProjectIdTaxonomiesRouteRoute:
      DataProjectsProjectIdTaxonomiesRouteRouteWithChildren,
    DataProjectsProjectIdUnitsRouteRoute:
      DataProjectsProjectIdUnitsRouteRouteWithChildren,
    DataProjectsProjectIdUsersRouteRoute:
      DataProjectsProjectIdUsersRouteRouteWithChildren,
    DataProjectsProjectIdVectorLayersRouteRoute:
      DataProjectsProjectIdVectorLayersRouteRouteWithChildren,
    DataProjectsProjectIdWmsLayersRouteRoute:
      DataProjectsProjectIdWmsLayersRouteRouteWithChildren,
    DataProjectsProjectIdProjectRoute: DataProjectsProjectIdProjectRoute,
    DataProjectsProjectIdIndexRoute: DataProjectsProjectIdIndexRoute,
  }

const DataProjectsProjectIdRouteRouteWithChildren =
  DataProjectsProjectIdRouteRoute._addFileChildren(
    DataProjectsProjectIdRouteRouteChildren,
  )

interface DataProjectsRouteRouteChildren {
  DataProjectsProjectIdRouteRoute: typeof DataProjectsProjectIdRouteRouteWithChildren
  DataProjectsFilterRoute: typeof DataProjectsFilterRoute
  DataProjectsIndexRoute: typeof DataProjectsIndexRoute
}

const DataProjectsRouteRouteChildren: DataProjectsRouteRouteChildren = {
  DataProjectsProjectIdRouteRoute: DataProjectsProjectIdRouteRouteWithChildren,
  DataProjectsFilterRoute: DataProjectsFilterRoute,
  DataProjectsIndexRoute: DataProjectsIndexRoute,
}

const DataProjectsRouteRouteWithChildren =
  DataProjectsRouteRoute._addFileChildren(DataProjectsRouteRouteChildren)

interface DataUsersRouteRouteChildren {
  DataUsersUserIdRoute: typeof DataUsersUserIdRoute
  DataUsersIndexRoute: typeof DataUsersIndexRoute
}

const DataUsersRouteRouteChildren: DataUsersRouteRouteChildren = {
  DataUsersUserIdRoute: DataUsersUserIdRoute,
  DataUsersIndexRoute: DataUsersIndexRoute,
}

const DataUsersRouteRouteWithChildren = DataUsersRouteRoute._addFileChildren(
  DataUsersRouteRouteChildren,
)

interface DataWidgetTypesRouteRouteChildren {
  DataWidgetTypesWidgetTypeIdRoute: typeof DataWidgetTypesWidgetTypeIdRoute
  DataWidgetTypesFilterRoute: typeof DataWidgetTypesFilterRoute
  DataWidgetTypesIndexRoute: typeof DataWidgetTypesIndexRoute
}

const DataWidgetTypesRouteRouteChildren: DataWidgetTypesRouteRouteChildren = {
  DataWidgetTypesWidgetTypeIdRoute: DataWidgetTypesWidgetTypeIdRoute,
  DataWidgetTypesFilterRoute: DataWidgetTypesFilterRoute,
  DataWidgetTypesIndexRoute: DataWidgetTypesIndexRoute,
}

const DataWidgetTypesRouteRouteWithChildren =
  DataWidgetTypesRouteRoute._addFileChildren(DataWidgetTypesRouteRouteChildren)

interface DataWidgetsForFieldsRouteRouteChildren {
  DataWidgetsForFieldsWidgetForFieldIdRoute: typeof DataWidgetsForFieldsWidgetForFieldIdRoute
  DataWidgetsForFieldsFilterRoute: typeof DataWidgetsForFieldsFilterRoute
  DataWidgetsForFieldsIndexRoute: typeof DataWidgetsForFieldsIndexRoute
}

const DataWidgetsForFieldsRouteRouteChildren: DataWidgetsForFieldsRouteRouteChildren =
  {
    DataWidgetsForFieldsWidgetForFieldIdRoute:
      DataWidgetsForFieldsWidgetForFieldIdRoute,
    DataWidgetsForFieldsFilterRoute: DataWidgetsForFieldsFilterRoute,
    DataWidgetsForFieldsIndexRoute: DataWidgetsForFieldsIndexRoute,
  }

const DataWidgetsForFieldsRouteRouteWithChildren =
  DataWidgetsForFieldsRouteRoute._addFileChildren(
    DataWidgetsForFieldsRouteRouteChildren,
  )

interface DataRouteRouteChildren {
  DataAccountsRouteRoute: typeof DataAccountsRouteRouteWithChildren
  DataCrsRouteRoute: typeof DataCrsRouteRouteWithChildren
  DataFieldTypesRouteRoute: typeof DataFieldTypesRouteRouteWithChildren
  DataFieldsRouteRoute: typeof DataFieldsRouteRouteWithChildren
  DataFilesRouteRoute: typeof DataFilesRouteRouteWithChildren
  DataMessagesRouteRoute: typeof DataMessagesRouteRouteWithChildren
  DataProjectsRouteRoute: typeof DataProjectsRouteRouteWithChildren
  DataUsersRouteRoute: typeof DataUsersRouteRouteWithChildren
  DataWidgetTypesRouteRoute: typeof DataWidgetTypesRouteRouteWithChildren
  DataWidgetsForFieldsRouteRoute: typeof DataWidgetsForFieldsRouteRouteWithChildren
  DataAppStatesRoute: typeof DataAppStatesRoute
  DataAuthRoute: typeof DataAuthRoute
  DataIndexRoute: typeof DataIndexRoute
}

const DataRouteRouteChildren: DataRouteRouteChildren = {
  DataAccountsRouteRoute: DataAccountsRouteRouteWithChildren,
  DataCrsRouteRoute: DataCrsRouteRouteWithChildren,
  DataFieldTypesRouteRoute: DataFieldTypesRouteRouteWithChildren,
  DataFieldsRouteRoute: DataFieldsRouteRouteWithChildren,
  DataFilesRouteRoute: DataFilesRouteRouteWithChildren,
  DataMessagesRouteRoute: DataMessagesRouteRouteWithChildren,
  DataProjectsRouteRoute: DataProjectsRouteRouteWithChildren,
  DataUsersRouteRoute: DataUsersRouteRouteWithChildren,
  DataWidgetTypesRouteRoute: DataWidgetTypesRouteRouteWithChildren,
  DataWidgetsForFieldsRouteRoute: DataWidgetsForFieldsRouteRouteWithChildren,
  DataAppStatesRoute: DataAppStatesRoute,
  DataAuthRoute: DataAuthRoute,
  DataIndexRoute: DataIndexRoute,
}

const DataRouteRouteWithChildren = DataRouteRoute._addFileChildren(
  DataRouteRouteChildren,
)

interface LayoutRouteChildren {
  LayoutDocsRoute: typeof LayoutDocsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDocsRoute: LayoutDocsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/data': typeof DataRouteRouteWithChildren
  '': typeof LayoutRouteWithChildren
  '/data/accounts': typeof DataAccountsRouteRouteWithChildren
  '/data/crs': typeof DataCrsRouteRouteWithChildren
  '/data/field-types': typeof DataFieldTypesRouteRouteWithChildren
  '/data/fields': typeof DataFieldsRouteRouteWithChildren
  '/data/files': typeof DataFilesRouteRouteWithChildren
  '/data/messages': typeof DataMessagesRouteRouteWithChildren
  '/data/projects': typeof DataProjectsRouteRouteWithChildren
  '/data/users': typeof DataUsersRouteRouteWithChildren
  '/data/widget-types': typeof DataWidgetTypesRouteRouteWithChildren
  '/data/widgets-for-fields': typeof DataWidgetsForFieldsRouteRouteWithChildren
  '/docs': typeof LayoutDocsRoute
  '/data/app-states': typeof DataAppStatesRoute
  '/data/auth': typeof DataAuthRoute
  '/': typeof LayoutIndexRoute
  '/data/': typeof DataIndexRoute
  '/data/projects/$projectId': typeof DataProjectsProjectIdRouteRouteWithChildren
  '/data/accounts/$accountId': typeof DataAccountsAccountIdRoute
  '/data/crs/$crsId': typeof DataCrsCrsIdRoute
  '/data/field-types/$fieldTypeId': typeof DataFieldTypesFieldTypeIdRoute
  '/data/field-types/filter': typeof DataFieldTypesFilterRoute
  '/data/fields/$fieldId': typeof DataFieldsFieldIdRoute
  '/data/fields/filter': typeof DataFieldsFilterRoute
  '/data/files/$fileId': typeof DataFilesFileIdRoute
  '/data/messages/$messageId': typeof DataMessagesMessageIdRoute
  '/data/projects/filter': typeof DataProjectsFilterRoute
  '/data/users/$userId': typeof DataUsersUserIdRoute
  '/data/widget-types/$widgetTypeId': typeof DataWidgetTypesWidgetTypeIdRoute
  '/data/widget-types/filter': typeof DataWidgetTypesFilterRoute
  '/data/widgets-for-fields/$widgetForFieldId': typeof DataWidgetsForFieldsWidgetForFieldIdRoute
  '/data/widgets-for-fields/filter': typeof DataWidgetsForFieldsFilterRoute
  '/data/accounts/': typeof DataAccountsIndexRoute
  '/data/crs/': typeof DataCrsIndexRoute
  '/data/field-types/': typeof DataFieldTypesIndexRoute
  '/data/fields/': typeof DataFieldsIndexRoute
  '/data/files/': typeof DataFilesIndexRoute
  '/data/messages/': typeof DataMessagesIndexRoute
  '/data/projects/': typeof DataProjectsIndexRoute
  '/data/users/': typeof DataUsersIndexRoute
  '/data/widget-types/': typeof DataWidgetTypesIndexRoute
  '/data/widgets-for-fields/': typeof DataWidgetsForFieldsIndexRoute
  '/data/projects/$projectId/crs': typeof DataProjectsProjectIdCrsRouteRouteWithChildren
  '/data/projects/$projectId/fields': typeof DataProjectsProjectIdFieldsRouteRouteWithChildren
  '/data/projects/$projectId/files': typeof DataProjectsProjectIdFilesRouteRouteWithChildren
  '/data/projects/$projectId/lists': typeof DataProjectsProjectIdListsRouteRouteWithChildren
  '/data/projects/$projectId/persons': typeof DataProjectsProjectIdPersonsRouteRouteWithChildren
  '/data/projects/$projectId/place-levels': typeof DataProjectsProjectIdPlaceLevelsRouteRouteWithChildren
  '/data/projects/$projectId/reports': typeof DataProjectsProjectIdReportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects': typeof DataProjectsProjectIdSubprojectsRouteRouteWithChildren
  '/data/projects/$projectId/taxonomies': typeof DataProjectsProjectIdTaxonomiesRouteRouteWithChildren
  '/data/projects/$projectId/units': typeof DataProjectsProjectIdUnitsRouteRouteWithChildren
  '/data/projects/$projectId/users': typeof DataProjectsProjectIdUsersRouteRouteWithChildren
  '/data/projects/$projectId/vector-layers': typeof DataProjectsProjectIdVectorLayersRouteRouteWithChildren
  '/data/projects/$projectId/wms-layers': typeof DataProjectsProjectIdWmsLayersRouteRouteWithChildren
  '/data/files/$fileId/preview': typeof DataFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/project': typeof DataProjectsProjectIdProjectRoute
  '/data/projects/$projectId/': typeof DataProjectsProjectIdIndexRoute
  '/data/projects/$projectId/lists/$listId': typeof DataProjectsProjectIdListsListIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId': typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteWithChildren
  '/data/projects/$projectId/taxonomies/$taxonomyId': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteWithChildren
  '/data/projects/$projectId/vector-layers/$vectorLayerId': typeof DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteWithChildren
  '/data/projects/$projectId/fields/$fieldId': typeof DataProjectsProjectIdFieldsFieldIdRoute
  '/data/projects/$projectId/fields/filter': typeof DataProjectsProjectIdFieldsFilterRoute
  '/data/projects/$projectId/files/$fileId': typeof DataProjectsProjectIdFilesFileIdRoute
  '/data/projects/$projectId/lists/filter': typeof DataProjectsProjectIdListsFilterRoute
  '/data/projects/$projectId/persons/filter': typeof DataProjectsProjectIdPersonsFilterRoute
  '/data/projects/$projectId/reports/filter': typeof DataProjectsProjectIdReportsFilterRoute
  '/data/projects/$projectId/subprojects/filter': typeof DataProjectsProjectIdSubprojectsFilterRoute
  '/data/projects/$projectId/units/filter': typeof DataProjectsProjectIdUnitsFilterRoute
  '/data/projects/$projectId/vector-layers/filter': typeof DataProjectsProjectIdVectorLayersFilterRoute
  '/data/projects/$projectId/wms-layers/$wmsLayerId': typeof DataProjectsProjectIdWmsLayersWmsLayerIdRoute
  '/data/projects/$projectId/wms-layers/filter': typeof DataProjectsProjectIdWmsLayersFilterRoute
  '/data/files/$fileId/preview/': typeof DataFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/crs/': typeof DataProjectsProjectIdCrsIndexRoute
  '/data/projects/$projectId/fields/': typeof DataProjectsProjectIdFieldsIndexRoute
  '/data/projects/$projectId/files/': typeof DataProjectsProjectIdFilesIndexRoute
  '/data/projects/$projectId/lists/': typeof DataProjectsProjectIdListsIndexRoute
  '/data/projects/$projectId/persons/': typeof DataProjectsProjectIdPersonsIndexRoute
  '/data/projects/$projectId/place-levels/': typeof DataProjectsProjectIdPlaceLevelsIndexRoute
  '/data/projects/$projectId/reports/': typeof DataProjectsProjectIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/': typeof DataProjectsProjectIdSubprojectsIndexRoute
  '/data/projects/$projectId/taxonomies/': typeof DataProjectsProjectIdTaxonomiesIndexRoute
  '/data/projects/$projectId/units/': typeof DataProjectsProjectIdUnitsIndexRoute
  '/data/projects/$projectId/users/': typeof DataProjectsProjectIdUsersIndexRoute
  '/data/projects/$projectId/vector-layers/': typeof DataProjectsProjectIdVectorLayersIndexRoute
  '/data/projects/$projectId/wms-layers/': typeof DataProjectsProjectIdWmsLayersIndexRoute
  '/data/projects/$projectId/lists/$listId/values': typeof DataProjectsProjectIdListsListIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/charts': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/goals': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteWithChildren
  '/data/projects/$projectId/taxonomies/$taxonomyId/taxa': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId/vector-layers/$vectorLayerId/displays': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteWithChildren
  '/data/projects/$projectId/files/$fileId/preview': typeof DataProjectsProjectIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/lists/$listId/list': typeof DataProjectsProjectIdListsListIdListRoute
  '/data/projects/$projectId/subprojects/$subprojectId/subproject': typeof DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId/taxonomy': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId/vector-layer': typeof DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute
  '/data/projects/$projectId/crs/$projectCrsId': typeof DataProjectsProjectIdCrsProjectCrsIdIndexRoute
  '/data/projects/$projectId/lists/$listId/': typeof DataProjectsProjectIdListsListIdIndexRoute
  '/data/projects/$projectId/persons/$personId': typeof DataProjectsProjectIdPersonsPersonIdIndexRoute
  '/data/projects/$projectId/place-levels/$placeLevelId': typeof DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute
  '/data/projects/$projectId/reports/$projectReportId': typeof DataProjectsProjectIdReportsProjectReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId/': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute
  '/data/projects/$projectId/units/$unitId': typeof DataProjectsProjectIdUnitsUnitIdIndexRoute
  '/data/projects/$projectId/users/$projectUserId': typeof DataProjectsProjectIdUsersProjectUserIdIndexRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId/': typeof DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/$vectorLayerDisplayId': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute
  '/data/projects/$projectId/files/$fileId/preview/': typeof DataProjectsProjectIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/lists/$listId/values/': typeof DataProjectsProjectIdListsListIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/taxa/': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/users/': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/chart': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute
  '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/goal': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/place': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute
  '/data/projects/$projectId/lists/$listId/values/$listValueId': typeof DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/$occurrenceImportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/reports/$subprojectReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/taxa/$subprojectTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/users/$subprojectUserId': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/$taxonId': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/action': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/check': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/place': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/$chartSubjectId': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/$placeUserId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/$placeReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa/$subprojectTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/action': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/check': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/$goalReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/$actionValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/$checkTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/$checkValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/$actionReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/$actionValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/$checkTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/$checkValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/$actionReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
}

export interface FileRoutesByTo {
  '/docs': typeof LayoutDocsRoute
  '/data/app-states': typeof DataAppStatesRoute
  '/data/auth': typeof DataAuthRoute
  '/': typeof LayoutIndexRoute
  '/data': typeof DataIndexRoute
  '/data/accounts/$accountId': typeof DataAccountsAccountIdRoute
  '/data/crs/$crsId': typeof DataCrsCrsIdRoute
  '/data/field-types/$fieldTypeId': typeof DataFieldTypesFieldTypeIdRoute
  '/data/field-types/filter': typeof DataFieldTypesFilterRoute
  '/data/fields/$fieldId': typeof DataFieldsFieldIdRoute
  '/data/fields/filter': typeof DataFieldsFilterRoute
  '/data/files/$fileId': typeof DataFilesFileIdRoute
  '/data/messages/$messageId': typeof DataMessagesMessageIdRoute
  '/data/projects/filter': typeof DataProjectsFilterRoute
  '/data/users/$userId': typeof DataUsersUserIdRoute
  '/data/widget-types/$widgetTypeId': typeof DataWidgetTypesWidgetTypeIdRoute
  '/data/widget-types/filter': typeof DataWidgetTypesFilterRoute
  '/data/widgets-for-fields/$widgetForFieldId': typeof DataWidgetsForFieldsWidgetForFieldIdRoute
  '/data/widgets-for-fields/filter': typeof DataWidgetsForFieldsFilterRoute
  '/data/accounts': typeof DataAccountsIndexRoute
  '/data/crs': typeof DataCrsIndexRoute
  '/data/field-types': typeof DataFieldTypesIndexRoute
  '/data/fields': typeof DataFieldsIndexRoute
  '/data/files': typeof DataFilesIndexRoute
  '/data/messages': typeof DataMessagesIndexRoute
  '/data/projects': typeof DataProjectsIndexRoute
  '/data/users': typeof DataUsersIndexRoute
  '/data/widget-types': typeof DataWidgetTypesIndexRoute
  '/data/widgets-for-fields': typeof DataWidgetsForFieldsIndexRoute
  '/data/projects/$projectId/project': typeof DataProjectsProjectIdProjectRoute
  '/data/projects/$projectId': typeof DataProjectsProjectIdIndexRoute
  '/data/projects/$projectId/fields/$fieldId': typeof DataProjectsProjectIdFieldsFieldIdRoute
  '/data/projects/$projectId/fields/filter': typeof DataProjectsProjectIdFieldsFilterRoute
  '/data/projects/$projectId/files/$fileId': typeof DataProjectsProjectIdFilesFileIdRoute
  '/data/projects/$projectId/lists/filter': typeof DataProjectsProjectIdListsFilterRoute
  '/data/projects/$projectId/persons/filter': typeof DataProjectsProjectIdPersonsFilterRoute
  '/data/projects/$projectId/reports/filter': typeof DataProjectsProjectIdReportsFilterRoute
  '/data/projects/$projectId/subprojects/filter': typeof DataProjectsProjectIdSubprojectsFilterRoute
  '/data/projects/$projectId/units/filter': typeof DataProjectsProjectIdUnitsFilterRoute
  '/data/projects/$projectId/vector-layers/filter': typeof DataProjectsProjectIdVectorLayersFilterRoute
  '/data/projects/$projectId/wms-layers/$wmsLayerId': typeof DataProjectsProjectIdWmsLayersWmsLayerIdRoute
  '/data/projects/$projectId/wms-layers/filter': typeof DataProjectsProjectIdWmsLayersFilterRoute
  '/data/files/$fileId/preview': typeof DataFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/crs': typeof DataProjectsProjectIdCrsIndexRoute
  '/data/projects/$projectId/fields': typeof DataProjectsProjectIdFieldsIndexRoute
  '/data/projects/$projectId/files': typeof DataProjectsProjectIdFilesIndexRoute
  '/data/projects/$projectId/lists': typeof DataProjectsProjectIdListsIndexRoute
  '/data/projects/$projectId/persons': typeof DataProjectsProjectIdPersonsIndexRoute
  '/data/projects/$projectId/place-levels': typeof DataProjectsProjectIdPlaceLevelsIndexRoute
  '/data/projects/$projectId/reports': typeof DataProjectsProjectIdReportsIndexRoute
  '/data/projects/$projectId/subprojects': typeof DataProjectsProjectIdSubprojectsIndexRoute
  '/data/projects/$projectId/taxonomies': typeof DataProjectsProjectIdTaxonomiesIndexRoute
  '/data/projects/$projectId/units': typeof DataProjectsProjectIdUnitsIndexRoute
  '/data/projects/$projectId/users': typeof DataProjectsProjectIdUsersIndexRoute
  '/data/projects/$projectId/vector-layers': typeof DataProjectsProjectIdVectorLayersIndexRoute
  '/data/projects/$projectId/wms-layers': typeof DataProjectsProjectIdWmsLayersIndexRoute
  '/data/projects/$projectId/lists/$listId/list': typeof DataProjectsProjectIdListsListIdListRoute
  '/data/projects/$projectId/subprojects/$subprojectId/subproject': typeof DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId/taxonomy': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId/vector-layer': typeof DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute
  '/data/projects/$projectId/crs/$projectCrsId': typeof DataProjectsProjectIdCrsProjectCrsIdIndexRoute
  '/data/projects/$projectId/lists/$listId': typeof DataProjectsProjectIdListsListIdIndexRoute
  '/data/projects/$projectId/persons/$personId': typeof DataProjectsProjectIdPersonsPersonIdIndexRoute
  '/data/projects/$projectId/place-levels/$placeLevelId': typeof DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute
  '/data/projects/$projectId/reports/$projectReportId': typeof DataProjectsProjectIdReportsProjectReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId': typeof DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute
  '/data/projects/$projectId/units/$unitId': typeof DataProjectsProjectIdUnitsUnitIdIndexRoute
  '/data/projects/$projectId/users/$projectUserId': typeof DataProjectsProjectIdUsersProjectUserIdIndexRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId': typeof DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/$vectorLayerDisplayId': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute
  '/data/projects/$projectId/files/$fileId/preview': typeof DataProjectsProjectIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/lists/$listId/values': typeof DataProjectsProjectIdListsListIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId/taxa': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute
  '/data/projects/$projectId/vector-layers/$vectorLayerId/displays': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/chart': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/goal': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/place': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute
  '/data/projects/$projectId/lists/$listId/values/$listValueId': typeof DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/$occurrenceImportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/reports/$subprojectReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/taxa/$subprojectTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/users/$subprojectUserId': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute
  '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/$taxonId': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/action': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/check': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/place': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/$chartSubjectId': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/$placeUserId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/$placeReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa/$subprojectTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/action': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/check': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/$goalReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/$actionValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/$checkTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/$checkValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/$occurrenceId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/$actionReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/$actionValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/$checkTaxonId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/$checkValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/$actionReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/data': typeof DataRouteRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/data/accounts': typeof DataAccountsRouteRouteWithChildren
  '/data/crs': typeof DataCrsRouteRouteWithChildren
  '/data/field-types': typeof DataFieldTypesRouteRouteWithChildren
  '/data/fields': typeof DataFieldsRouteRouteWithChildren
  '/data/files': typeof DataFilesRouteRouteWithChildren
  '/data/messages': typeof DataMessagesRouteRouteWithChildren
  '/data/projects': typeof DataProjectsRouteRouteWithChildren
  '/data/users': typeof DataUsersRouteRouteWithChildren
  '/data/widget-types': typeof DataWidgetTypesRouteRouteWithChildren
  '/data/widgets-for-fields': typeof DataWidgetsForFieldsRouteRouteWithChildren
  '/_layout/docs': typeof LayoutDocsRoute
  '/data/app-states': typeof DataAppStatesRoute
  '/data/auth': typeof DataAuthRoute
  '/_layout/': typeof LayoutIndexRoute
  '/data/': typeof DataIndexRoute
  '/data/projects/$projectId_': typeof DataProjectsProjectIdRouteRouteWithChildren
  '/data/accounts/$accountId': typeof DataAccountsAccountIdRoute
  '/data/crs/$crsId': typeof DataCrsCrsIdRoute
  '/data/field-types/$fieldTypeId': typeof DataFieldTypesFieldTypeIdRoute
  '/data/field-types/filter': typeof DataFieldTypesFilterRoute
  '/data/fields/$fieldId': typeof DataFieldsFieldIdRoute
  '/data/fields/filter': typeof DataFieldsFilterRoute
  '/data/files/$fileId': typeof DataFilesFileIdRoute
  '/data/messages/$messageId': typeof DataMessagesMessageIdRoute
  '/data/projects/filter': typeof DataProjectsFilterRoute
  '/data/users/$userId': typeof DataUsersUserIdRoute
  '/data/widget-types/$widgetTypeId': typeof DataWidgetTypesWidgetTypeIdRoute
  '/data/widget-types/filter': typeof DataWidgetTypesFilterRoute
  '/data/widgets-for-fields/$widgetForFieldId': typeof DataWidgetsForFieldsWidgetForFieldIdRoute
  '/data/widgets-for-fields/filter': typeof DataWidgetsForFieldsFilterRoute
  '/data/accounts/': typeof DataAccountsIndexRoute
  '/data/crs/': typeof DataCrsIndexRoute
  '/data/field-types/': typeof DataFieldTypesIndexRoute
  '/data/fields/': typeof DataFieldsIndexRoute
  '/data/files/': typeof DataFilesIndexRoute
  '/data/messages/': typeof DataMessagesIndexRoute
  '/data/projects/': typeof DataProjectsIndexRoute
  '/data/users/': typeof DataUsersIndexRoute
  '/data/widget-types/': typeof DataWidgetTypesIndexRoute
  '/data/widgets-for-fields/': typeof DataWidgetsForFieldsIndexRoute
  '/data/projects/$projectId_/crs': typeof DataProjectsProjectIdCrsRouteRouteWithChildren
  '/data/projects/$projectId_/fields': typeof DataProjectsProjectIdFieldsRouteRouteWithChildren
  '/data/projects/$projectId_/files': typeof DataProjectsProjectIdFilesRouteRouteWithChildren
  '/data/projects/$projectId_/lists': typeof DataProjectsProjectIdListsRouteRouteWithChildren
  '/data/projects/$projectId_/persons': typeof DataProjectsProjectIdPersonsRouteRouteWithChildren
  '/data/projects/$projectId_/place-levels': typeof DataProjectsProjectIdPlaceLevelsRouteRouteWithChildren
  '/data/projects/$projectId_/reports': typeof DataProjectsProjectIdReportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects': typeof DataProjectsProjectIdSubprojectsRouteRouteWithChildren
  '/data/projects/$projectId_/taxonomies': typeof DataProjectsProjectIdTaxonomiesRouteRouteWithChildren
  '/data/projects/$projectId_/units': typeof DataProjectsProjectIdUnitsRouteRouteWithChildren
  '/data/projects/$projectId_/users': typeof DataProjectsProjectIdUsersRouteRouteWithChildren
  '/data/projects/$projectId_/vector-layers': typeof DataProjectsProjectIdVectorLayersRouteRouteWithChildren
  '/data/projects/$projectId_/wms-layers': typeof DataProjectsProjectIdWmsLayersRouteRouteWithChildren
  '/data/files/$fileId_/preview': typeof DataFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/project': typeof DataProjectsProjectIdProjectRoute
  '/data/projects/$projectId_/': typeof DataProjectsProjectIdIndexRoute
  '/data/projects/$projectId_/lists/$listId_': typeof DataProjectsProjectIdListsListIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdRouteRouteWithChildren
  '/data/projects/$projectId_/taxonomies/$taxonomyId_': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdRouteRouteWithChildren
  '/data/projects/$projectId_/vector-layers/$vectorLayerId_': typeof DataProjectsProjectIdVectorLayersVectorLayerIdRouteRouteWithChildren
  '/data/projects/$projectId_/fields/$fieldId': typeof DataProjectsProjectIdFieldsFieldIdRoute
  '/data/projects/$projectId_/fields/filter': typeof DataProjectsProjectIdFieldsFilterRoute
  '/data/projects/$projectId_/files/$fileId': typeof DataProjectsProjectIdFilesFileIdRoute
  '/data/projects/$projectId_/lists/filter': typeof DataProjectsProjectIdListsFilterRoute
  '/data/projects/$projectId_/persons/filter': typeof DataProjectsProjectIdPersonsFilterRoute
  '/data/projects/$projectId_/reports/filter': typeof DataProjectsProjectIdReportsFilterRoute
  '/data/projects/$projectId_/subprojects/filter': typeof DataProjectsProjectIdSubprojectsFilterRoute
  '/data/projects/$projectId_/units/filter': typeof DataProjectsProjectIdUnitsFilterRoute
  '/data/projects/$projectId_/vector-layers/filter': typeof DataProjectsProjectIdVectorLayersFilterRoute
  '/data/projects/$projectId_/wms-layers/$wmsLayerId': typeof DataProjectsProjectIdWmsLayersWmsLayerIdRoute
  '/data/projects/$projectId_/wms-layers/filter': typeof DataProjectsProjectIdWmsLayersFilterRoute
  '/data/files/$fileId_/preview/': typeof DataFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/crs/': typeof DataProjectsProjectIdCrsIndexRoute
  '/data/projects/$projectId_/fields/': typeof DataProjectsProjectIdFieldsIndexRoute
  '/data/projects/$projectId_/files/': typeof DataProjectsProjectIdFilesIndexRoute
  '/data/projects/$projectId_/lists/': typeof DataProjectsProjectIdListsIndexRoute
  '/data/projects/$projectId_/persons/': typeof DataProjectsProjectIdPersonsIndexRoute
  '/data/projects/$projectId_/place-levels/': typeof DataProjectsProjectIdPlaceLevelsIndexRoute
  '/data/projects/$projectId_/reports/': typeof DataProjectsProjectIdReportsIndexRoute
  '/data/projects/$projectId_/subprojects/': typeof DataProjectsProjectIdSubprojectsIndexRoute
  '/data/projects/$projectId_/taxonomies/': typeof DataProjectsProjectIdTaxonomiesIndexRoute
  '/data/projects/$projectId_/units/': typeof DataProjectsProjectIdUnitsIndexRoute
  '/data/projects/$projectId_/users/': typeof DataProjectsProjectIdUsersIndexRoute
  '/data/projects/$projectId_/vector-layers/': typeof DataProjectsProjectIdVectorLayersIndexRoute
  '/data/projects/$projectId_/wms-layers/': typeof DataProjectsProjectIdWmsLayersIndexRoute
  '/data/projects/$projectId_/lists/$listId_/values': typeof DataProjectsProjectIdListsListIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersRouteRouteWithChildren
  '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysRouteRouteWithChildren
  '/data/projects/$projectId_/files/$fileId_/preview': typeof DataProjectsProjectIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/lists/$listId_/list': typeof DataProjectsProjectIdListsListIdListRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/subproject': typeof DataProjectsProjectIdSubprojectsSubprojectIdSubprojectRoute
  '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxonomyRoute
  '/data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer': typeof DataProjectsProjectIdVectorLayersVectorLayerIdVectorLayerRoute
  '/data/projects/$projectId_/crs/$projectCrsId/': typeof DataProjectsProjectIdCrsProjectCrsIdIndexRoute
  '/data/projects/$projectId_/lists/$listId_/': typeof DataProjectsProjectIdListsListIdIndexRoute
  '/data/projects/$projectId_/persons/$personId/': typeof DataProjectsProjectIdPersonsPersonIdIndexRoute
  '/data/projects/$projectId_/place-levels/$placeLevelId/': typeof DataProjectsProjectIdPlaceLevelsPlaceLevelIdIndexRoute
  '/data/projects/$projectId_/reports/$projectReportId/': typeof DataProjectsProjectIdReportsProjectReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdIndexRoute
  '/data/projects/$projectId_/taxonomies/$taxonomyId_/': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdIndexRoute
  '/data/projects/$projectId_/units/$unitId/': typeof DataProjectsProjectIdUnitsUnitIdIndexRoute
  '/data/projects/$projectId_/users/$projectUserId/': typeof DataProjectsProjectIdUsersProjectUserIdIndexRoute
  '/data/projects/$projectId_/vector-layers/$vectorLayerId_/': typeof DataProjectsProjectIdVectorLayersVectorLayerIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsFilterRoute
  '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysVectorLayerDisplayIdRoute
  '/data/projects/$projectId_/files/$fileId_/preview/': typeof DataProjectsProjectIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/lists/$listId_/values/': typeof DataProjectsProjectIdListsListIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts/': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/users/': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersIndexRoute
  '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaIndexRoute
  '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/': typeof DataProjectsProjectIdVectorLayersVectorLayerIdDisplaysIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdChartRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdGoalRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlaceRoute
  '/data/projects/$projectId_/lists/$listId_/values/$listValueId/': typeof DataProjectsProjectIdListsListIdValuesListValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrenceImportsOccurrenceImportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesNotToAssignOccurrenceIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdOccurrencesToAssessOccurrenceIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdReportsSubprojectReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdTaxaSubprojectTaxonIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdUsersSubprojectUserIdIndexRoute
  '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId/': typeof DataProjectsProjectIdTaxonomiesTaxonomyIdTaxaTaxonIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2RouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdReportRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdActionRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdCheckRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2PlaceRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdReportRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdChartsChartIdSubjectsChartSubjectIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdOccurrencesOccurrenceIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2IndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdUsersPlaceUserIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsFilterRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesPlaceReportValueIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesReportsValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesTaxaSubprojectTaxonIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdReportRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdActionRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdCheckRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdReportRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdGoalsGoalIdReportsGoalReportIdValuesGoalReportValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdValuesActionValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdTaxaCheckTaxonIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdValuesCheckValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2OccurrencesOccurrenceIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2UsersPlaceUserIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdReportsPlaceReportIdValuesPlaceReportValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesPlaceReportValueIdRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdChecksCheckIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2FilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ReportsPlaceReportIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesRouteRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdReportRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewRouteWithChildren
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdValuesActionValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdTaxaCheckTaxonIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdValuesCheckValueIdIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ChecksCheckIdFilesFileIdPreviewIndexRoute
  '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/': typeof DataProjectsProjectIdSubprojectsSubprojectIdPlacesPlaceIdPlacesPlaceId2ActionsActionIdReportsActionReportIdValuesActionReportValueIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/data'
    | ''
    | '/data/accounts'
    | '/data/crs'
    | '/data/field-types'
    | '/data/fields'
    | '/data/files'
    | '/data/messages'
    | '/data/projects'
    | '/data/users'
    | '/data/widget-types'
    | '/data/widgets-for-fields'
    | '/docs'
    | '/data/app-states'
    | '/data/auth'
    | '/'
    | '/data/'
    | '/data/projects/$projectId'
    | '/data/accounts/$accountId'
    | '/data/crs/$crsId'
    | '/data/field-types/$fieldTypeId'
    | '/data/field-types/filter'
    | '/data/fields/$fieldId'
    | '/data/fields/filter'
    | '/data/files/$fileId'
    | '/data/messages/$messageId'
    | '/data/projects/filter'
    | '/data/users/$userId'
    | '/data/widget-types/$widgetTypeId'
    | '/data/widget-types/filter'
    | '/data/widgets-for-fields/$widgetForFieldId'
    | '/data/widgets-for-fields/filter'
    | '/data/accounts/'
    | '/data/crs/'
    | '/data/field-types/'
    | '/data/fields/'
    | '/data/files/'
    | '/data/messages/'
    | '/data/projects/'
    | '/data/users/'
    | '/data/widget-types/'
    | '/data/widgets-for-fields/'
    | '/data/projects/$projectId/crs'
    | '/data/projects/$projectId/fields'
    | '/data/projects/$projectId/files'
    | '/data/projects/$projectId/lists'
    | '/data/projects/$projectId/persons'
    | '/data/projects/$projectId/place-levels'
    | '/data/projects/$projectId/reports'
    | '/data/projects/$projectId/subprojects'
    | '/data/projects/$projectId/taxonomies'
    | '/data/projects/$projectId/units'
    | '/data/projects/$projectId/users'
    | '/data/projects/$projectId/vector-layers'
    | '/data/projects/$projectId/wms-layers'
    | '/data/files/$fileId/preview'
    | '/data/projects/$projectId/project'
    | '/data/projects/$projectId/'
    | '/data/projects/$projectId/lists/$listId'
    | '/data/projects/$projectId/subprojects/$subprojectId'
    | '/data/projects/$projectId/taxonomies/$taxonomyId'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId'
    | '/data/projects/$projectId/fields/$fieldId'
    | '/data/projects/$projectId/fields/filter'
    | '/data/projects/$projectId/files/$fileId'
    | '/data/projects/$projectId/lists/filter'
    | '/data/projects/$projectId/persons/filter'
    | '/data/projects/$projectId/reports/filter'
    | '/data/projects/$projectId/subprojects/filter'
    | '/data/projects/$projectId/units/filter'
    | '/data/projects/$projectId/vector-layers/filter'
    | '/data/projects/$projectId/wms-layers/$wmsLayerId'
    | '/data/projects/$projectId/wms-layers/filter'
    | '/data/files/$fileId/preview/'
    | '/data/projects/$projectId/crs/'
    | '/data/projects/$projectId/fields/'
    | '/data/projects/$projectId/files/'
    | '/data/projects/$projectId/lists/'
    | '/data/projects/$projectId/persons/'
    | '/data/projects/$projectId/place-levels/'
    | '/data/projects/$projectId/reports/'
    | '/data/projects/$projectId/subprojects/'
    | '/data/projects/$projectId/taxonomies/'
    | '/data/projects/$projectId/units/'
    | '/data/projects/$projectId/users/'
    | '/data/projects/$projectId/vector-layers/'
    | '/data/projects/$projectId/wms-layers/'
    | '/data/projects/$projectId/lists/$listId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts'
    | '/data/projects/$projectId/subprojects/$subprojectId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess'
    | '/data/projects/$projectId/subprojects/$subprojectId/places'
    | '/data/projects/$projectId/subprojects/$subprojectId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/users'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/taxa'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/displays'
    | '/data/projects/$projectId/files/$fileId/preview'
    | '/data/projects/$projectId/lists/$listId/list'
    | '/data/projects/$projectId/subprojects/$subprojectId/subproject'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/taxonomy'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/vector-layer'
    | '/data/projects/$projectId/crs/$projectCrsId'
    | '/data/projects/$projectId/lists/$listId/'
    | '/data/projects/$projectId/persons/$personId'
    | '/data/projects/$projectId/place-levels/$placeLevelId'
    | '/data/projects/$projectId/reports/$projectReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/'
    | '/data/projects/$projectId/units/$unitId'
    | '/data/projects/$projectId/users/$projectUserId'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId'
    | '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/reports/filter'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/$vectorLayerDisplayId'
    | '/data/projects/$projectId/files/$fileId/preview/'
    | '/data/projects/$projectId/lists/$listId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/'
    | '/data/projects/$projectId/subprojects/$subprojectId/files/'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/'
    | '/data/projects/$projectId/subprojects/$subprojectId/reports/'
    | '/data/projects/$projectId/subprojects/$subprojectId/taxa/'
    | '/data/projects/$projectId/subprojects/$subprojectId/users/'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/chart'
    | '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/goal'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/place'
    | '/data/projects/$projectId/lists/$listId/values/$listValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/$occurrenceImportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/reports/$subprojectReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/taxa/$subprojectTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/users/$subprojectUserId'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/$taxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/'
    | '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview/'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/action'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/check'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/place'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/$chartSubjectId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/$placeUserId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values/$placeReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/$placeReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa/$subprojectTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/action'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/check'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/$goalReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/$actionValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/$checkTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/$checkValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/$placeReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/$placeReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/$actionReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/$actionValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/$checkTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/$checkValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview/'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/$actionReportValueId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/docs'
    | '/data/app-states'
    | '/data/auth'
    | '/'
    | '/data'
    | '/data/accounts/$accountId'
    | '/data/crs/$crsId'
    | '/data/field-types/$fieldTypeId'
    | '/data/field-types/filter'
    | '/data/fields/$fieldId'
    | '/data/fields/filter'
    | '/data/files/$fileId'
    | '/data/messages/$messageId'
    | '/data/projects/filter'
    | '/data/users/$userId'
    | '/data/widget-types/$widgetTypeId'
    | '/data/widget-types/filter'
    | '/data/widgets-for-fields/$widgetForFieldId'
    | '/data/widgets-for-fields/filter'
    | '/data/accounts'
    | '/data/crs'
    | '/data/field-types'
    | '/data/fields'
    | '/data/files'
    | '/data/messages'
    | '/data/projects'
    | '/data/users'
    | '/data/widget-types'
    | '/data/widgets-for-fields'
    | '/data/projects/$projectId/project'
    | '/data/projects/$projectId'
    | '/data/projects/$projectId/fields/$fieldId'
    | '/data/projects/$projectId/fields/filter'
    | '/data/projects/$projectId/files/$fileId'
    | '/data/projects/$projectId/lists/filter'
    | '/data/projects/$projectId/persons/filter'
    | '/data/projects/$projectId/reports/filter'
    | '/data/projects/$projectId/subprojects/filter'
    | '/data/projects/$projectId/units/filter'
    | '/data/projects/$projectId/vector-layers/filter'
    | '/data/projects/$projectId/wms-layers/$wmsLayerId'
    | '/data/projects/$projectId/wms-layers/filter'
    | '/data/files/$fileId/preview'
    | '/data/projects/$projectId/crs'
    | '/data/projects/$projectId/fields'
    | '/data/projects/$projectId/files'
    | '/data/projects/$projectId/lists'
    | '/data/projects/$projectId/persons'
    | '/data/projects/$projectId/place-levels'
    | '/data/projects/$projectId/reports'
    | '/data/projects/$projectId/subprojects'
    | '/data/projects/$projectId/taxonomies'
    | '/data/projects/$projectId/units'
    | '/data/projects/$projectId/users'
    | '/data/projects/$projectId/vector-layers'
    | '/data/projects/$projectId/wms-layers'
    | '/data/projects/$projectId/lists/$listId/list'
    | '/data/projects/$projectId/subprojects/$subprojectId/subproject'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/taxonomy'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/vector-layer'
    | '/data/projects/$projectId/crs/$projectCrsId'
    | '/data/projects/$projectId/lists/$listId'
    | '/data/projects/$projectId/persons/$personId'
    | '/data/projects/$projectId/place-levels/$placeLevelId'
    | '/data/projects/$projectId/reports/$projectReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId'
    | '/data/projects/$projectId/taxonomies/$taxonomyId'
    | '/data/projects/$projectId/units/$unitId'
    | '/data/projects/$projectId/users/$projectUserId'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId'
    | '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/reports/filter'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/displays/$vectorLayerDisplayId'
    | '/data/projects/$projectId/files/$fileId/preview'
    | '/data/projects/$projectId/lists/$listId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts'
    | '/data/projects/$projectId/subprojects/$subprojectId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess'
    | '/data/projects/$projectId/subprojects/$subprojectId/places'
    | '/data/projects/$projectId/subprojects/$subprojectId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/users'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/taxa'
    | '/data/projects/$projectId/vector-layers/$vectorLayerId/displays'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/chart'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/goal'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/place'
    | '/data/projects/$projectId/lists/$listId/values/$listValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrence-imports/$occurrenceImportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-not-to-assign/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/occurrences-to-assess/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId'
    | '/data/projects/$projectId/subprojects/$subprojectId/reports/$subprojectReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/taxa/$subprojectTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/users/$subprojectUserId'
    | '/data/projects/$projectId/taxonomies/$taxonomyId/taxa/$taxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects'
    | '/data/projects/$projectId/subprojects/$subprojectId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/action'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/check'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/place'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/charts/$chartId/subjects/$chartSubjectId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/occurrences/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/users/$placeUserId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/filter'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values/$placeReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/$placeReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/reports/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/taxa/$subprojectTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/action'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/check'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/goals/$goalId/reports/$goalReportId/values/$goalReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/values/$actionValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/taxa/$checkTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/values/$checkValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/occurrences/$occurrenceId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/users/$placeUserId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/reports/$placeReportId/values/$placeReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values/$placeReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/checks/$checkId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/reports/$placeReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/report'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/actions/$actionId/reports/$actionReportId/values/$actionReportValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/values/$actionValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/taxa/$checkTaxonId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/values/$checkValueId'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/checks/$checkId/files/$fileId/preview'
    | '/data/projects/$projectId/subprojects/$subprojectId/places/$placeId/places/$placeId2/actions/$actionId/reports/$actionReportId/values/$actionReportValueId'
  id:
    | '__root__'
    | '/data'
    | '/_layout'
    | '/data/accounts'
    | '/data/crs'
    | '/data/field-types'
    | '/data/fields'
    | '/data/files'
    | '/data/messages'
    | '/data/projects'
    | '/data/users'
    | '/data/widget-types'
    | '/data/widgets-for-fields'
    | '/_layout/docs'
    | '/data/app-states'
    | '/data/auth'
    | '/_layout/'
    | '/data/'
    | '/data/projects/$projectId_'
    | '/data/accounts/$accountId'
    | '/data/crs/$crsId'
    | '/data/field-types/$fieldTypeId'
    | '/data/field-types/filter'
    | '/data/fields/$fieldId'
    | '/data/fields/filter'
    | '/data/files/$fileId'
    | '/data/messages/$messageId'
    | '/data/projects/filter'
    | '/data/users/$userId'
    | '/data/widget-types/$widgetTypeId'
    | '/data/widget-types/filter'
    | '/data/widgets-for-fields/$widgetForFieldId'
    | '/data/widgets-for-fields/filter'
    | '/data/accounts/'
    | '/data/crs/'
    | '/data/field-types/'
    | '/data/fields/'
    | '/data/files/'
    | '/data/messages/'
    | '/data/projects/'
    | '/data/users/'
    | '/data/widget-types/'
    | '/data/widgets-for-fields/'
    | '/data/projects/$projectId_/crs'
    | '/data/projects/$projectId_/fields'
    | '/data/projects/$projectId_/files'
    | '/data/projects/$projectId_/lists'
    | '/data/projects/$projectId_/persons'
    | '/data/projects/$projectId_/place-levels'
    | '/data/projects/$projectId_/reports'
    | '/data/projects/$projectId_/subprojects'
    | '/data/projects/$projectId_/taxonomies'
    | '/data/projects/$projectId_/units'
    | '/data/projects/$projectId_/users'
    | '/data/projects/$projectId_/vector-layers'
    | '/data/projects/$projectId_/wms-layers'
    | '/data/files/$fileId_/preview'
    | '/data/projects/$projectId_/project'
    | '/data/projects/$projectId_/'
    | '/data/projects/$projectId_/lists/$listId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_'
    | '/data/projects/$projectId_/taxonomies/$taxonomyId_'
    | '/data/projects/$projectId_/vector-layers/$vectorLayerId_'
    | '/data/projects/$projectId_/fields/$fieldId'
    | '/data/projects/$projectId_/fields/filter'
    | '/data/projects/$projectId_/files/$fileId'
    | '/data/projects/$projectId_/lists/filter'
    | '/data/projects/$projectId_/persons/filter'
    | '/data/projects/$projectId_/reports/filter'
    | '/data/projects/$projectId_/subprojects/filter'
    | '/data/projects/$projectId_/units/filter'
    | '/data/projects/$projectId_/vector-layers/filter'
    | '/data/projects/$projectId_/wms-layers/$wmsLayerId'
    | '/data/projects/$projectId_/wms-layers/filter'
    | '/data/files/$fileId_/preview/'
    | '/data/projects/$projectId_/crs/'
    | '/data/projects/$projectId_/fields/'
    | '/data/projects/$projectId_/files/'
    | '/data/projects/$projectId_/lists/'
    | '/data/projects/$projectId_/persons/'
    | '/data/projects/$projectId_/place-levels/'
    | '/data/projects/$projectId_/reports/'
    | '/data/projects/$projectId_/subprojects/'
    | '/data/projects/$projectId_/taxonomies/'
    | '/data/projects/$projectId_/units/'
    | '/data/projects/$projectId_/users/'
    | '/data/projects/$projectId_/vector-layers/'
    | '/data/projects/$projectId_/wms-layers/'
    | '/data/projects/$projectId_/lists/$listId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/files'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/reports'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/taxa'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/users'
    | '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa'
    | '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays'
    | '/data/projects/$projectId_/files/$fileId_/preview'
    | '/data/projects/$projectId_/lists/$listId_/list'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/subproject'
    | '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy'
    | '/data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer'
    | '/data/projects/$projectId_/crs/$projectCrsId/'
    | '/data/projects/$projectId_/lists/$listId_/'
    | '/data/projects/$projectId_/persons/$personId/'
    | '/data/projects/$projectId_/place-levels/$placeLevelId/'
    | '/data/projects/$projectId_/reports/$projectReportId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/'
    | '/data/projects/$projectId_/taxonomies/$taxonomyId_/'
    | '/data/projects/$projectId_/units/$unitId/'
    | '/data/projects/$projectId_/users/$projectUserId/'
    | '/data/projects/$projectId_/vector-layers/$vectorLayerId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/reports/filter'
    | '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId'
    | '/data/projects/$projectId_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/lists/$listId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/files/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/reports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/users/'
    | '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/'
    | '/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place'
    | '/data/projects/$projectId_/lists/$listId_/values/$listValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId/'
    | '/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview/'
    | '/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DataRouteRoute: typeof DataRouteRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  DataRouteRoute: DataRouteRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/data",
        "/_layout"
      ]
    },
    "/data": {
      "filePath": "data/route.tsx",
      "children": [
        "/data/accounts",
        "/data/crs",
        "/data/field-types",
        "/data/fields",
        "/data/files",
        "/data/messages",
        "/data/projects",
        "/data/users",
        "/data/widget-types",
        "/data/widgets-for-fields",
        "/data/app-states",
        "/data/auth",
        "/data/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/docs",
        "/_layout/"
      ]
    },
    "/data/accounts": {
      "filePath": "data/accounts/route.tsx",
      "parent": "/data",
      "children": [
        "/data/accounts/$accountId",
        "/data/accounts/"
      ]
    },
    "/data/crs": {
      "filePath": "data/crs/route.tsx",
      "parent": "/data",
      "children": [
        "/data/crs/$crsId",
        "/data/crs/"
      ]
    },
    "/data/field-types": {
      "filePath": "data/field-types/route.tsx",
      "parent": "/data",
      "children": [
        "/data/field-types/$fieldTypeId",
        "/data/field-types/filter",
        "/data/field-types/"
      ]
    },
    "/data/fields": {
      "filePath": "data/fields/route.tsx",
      "parent": "/data",
      "children": [
        "/data/fields/$fieldId",
        "/data/fields/filter",
        "/data/fields/"
      ]
    },
    "/data/files": {
      "filePath": "data/files/route.tsx",
      "parent": "/data",
      "children": [
        "/data/files/$fileId",
        "/data/files/",
        "/data/files/$fileId_/preview"
      ]
    },
    "/data/messages": {
      "filePath": "data/messages/route.tsx",
      "parent": "/data",
      "children": [
        "/data/messages/$messageId",
        "/data/messages/"
      ]
    },
    "/data/projects": {
      "filePath": "data/projects/route.tsx",
      "parent": "/data",
      "children": [
        "/data/projects/$projectId_",
        "/data/projects/filter",
        "/data/projects/"
      ]
    },
    "/data/users": {
      "filePath": "data/users/route.tsx",
      "parent": "/data",
      "children": [
        "/data/users/$userId",
        "/data/users/"
      ]
    },
    "/data/widget-types": {
      "filePath": "data/widget-types/route.tsx",
      "parent": "/data",
      "children": [
        "/data/widget-types/$widgetTypeId",
        "/data/widget-types/filter",
        "/data/widget-types/"
      ]
    },
    "/data/widgets-for-fields": {
      "filePath": "data/widgets-for-fields/route.tsx",
      "parent": "/data",
      "children": [
        "/data/widgets-for-fields/$widgetForFieldId",
        "/data/widgets-for-fields/filter",
        "/data/widgets-for-fields/"
      ]
    },
    "/_layout/docs": {
      "filePath": "_layout.docs.tsx",
      "parent": "/_layout"
    },
    "/data/app-states": {
      "filePath": "data/app-states.tsx",
      "parent": "/data"
    },
    "/data/auth": {
      "filePath": "data/auth.tsx",
      "parent": "/data"
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/data/": {
      "filePath": "data/index.tsx",
      "parent": "/data"
    },
    "/data/projects/$projectId_": {
      "filePath": "data/projects/$projectId_/route.tsx",
      "parent": "/data/projects",
      "children": [
        "/data/projects/$projectId_/crs",
        "/data/projects/$projectId_/fields",
        "/data/projects/$projectId_/files",
        "/data/projects/$projectId_/lists",
        "/data/projects/$projectId_/persons",
        "/data/projects/$projectId_/place-levels",
        "/data/projects/$projectId_/reports",
        "/data/projects/$projectId_/subprojects",
        "/data/projects/$projectId_/taxonomies",
        "/data/projects/$projectId_/units",
        "/data/projects/$projectId_/users",
        "/data/projects/$projectId_/vector-layers",
        "/data/projects/$projectId_/wms-layers",
        "/data/projects/$projectId_/project",
        "/data/projects/$projectId_/"
      ]
    },
    "/data/accounts/$accountId": {
      "filePath": "data/accounts/$accountId.tsx",
      "parent": "/data/accounts"
    },
    "/data/crs/$crsId": {
      "filePath": "data/crs/$crsId.tsx",
      "parent": "/data/crs"
    },
    "/data/field-types/$fieldTypeId": {
      "filePath": "data/field-types/$fieldTypeId.tsx",
      "parent": "/data/field-types"
    },
    "/data/field-types/filter": {
      "filePath": "data/field-types/filter.tsx",
      "parent": "/data/field-types"
    },
    "/data/fields/$fieldId": {
      "filePath": "data/fields/$fieldId.tsx",
      "parent": "/data/fields"
    },
    "/data/fields/filter": {
      "filePath": "data/fields/filter.tsx",
      "parent": "/data/fields"
    },
    "/data/files/$fileId": {
      "filePath": "data/files/$fileId.tsx",
      "parent": "/data/files"
    },
    "/data/messages/$messageId": {
      "filePath": "data/messages/$messageId.tsx",
      "parent": "/data/messages"
    },
    "/data/projects/filter": {
      "filePath": "data/projects/filter.tsx",
      "parent": "/data/projects"
    },
    "/data/users/$userId": {
      "filePath": "data/users/$userId.tsx",
      "parent": "/data/users"
    },
    "/data/widget-types/$widgetTypeId": {
      "filePath": "data/widget-types/$widgetTypeId.tsx",
      "parent": "/data/widget-types"
    },
    "/data/widget-types/filter": {
      "filePath": "data/widget-types/filter.tsx",
      "parent": "/data/widget-types"
    },
    "/data/widgets-for-fields/$widgetForFieldId": {
      "filePath": "data/widgets-for-fields/$widgetForFieldId.tsx",
      "parent": "/data/widgets-for-fields"
    },
    "/data/widgets-for-fields/filter": {
      "filePath": "data/widgets-for-fields/filter.tsx",
      "parent": "/data/widgets-for-fields"
    },
    "/data/accounts/": {
      "filePath": "data/accounts/index.tsx",
      "parent": "/data/accounts"
    },
    "/data/crs/": {
      "filePath": "data/crs/index.tsx",
      "parent": "/data/crs"
    },
    "/data/field-types/": {
      "filePath": "data/field-types/index.tsx",
      "parent": "/data/field-types"
    },
    "/data/fields/": {
      "filePath": "data/fields/index.tsx",
      "parent": "/data/fields"
    },
    "/data/files/": {
      "filePath": "data/files/index.tsx",
      "parent": "/data/files"
    },
    "/data/messages/": {
      "filePath": "data/messages/index.tsx",
      "parent": "/data/messages"
    },
    "/data/projects/": {
      "filePath": "data/projects/index.tsx",
      "parent": "/data/projects"
    },
    "/data/users/": {
      "filePath": "data/users/index.tsx",
      "parent": "/data/users"
    },
    "/data/widget-types/": {
      "filePath": "data/widget-types/index.tsx",
      "parent": "/data/widget-types"
    },
    "/data/widgets-for-fields/": {
      "filePath": "data/widgets-for-fields/index.tsx",
      "parent": "/data/widgets-for-fields"
    },
    "/data/projects/$projectId_/crs": {
      "filePath": "data/projects/$projectId_/crs/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/crs/",
        "/data/projects/$projectId_/crs/$projectCrsId/"
      ]
    },
    "/data/projects/$projectId_/fields": {
      "filePath": "data/projects/$projectId_/fields/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/fields/$fieldId",
        "/data/projects/$projectId_/fields/filter",
        "/data/projects/$projectId_/fields/"
      ]
    },
    "/data/projects/$projectId_/files": {
      "filePath": "data/projects/$projectId_/files/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/files/$fileId",
        "/data/projects/$projectId_/files/",
        "/data/projects/$projectId_/files/$fileId_/preview"
      ]
    },
    "/data/projects/$projectId_/lists": {
      "filePath": "data/projects/$projectId_/lists/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/lists/$listId_",
        "/data/projects/$projectId_/lists/filter",
        "/data/projects/$projectId_/lists/"
      ]
    },
    "/data/projects/$projectId_/persons": {
      "filePath": "data/projects/$projectId_/persons/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/persons/filter",
        "/data/projects/$projectId_/persons/",
        "/data/projects/$projectId_/persons/$personId/"
      ]
    },
    "/data/projects/$projectId_/place-levels": {
      "filePath": "data/projects/$projectId_/place-levels/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/place-levels/",
        "/data/projects/$projectId_/place-levels/$placeLevelId/"
      ]
    },
    "/data/projects/$projectId_/reports": {
      "filePath": "data/projects/$projectId_/reports/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/reports/filter",
        "/data/projects/$projectId_/reports/",
        "/data/projects/$projectId_/reports/$projectReportId/"
      ]
    },
    "/data/projects/$projectId_/subprojects": {
      "filePath": "data/projects/$projectId_/subprojects/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_",
        "/data/projects/$projectId_/subprojects/filter",
        "/data/projects/$projectId_/subprojects/"
      ]
    },
    "/data/projects/$projectId_/taxonomies": {
      "filePath": "data/projects/$projectId_/taxonomies/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/taxonomies/$taxonomyId_",
        "/data/projects/$projectId_/taxonomies/"
      ]
    },
    "/data/projects/$projectId_/units": {
      "filePath": "data/projects/$projectId_/units/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/units/filter",
        "/data/projects/$projectId_/units/",
        "/data/projects/$projectId_/units/$unitId/"
      ]
    },
    "/data/projects/$projectId_/users": {
      "filePath": "data/projects/$projectId_/users/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/users/",
        "/data/projects/$projectId_/users/$projectUserId/"
      ]
    },
    "/data/projects/$projectId_/vector-layers": {
      "filePath": "data/projects/$projectId_/vector-layers/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/vector-layers/$vectorLayerId_",
        "/data/projects/$projectId_/vector-layers/filter",
        "/data/projects/$projectId_/vector-layers/"
      ]
    },
    "/data/projects/$projectId_/wms-layers": {
      "filePath": "data/projects/$projectId_/wms-layers/route.tsx",
      "parent": "/data/projects/$projectId_",
      "children": [
        "/data/projects/$projectId_/wms-layers/$wmsLayerId",
        "/data/projects/$projectId_/wms-layers/filter",
        "/data/projects/$projectId_/wms-layers/"
      ]
    },
    "/data/files/$fileId_/preview": {
      "filePath": "data/files/$fileId_/preview.tsx",
      "parent": "/data/files",
      "children": [
        "/data/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/project": {
      "filePath": "data/projects/$projectId_/project.tsx",
      "parent": "/data/projects/$projectId_"
    },
    "/data/projects/$projectId_/": {
      "filePath": "data/projects/$projectId_/index.tsx",
      "parent": "/data/projects/$projectId_"
    },
    "/data/projects/$projectId_/lists/$listId_": {
      "filePath": "data/projects/$projectId_/lists/$listId_/route.tsx",
      "parent": "/data/projects/$projectId_/lists",
      "children": [
        "/data/projects/$projectId_/lists/$listId_/values",
        "/data/projects/$projectId_/lists/$listId_/list",
        "/data/projects/$projectId_/lists/$listId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts",
        "/data/projects/$projectId_/subprojects/$subprojectId_/files",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals",
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports",
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign",
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places",
        "/data/projects/$projectId_/subprojects/$subprojectId_/reports",
        "/data/projects/$projectId_/subprojects/$subprojectId_/taxa",
        "/data/projects/$projectId_/subprojects/$subprojectId_/users",
        "/data/projects/$projectId_/subprojects/$subprojectId_/subproject",
        "/data/projects/$projectId_/subprojects/$subprojectId_/"
      ]
    },
    "/data/projects/$projectId_/taxonomies/$taxonomyId_": {
      "filePath": "data/projects/$projectId_/taxonomies/$taxonomyId_/route.tsx",
      "parent": "/data/projects/$projectId_/taxonomies",
      "children": [
        "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa",
        "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy",
        "/data/projects/$projectId_/taxonomies/$taxonomyId_/"
      ]
    },
    "/data/projects/$projectId_/vector-layers/$vectorLayerId_": {
      "filePath": "data/projects/$projectId_/vector-layers/$vectorLayerId_/route.tsx",
      "parent": "/data/projects/$projectId_/vector-layers",
      "children": [
        "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays",
        "/data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer",
        "/data/projects/$projectId_/vector-layers/$vectorLayerId_/"
      ]
    },
    "/data/projects/$projectId_/fields/$fieldId": {
      "filePath": "data/projects/$projectId_/fields/$fieldId.tsx",
      "parent": "/data/projects/$projectId_/fields"
    },
    "/data/projects/$projectId_/fields/filter": {
      "filePath": "data/projects/$projectId_/fields/filter.tsx",
      "parent": "/data/projects/$projectId_/fields"
    },
    "/data/projects/$projectId_/files/$fileId": {
      "filePath": "data/projects/$projectId_/files/$fileId.tsx",
      "parent": "/data/projects/$projectId_/files"
    },
    "/data/projects/$projectId_/lists/filter": {
      "filePath": "data/projects/$projectId_/lists/filter.tsx",
      "parent": "/data/projects/$projectId_/lists"
    },
    "/data/projects/$projectId_/persons/filter": {
      "filePath": "data/projects/$projectId_/persons/filter.tsx",
      "parent": "/data/projects/$projectId_/persons"
    },
    "/data/projects/$projectId_/reports/filter": {
      "filePath": "data/projects/$projectId_/reports/filter.tsx",
      "parent": "/data/projects/$projectId_/reports"
    },
    "/data/projects/$projectId_/subprojects/filter": {
      "filePath": "data/projects/$projectId_/subprojects/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects"
    },
    "/data/projects/$projectId_/units/filter": {
      "filePath": "data/projects/$projectId_/units/filter.tsx",
      "parent": "/data/projects/$projectId_/units"
    },
    "/data/projects/$projectId_/vector-layers/filter": {
      "filePath": "data/projects/$projectId_/vector-layers/filter.tsx",
      "parent": "/data/projects/$projectId_/vector-layers"
    },
    "/data/projects/$projectId_/wms-layers/$wmsLayerId": {
      "filePath": "data/projects/$projectId_/wms-layers/$wmsLayerId.tsx",
      "parent": "/data/projects/$projectId_/wms-layers"
    },
    "/data/projects/$projectId_/wms-layers/filter": {
      "filePath": "data/projects/$projectId_/wms-layers/filter.tsx",
      "parent": "/data/projects/$projectId_/wms-layers"
    },
    "/data/files/$fileId_/preview/": {
      "filePath": "data/files/$fileId_/preview.index.tsx",
      "parent": "/data/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/crs/": {
      "filePath": "data/projects/$projectId_/crs/index.tsx",
      "parent": "/data/projects/$projectId_/crs"
    },
    "/data/projects/$projectId_/fields/": {
      "filePath": "data/projects/$projectId_/fields/index.tsx",
      "parent": "/data/projects/$projectId_/fields"
    },
    "/data/projects/$projectId_/files/": {
      "filePath": "data/projects/$projectId_/files/index.tsx",
      "parent": "/data/projects/$projectId_/files"
    },
    "/data/projects/$projectId_/lists/": {
      "filePath": "data/projects/$projectId_/lists/index.tsx",
      "parent": "/data/projects/$projectId_/lists"
    },
    "/data/projects/$projectId_/persons/": {
      "filePath": "data/projects/$projectId_/persons/index.tsx",
      "parent": "/data/projects/$projectId_/persons"
    },
    "/data/projects/$projectId_/place-levels/": {
      "filePath": "data/projects/$projectId_/place-levels/index.tsx",
      "parent": "/data/projects/$projectId_/place-levels"
    },
    "/data/projects/$projectId_/reports/": {
      "filePath": "data/projects/$projectId_/reports/index.tsx",
      "parent": "/data/projects/$projectId_/reports"
    },
    "/data/projects/$projectId_/subprojects/": {
      "filePath": "data/projects/$projectId_/subprojects/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects"
    },
    "/data/projects/$projectId_/taxonomies/": {
      "filePath": "data/projects/$projectId_/taxonomies/index.tsx",
      "parent": "/data/projects/$projectId_/taxonomies"
    },
    "/data/projects/$projectId_/units/": {
      "filePath": "data/projects/$projectId_/units/index.tsx",
      "parent": "/data/projects/$projectId_/units"
    },
    "/data/projects/$projectId_/users/": {
      "filePath": "data/projects/$projectId_/users/index.tsx",
      "parent": "/data/projects/$projectId_/users"
    },
    "/data/projects/$projectId_/vector-layers/": {
      "filePath": "data/projects/$projectId_/vector-layers/index.tsx",
      "parent": "/data/projects/$projectId_/vector-layers"
    },
    "/data/projects/$projectId_/wms-layers/": {
      "filePath": "data/projects/$projectId_/wms-layers/index.tsx",
      "parent": "/data/projects/$projectId_/wms-layers"
    },
    "/data/projects/$projectId_/lists/$listId_/values": {
      "filePath": "data/projects/$projectId_/lists/$listId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/lists/$listId_",
      "children": [
        "/data/projects/$projectId_/lists/$listId_/values/",
        "/data/projects/$projectId_/lists/$listId_/values/$listValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/files": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/files/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/files/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/reports": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/reports/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/reports/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/reports/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/taxa": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/taxa/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/taxa/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/users": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/users/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/users/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId/"
      ]
    },
    "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa": {
      "filePath": "data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/route.tsx",
      "parent": "/data/projects/$projectId_/taxonomies/$taxonomyId_",
      "children": [
        "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/",
        "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId/"
      ]
    },
    "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays": {
      "filePath": "data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/route.tsx",
      "parent": "/data/projects/$projectId_/vector-layers/$vectorLayerId_",
      "children": [
        "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId",
        "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/"
      ]
    },
    "/data/projects/$projectId_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/files",
      "children": [
        "/data/projects/$projectId_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/lists/$listId_/list": {
      "filePath": "data/projects/$projectId_/lists/$listId_/list.tsx",
      "parent": "/data/projects/$projectId_/lists/$listId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/subproject": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/subproject.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_"
    },
    "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy": {
      "filePath": "data/projects/$projectId_/taxonomies/$taxonomyId_/taxonomy.tsx",
      "parent": "/data/projects/$projectId_/taxonomies/$taxonomyId_"
    },
    "/data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer": {
      "filePath": "data/projects/$projectId_/vector-layers/$vectorLayerId_/vector-layer.tsx",
      "parent": "/data/projects/$projectId_/vector-layers/$vectorLayerId_"
    },
    "/data/projects/$projectId_/crs/$projectCrsId/": {
      "filePath": "data/projects/$projectId_/crs/$projectCrsId.index.tsx",
      "parent": "/data/projects/$projectId_/crs"
    },
    "/data/projects/$projectId_/lists/$listId_/": {
      "filePath": "data/projects/$projectId_/lists/$listId_/index.tsx",
      "parent": "/data/projects/$projectId_/lists/$listId_"
    },
    "/data/projects/$projectId_/persons/$personId/": {
      "filePath": "data/projects/$projectId_/persons/$personId.index.tsx",
      "parent": "/data/projects/$projectId_/persons"
    },
    "/data/projects/$projectId_/place-levels/$placeLevelId/": {
      "filePath": "data/projects/$projectId_/place-levels/$placeLevelId.index.tsx",
      "parent": "/data/projects/$projectId_/place-levels"
    },
    "/data/projects/$projectId_/reports/$projectReportId/": {
      "filePath": "data/projects/$projectId_/reports/$projectReportId.index.tsx",
      "parent": "/data/projects/$projectId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_"
    },
    "/data/projects/$projectId_/taxonomies/$taxonomyId_/": {
      "filePath": "data/projects/$projectId_/taxonomies/$taxonomyId_/index.tsx",
      "parent": "/data/projects/$projectId_/taxonomies/$taxonomyId_"
    },
    "/data/projects/$projectId_/units/$unitId/": {
      "filePath": "data/projects/$projectId_/units/$unitId.index.tsx",
      "parent": "/data/projects/$projectId_/units"
    },
    "/data/projects/$projectId_/users/$projectUserId/": {
      "filePath": "data/projects/$projectId_/users/$projectUserId.index.tsx",
      "parent": "/data/projects/$projectId_/users"
    },
    "/data/projects/$projectId_/vector-layers/$vectorLayerId_/": {
      "filePath": "data/projects/$projectId_/vector-layers/$vectorLayerId_/index.tsx",
      "parent": "/data/projects/$projectId_/vector-layers/$vectorLayerId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/charts",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects",
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart",
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/reports/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/reports/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/reports"
    },
    "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId": {
      "filePath": "data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/$vectorLayerDisplayId.tsx",
      "parent": "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays"
    },
    "/data/projects/$projectId_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/lists/$listId_/values/": {
      "filePath": "data/projects/$projectId_/lists/$listId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/lists/$listId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/charts"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/files/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/files/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/reports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/reports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/taxa/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/taxa/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/taxa"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/users/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/users/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/users"
    },
    "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/": {
      "filePath": "data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/index.tsx",
      "parent": "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa"
    },
    "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/": {
      "filePath": "data/projects/$projectId_/vector-layers/$vectorLayerId_/displays/index.tsx",
      "parent": "/data/projects/$projectId_/vector-layers/$vectorLayerId_/displays"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/chart.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/files",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/goal.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/place.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_"
    },
    "/data/projects/$projectId_/lists/$listId_/values/$listValueId/": {
      "filePath": "data/projects/$projectId_/lists/$listId_/values/$listValueId.index.tsx",
      "parent": "/data/projects/$projectId_/lists/$listId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports/$occurrenceImportId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/occurrence-imports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign/$occurrenceId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-not-to-assign"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess/$occurrenceId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/occurrences-to-assess"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/reports/$subprojectReportId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/taxa/$subprojectTaxonId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/taxa"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/users/$subprojectUserId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/users"
    },
    "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId/": {
      "filePath": "data/projects/$projectId_/taxonomies/$taxonomyId_/taxa/$taxonId.index.tsx",
      "parent": "/data/projects/$projectId_/taxonomies/$taxonomyId_/taxa"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/report.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/action.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/check.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/place.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/report.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects/$chartSubjectId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/charts/$chartId_/subjects"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences/$occurrenceId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/occurrences"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users/$placeUserId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/users"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/filter.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/$placeReportValueId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/$placeReportId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/reports/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/taxa/$subprojectTaxonId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/report.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/action.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/check.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/report.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values/$goalReportValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/goals/$goalId_/reports/$goalReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values/$actionValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa/$checkTaxonId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/taxa"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values/$checkValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences/$occurrenceId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/occurrences"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/users/$placeUserId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values/$placeReportValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/reports/$placeReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/$placeReportValueId.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/checks/$checkId_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/reports/$placeReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/route.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/",
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/report.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_",
      "children": [
        "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview/"
      ]
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/actions/$actionId_/reports/$actionReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values/$actionValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa/$checkTaxonId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/taxa"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values/$checkValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/checks/$checkId_/files/$fileId_/preview"
    },
    "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId/": {
      "filePath": "data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values/$actionReportValueId.index.tsx",
      "parent": "/data/projects/$projectId_/subprojects/$subprojectId_/places/$placeId_/places/$placeId2_/actions/$actionId_/reports/$actionReportId_/values"
    }
  }
}
ROUTE_MANIFEST_END */
