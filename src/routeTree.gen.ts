/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as LayoutDocsImport } from './routes/_layout.docs'
import { Route as DataAuthLayoutRouteImport } from './routes/data/_authLayout/route'
import { Route as DataAuthLayoutAuthImport } from './routes/data/_authLayout/auth'
import { Route as DataAuthLayoutUsersIndexImport } from './routes/data/_authLayout/users/index'
import { Route as DataAuthLayoutProjectsIndexImport } from './routes/data/_authLayout/projects/index'
import { Route as DataAuthLayoutFieldTypesIndexImport } from './routes/data/_authLayout/field-types/index'
import { Route as DataAuthLayoutAccountsIndexImport } from './routes/data/_authLayout/accounts/index'
import { Route as DataAuthLayoutUsersUserIdImport } from './routes/data/_authLayout/users/$userId'
import { Route as DataAuthLayoutProjectsProjectIdImport } from './routes/data/_authLayout/projects/$projectId'
import { Route as DataAuthLayoutFieldTypesFieldTypeIdImport } from './routes/data/_authLayout/field-types/$fieldTypeId'
import { Route as DataAuthLayoutAccountsAccountIdImport } from './routes/data/_authLayout/accounts/$accountId'

// Create Virtual Routes

const DataImport = createFileRoute('/data')()

// Create/Update Routes

const DataRoute = DataImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDocsRoute = LayoutDocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => LayoutRoute,
} as any)

const DataAuthLayoutRouteRoute = DataAuthLayoutRouteImport.update({
  id: '/_authLayout',
  getParentRoute: () => DataRoute,
} as any)

const DataAuthLayoutAuthRoute = DataAuthLayoutAuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => DataAuthLayoutRouteRoute,
} as any)

const DataAuthLayoutUsersIndexRoute = DataAuthLayoutUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => DataAuthLayoutRouteRoute,
} as any)

const DataAuthLayoutProjectsIndexRoute =
  DataAuthLayoutProjectsIndexImport.update({
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => DataAuthLayoutRouteRoute,
  } as any)

const DataAuthLayoutFieldTypesIndexRoute =
  DataAuthLayoutFieldTypesIndexImport.update({
    id: '/field-types/',
    path: '/field-types/',
    getParentRoute: () => DataAuthLayoutRouteRoute,
  } as any)

const DataAuthLayoutAccountsIndexRoute =
  DataAuthLayoutAccountsIndexImport.update({
    id: '/accounts/',
    path: '/accounts/',
    getParentRoute: () => DataAuthLayoutRouteRoute,
  } as any)

const DataAuthLayoutUsersUserIdRoute = DataAuthLayoutUsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => DataAuthLayoutRouteRoute,
} as any)

const DataAuthLayoutProjectsProjectIdRoute =
  DataAuthLayoutProjectsProjectIdImport.update({
    id: '/projects/$projectId',
    path: '/projects/$projectId',
    getParentRoute: () => DataAuthLayoutRouteRoute,
  } as any)

const DataAuthLayoutFieldTypesFieldTypeIdRoute =
  DataAuthLayoutFieldTypesFieldTypeIdImport.update({
    id: '/field-types/$fieldTypeId',
    path: '/field-types/$fieldTypeId',
    getParentRoute: () => DataAuthLayoutRouteRoute,
  } as any)

const DataAuthLayoutAccountsAccountIdRoute =
  DataAuthLayoutAccountsAccountIdImport.update({
    id: '/accounts/$accountId',
    path: '/accounts/$accountId',
    getParentRoute: () => DataAuthLayoutRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/data': {
      id: '/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataImport
      parentRoute: typeof rootRoute
    }
    '/data/_authLayout': {
      id: '/data/_authLayout'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof DataAuthLayoutRouteImport
      parentRoute: typeof DataRoute
    }
    '/_layout/docs': {
      id: '/_layout/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof LayoutDocsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/data/_authLayout/auth': {
      id: '/data/_authLayout/auth'
      path: '/auth'
      fullPath: '/data/auth'
      preLoaderRoute: typeof DataAuthLayoutAuthImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/accounts/$accountId': {
      id: '/data/_authLayout/accounts/$accountId'
      path: '/accounts/$accountId'
      fullPath: '/data/accounts/$accountId'
      preLoaderRoute: typeof DataAuthLayoutAccountsAccountIdImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/field-types/$fieldTypeId': {
      id: '/data/_authLayout/field-types/$fieldTypeId'
      path: '/field-types/$fieldTypeId'
      fullPath: '/data/field-types/$fieldTypeId'
      preLoaderRoute: typeof DataAuthLayoutFieldTypesFieldTypeIdImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/projects/$projectId': {
      id: '/data/_authLayout/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/data/projects/$projectId'
      preLoaderRoute: typeof DataAuthLayoutProjectsProjectIdImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/users/$userId': {
      id: '/data/_authLayout/users/$userId'
      path: '/users/$userId'
      fullPath: '/data/users/$userId'
      preLoaderRoute: typeof DataAuthLayoutUsersUserIdImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/accounts/': {
      id: '/data/_authLayout/accounts/'
      path: '/accounts'
      fullPath: '/data/accounts'
      preLoaderRoute: typeof DataAuthLayoutAccountsIndexImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/field-types/': {
      id: '/data/_authLayout/field-types/'
      path: '/field-types'
      fullPath: '/data/field-types'
      preLoaderRoute: typeof DataAuthLayoutFieldTypesIndexImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/projects/': {
      id: '/data/_authLayout/projects/'
      path: '/projects'
      fullPath: '/data/projects'
      preLoaderRoute: typeof DataAuthLayoutProjectsIndexImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
    '/data/_authLayout/users/': {
      id: '/data/_authLayout/users/'
      path: '/users'
      fullPath: '/data/users'
      preLoaderRoute: typeof DataAuthLayoutUsersIndexImport
      parentRoute: typeof DataAuthLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutDocsRoute: typeof LayoutDocsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDocsRoute: LayoutDocsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface DataAuthLayoutRouteRouteChildren {
  DataAuthLayoutAuthRoute: typeof DataAuthLayoutAuthRoute
  DataAuthLayoutAccountsAccountIdRoute: typeof DataAuthLayoutAccountsAccountIdRoute
  DataAuthLayoutFieldTypesFieldTypeIdRoute: typeof DataAuthLayoutFieldTypesFieldTypeIdRoute
  DataAuthLayoutProjectsProjectIdRoute: typeof DataAuthLayoutProjectsProjectIdRoute
  DataAuthLayoutUsersUserIdRoute: typeof DataAuthLayoutUsersUserIdRoute
  DataAuthLayoutAccountsIndexRoute: typeof DataAuthLayoutAccountsIndexRoute
  DataAuthLayoutFieldTypesIndexRoute: typeof DataAuthLayoutFieldTypesIndexRoute
  DataAuthLayoutProjectsIndexRoute: typeof DataAuthLayoutProjectsIndexRoute
  DataAuthLayoutUsersIndexRoute: typeof DataAuthLayoutUsersIndexRoute
}

const DataAuthLayoutRouteRouteChildren: DataAuthLayoutRouteRouteChildren = {
  DataAuthLayoutAuthRoute: DataAuthLayoutAuthRoute,
  DataAuthLayoutAccountsAccountIdRoute: DataAuthLayoutAccountsAccountIdRoute,
  DataAuthLayoutFieldTypesFieldTypeIdRoute:
    DataAuthLayoutFieldTypesFieldTypeIdRoute,
  DataAuthLayoutProjectsProjectIdRoute: DataAuthLayoutProjectsProjectIdRoute,
  DataAuthLayoutUsersUserIdRoute: DataAuthLayoutUsersUserIdRoute,
  DataAuthLayoutAccountsIndexRoute: DataAuthLayoutAccountsIndexRoute,
  DataAuthLayoutFieldTypesIndexRoute: DataAuthLayoutFieldTypesIndexRoute,
  DataAuthLayoutProjectsIndexRoute: DataAuthLayoutProjectsIndexRoute,
  DataAuthLayoutUsersIndexRoute: DataAuthLayoutUsersIndexRoute,
}

const DataAuthLayoutRouteRouteWithChildren =
  DataAuthLayoutRouteRoute._addFileChildren(DataAuthLayoutRouteRouteChildren)

interface DataRouteChildren {
  DataAuthLayoutRouteRoute: typeof DataAuthLayoutRouteRouteWithChildren
}

const DataRouteChildren: DataRouteChildren = {
  DataAuthLayoutRouteRoute: DataAuthLayoutRouteRouteWithChildren,
}

const DataRouteWithChildren = DataRoute._addFileChildren(DataRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/data': typeof DataAuthLayoutRouteRouteWithChildren
  '/docs': typeof LayoutDocsRoute
  '/': typeof LayoutIndexRoute
  '/data/auth': typeof DataAuthLayoutAuthRoute
  '/data/accounts/$accountId': typeof DataAuthLayoutAccountsAccountIdRoute
  '/data/field-types/$fieldTypeId': typeof DataAuthLayoutFieldTypesFieldTypeIdRoute
  '/data/projects/$projectId': typeof DataAuthLayoutProjectsProjectIdRoute
  '/data/users/$userId': typeof DataAuthLayoutUsersUserIdRoute
  '/data/accounts': typeof DataAuthLayoutAccountsIndexRoute
  '/data/field-types': typeof DataAuthLayoutFieldTypesIndexRoute
  '/data/projects': typeof DataAuthLayoutProjectsIndexRoute
  '/data/users': typeof DataAuthLayoutUsersIndexRoute
}

export interface FileRoutesByTo {
  '/data': typeof DataAuthLayoutRouteRouteWithChildren
  '/docs': typeof LayoutDocsRoute
  '/': typeof LayoutIndexRoute
  '/data/auth': typeof DataAuthLayoutAuthRoute
  '/data/accounts/$accountId': typeof DataAuthLayoutAccountsAccountIdRoute
  '/data/field-types/$fieldTypeId': typeof DataAuthLayoutFieldTypesFieldTypeIdRoute
  '/data/projects/$projectId': typeof DataAuthLayoutProjectsProjectIdRoute
  '/data/users/$userId': typeof DataAuthLayoutUsersUserIdRoute
  '/data/accounts': typeof DataAuthLayoutAccountsIndexRoute
  '/data/field-types': typeof DataAuthLayoutFieldTypesIndexRoute
  '/data/projects': typeof DataAuthLayoutProjectsIndexRoute
  '/data/users': typeof DataAuthLayoutUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/data': typeof DataRouteWithChildren
  '/data/_authLayout': typeof DataAuthLayoutRouteRouteWithChildren
  '/_layout/docs': typeof LayoutDocsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/data/_authLayout/auth': typeof DataAuthLayoutAuthRoute
  '/data/_authLayout/accounts/$accountId': typeof DataAuthLayoutAccountsAccountIdRoute
  '/data/_authLayout/field-types/$fieldTypeId': typeof DataAuthLayoutFieldTypesFieldTypeIdRoute
  '/data/_authLayout/projects/$projectId': typeof DataAuthLayoutProjectsProjectIdRoute
  '/data/_authLayout/users/$userId': typeof DataAuthLayoutUsersUserIdRoute
  '/data/_authLayout/accounts/': typeof DataAuthLayoutAccountsIndexRoute
  '/data/_authLayout/field-types/': typeof DataAuthLayoutFieldTypesIndexRoute
  '/data/_authLayout/projects/': typeof DataAuthLayoutProjectsIndexRoute
  '/data/_authLayout/users/': typeof DataAuthLayoutUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/data'
    | '/docs'
    | '/'
    | '/data/auth'
    | '/data/accounts/$accountId'
    | '/data/field-types/$fieldTypeId'
    | '/data/projects/$projectId'
    | '/data/users/$userId'
    | '/data/accounts'
    | '/data/field-types'
    | '/data/projects'
    | '/data/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/data'
    | '/docs'
    | '/'
    | '/data/auth'
    | '/data/accounts/$accountId'
    | '/data/field-types/$fieldTypeId'
    | '/data/projects/$projectId'
    | '/data/users/$userId'
    | '/data/accounts'
    | '/data/field-types'
    | '/data/projects'
    | '/data/users'
  id:
    | '__root__'
    | '/_layout'
    | '/data'
    | '/data/_authLayout'
    | '/_layout/docs'
    | '/_layout/'
    | '/data/_authLayout/auth'
    | '/data/_authLayout/accounts/$accountId'
    | '/data/_authLayout/field-types/$fieldTypeId'
    | '/data/_authLayout/projects/$projectId'
    | '/data/_authLayout/users/$userId'
    | '/data/_authLayout/accounts/'
    | '/data/_authLayout/field-types/'
    | '/data/_authLayout/projects/'
    | '/data/_authLayout/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  DataRoute: typeof DataRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  DataRoute: DataRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/data"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/docs",
        "/_layout/"
      ]
    },
    "/data": {
      "filePath": "data/_authLayout",
      "children": [
        "/data/_authLayout"
      ]
    },
    "/data/_authLayout": {
      "filePath": "data/_authLayout/route.tsx",
      "parent": "/data",
      "children": [
        "/data/_authLayout/auth",
        "/data/_authLayout/accounts/$accountId",
        "/data/_authLayout/field-types/$fieldTypeId",
        "/data/_authLayout/projects/$projectId",
        "/data/_authLayout/users/$userId",
        "/data/_authLayout/accounts/",
        "/data/_authLayout/field-types/",
        "/data/_authLayout/projects/",
        "/data/_authLayout/users/"
      ]
    },
    "/_layout/docs": {
      "filePath": "_layout.docs.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/data/_authLayout/auth": {
      "filePath": "data/_authLayout/auth.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/accounts/$accountId": {
      "filePath": "data/_authLayout/accounts/$accountId.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/field-types/$fieldTypeId": {
      "filePath": "data/_authLayout/field-types/$fieldTypeId.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/projects/$projectId": {
      "filePath": "data/_authLayout/projects/$projectId.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/users/$userId": {
      "filePath": "data/_authLayout/users/$userId.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/accounts/": {
      "filePath": "data/_authLayout/accounts/index.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/field-types/": {
      "filePath": "data/_authLayout/field-types/index.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/projects/": {
      "filePath": "data/_authLayout/projects/index.tsx",
      "parent": "/data/_authLayout"
    },
    "/data/_authLayout/users/": {
      "filePath": "data/_authLayout/users/index.tsx",
      "parent": "/data/_authLayout"
    }
  }
}
ROUTE_MANIFEST_END */
